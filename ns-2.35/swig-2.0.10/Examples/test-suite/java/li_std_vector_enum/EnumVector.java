/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package li_std_vector_enum;

public class EnumVector {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected EnumVector(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(EnumVector obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        li_std_vector_enumJNI.delete_EnumVector(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public EnumVector() {
    this(li_std_vector_enumJNI.new_EnumVector(), true);
  }

  public void setNums(vector_numbers value) {
    li_std_vector_enumJNI.EnumVector_nums_set(swigCPtr, this, vector_numbers.getCPtr(value), value);
  }

  public vector_numbers getNums() {
    long cPtr = li_std_vector_enumJNI.EnumVector_nums_get(swigCPtr, this);
    return (cPtr == 0) ? null : new vector_numbers(cPtr, false);
  }

  public void fill_numbers() {
    li_std_vector_enumJNI.EnumVector_fill_numbers(swigCPtr, this);
  }

  public final static class numbers {
    public final static EnumVector.numbers ten = new EnumVector.numbers("ten", li_std_vector_enumJNI.EnumVector_ten_get());
    public final static EnumVector.numbers twenty = new EnumVector.numbers("twenty", li_std_vector_enumJNI.EnumVector_twenty_get());
    public final static EnumVector.numbers thirty = new EnumVector.numbers("thirty", li_std_vector_enumJNI.EnumVector_thirty_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static numbers swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + numbers.class + " with value " + swigValue);
    }

    private numbers(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private numbers(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private numbers(String swigName, numbers swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static numbers[] swigValues = { ten, twenty, thirty };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
