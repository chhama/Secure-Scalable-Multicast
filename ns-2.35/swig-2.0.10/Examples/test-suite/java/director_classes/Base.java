/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package director_classes;

public class Base {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Base(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Base obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        director_classesJNI.delete_Base(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    director_classesJNI.Base_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    director_classesJNI.Base_change_ownership(this, swigCPtr, true);
  }

  public Base(double dd) {
    this(director_classesJNI.new_Base(dd), true);
    director_classesJNI.Base_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public DoubleHolder Val(DoubleHolder x) {
    return new DoubleHolder((getClass() == Base.class) ? director_classesJNI.Base_Val(swigCPtr, this, DoubleHolder.getCPtr(x), x) : director_classesJNI.Base_ValSwigExplicitBase(swigCPtr, this, DoubleHolder.getCPtr(x), x), true);
  }

  public DoubleHolder Ref(DoubleHolder x) {
    return new DoubleHolder((getClass() == Base.class) ? director_classesJNI.Base_Ref(swigCPtr, this, DoubleHolder.getCPtr(x), x) : director_classesJNI.Base_RefSwigExplicitBase(swigCPtr, this, DoubleHolder.getCPtr(x), x), false);
  }

  public DoubleHolder Ptr(DoubleHolder x) {
    long cPtr = (getClass() == Base.class) ? director_classesJNI.Base_Ptr(swigCPtr, this, DoubleHolder.getCPtr(x), x) : director_classesJNI.Base_PtrSwigExplicitBase(swigCPtr, this, DoubleHolder.getCPtr(x), x);
    return (cPtr == 0) ? null : new DoubleHolder(cPtr, false);
  }

  public String FullyOverloaded(int x) {
    return (getClass() == Base.class) ? director_classesJNI.Base_FullyOverloaded__SWIG_0(swigCPtr, this, x) : director_classesJNI.Base_FullyOverloadedSwigExplicitBase__SWIG_0(swigCPtr, this, x);
  }

  public String FullyOverloaded(boolean x) {
    return (getClass() == Base.class) ? director_classesJNI.Base_FullyOverloaded__SWIG_1(swigCPtr, this, x) : director_classesJNI.Base_FullyOverloadedSwigExplicitBase__SWIG_1(swigCPtr, this, x);
  }

  public String SemiOverloaded(int x) {
    return (getClass() == Base.class) ? director_classesJNI.Base_SemiOverloaded__SWIG_0(swigCPtr, this, x) : director_classesJNI.Base_SemiOverloadedSwigExplicitBase__SWIG_0(swigCPtr, this, x);
  }

  public String SemiOverloaded(boolean x) {
    return (getClass() == Base.class) ? director_classesJNI.Base_SemiOverloaded__SWIG_1(swigCPtr, this, x) : director_classesJNI.Base_SemiOverloadedSwigExplicitBase__SWIG_1(swigCPtr, this, x);
  }

  public String DefaultParms(int x, double y) {
    return (getClass() == Base.class) ? director_classesJNI.Base_DefaultParms__SWIG_0(swigCPtr, this, x, y) : director_classesJNI.Base_DefaultParmsSwigExplicitBase__SWIG_0(swigCPtr, this, x, y);
  }

  public String DefaultParms(int x) {
    return (getClass() == Base.class) ? director_classesJNI.Base_DefaultParms__SWIG_1(swigCPtr, this, x) : director_classesJNI.Base_DefaultParmsSwigExplicitBase__SWIG_1(swigCPtr, this, x);
  }

}
