/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package refcount;

public class B extends RCObj {
  private long swigCPtr;

  protected B(long cPtr, boolean cMemoryOwn) {
    super(refcountJNI.B_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(B obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        refcountJNI.delete_B(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public B(A a) {
    this(refcountJNI.new_B(A.getCPtr(a), a), true);
  }

  public A get_a() {
    long cPtr = refcountJNI.B_get_a(swigCPtr, this);
    return (cPtr == 0) ? null : new A(cPtr, false);
  }

  public static B create(A a) {
    long cPtr = refcountJNI.B_create(A.getCPtr(a), a);
    return (cPtr == 0) ? null : new B(cPtr, true);
  }

  public B cloner() {
    long cPtr = refcountJNI.B_cloner(swigCPtr, this);
    return (cPtr == 0) ? null : new B(cPtr, true);
  }

  public SWIGTYPE_p_RCPtrT_A_t get_rca() {
    return new SWIGTYPE_p_RCPtrT_A_t(refcountJNI.B_get_rca(swigCPtr, this), true);
  }

}
