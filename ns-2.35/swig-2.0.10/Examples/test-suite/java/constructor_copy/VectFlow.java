/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package constructor_copy;

public class VectFlow {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected VectFlow(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(VectFlow obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        constructor_copyJNI.delete_VectFlow(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public VectFlow() {
    this(constructor_copyJNI.new_VectFlow__SWIG_0(), true);
  }

  public long size() {
    return constructor_copyJNI.VectFlow_size(swigCPtr, this);
  }

  public long capacity() {
    return constructor_copyJNI.VectFlow_capacity(swigCPtr, this);
  }

  public void reserve(long n) {
    constructor_copyJNI.VectFlow_reserve(swigCPtr, this, n);
  }

  public boolean isEmpty() {
    return constructor_copyJNI.VectFlow_isEmpty(swigCPtr, this);
  }

  public void clear() {
    constructor_copyJNI.VectFlow_clear(swigCPtr, this);
  }

  public void add(Flow x) {
    constructor_copyJNI.VectFlow_add(swigCPtr, this, Flow.getCPtr(x), x);
  }

  public Flow get(int i) {
    return new Flow(constructor_copyJNI.VectFlow_get(swigCPtr, this, i), false);
  }

  public void set(int i, Flow val) {
    constructor_copyJNI.VectFlow_set(swigCPtr, this, i, Flow.getCPtr(val), val);
  }

  public VectFlow(VectFlow other) {
    this(constructor_copyJNI.new_VectFlow__SWIG_1(VectFlow.getCPtr(other), other), true);
  }

}
