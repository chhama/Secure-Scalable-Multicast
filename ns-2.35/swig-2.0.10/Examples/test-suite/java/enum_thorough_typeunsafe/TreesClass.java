/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package enum_thorough_typeunsafe;

public class TreesClass {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected TreesClass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(TreesClass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        enum_thorough_typeunsafeJNI.delete_TreesClass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int treesTest1(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest1(swigCPtr, this, e);
  }

  public int treesTest2(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest2(swigCPtr, this, e);
  }

  public int treesTest3(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest3(swigCPtr, this, e);
  }

  public int treesTest4(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest4(swigCPtr, this, e);
  }

  public int treesTest5(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest5(swigCPtr, this, e);
  }

  public int treesTest6(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest6(swigCPtr, this, e);
  }

  public int treesTest7(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest7(swigCPtr, this, e);
  }

  public int treesTest8(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest8(swigCPtr, this, e);
  }

  public int treesTest9(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTest9(swigCPtr, this, e);
  }

  public int treesTestA(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestA(swigCPtr, this, e);
  }

  public int treesTestB(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestB(swigCPtr, this, e);
  }

  public int treesTestC(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestC(swigCPtr, this, e);
  }

  public int treesTestD(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestD(swigCPtr, this, e);
  }

  public int treesTestE(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestE(swigCPtr, this, e);
  }

  public int treesTestF(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestF(swigCPtr, this, e);
  }

  public int treesTestG(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestG(swigCPtr, this, e);
  }

  public int treesTestH(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestH(swigCPtr, this, e);
  }

  public int treesTestI(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestI(swigCPtr, this, e);
  }

  public int treesTestJ(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestJ(swigCPtr, this, e);
  }

  public int treesTestK(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestK(swigCPtr, this, e);
  }

  public int treesTestL(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestL(swigCPtr, this, e);
  }

  public int treesTestM(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestM(swigCPtr, this, e);
  }

  public int treesTestN(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestN(swigCPtr, this, e);
  }

  public int treesTestO(int e) {
    return enum_thorough_typeunsafeJNI.TreesClass_treesTestO(swigCPtr, this, e);
  }

  public TreesClass() {
    this(enum_thorough_typeunsafeJNI.new_TreesClass(), true);
  }

  public final static class trees {
    public final static int oak = enum_thorough_typeunsafeJNI.TreesClass_oak_get();
    public final static int fir = enum_thorough_typeunsafeJNI.TreesClass_fir_get();
    public final static int pine = enum_thorough_typeunsafeJNI.TreesClass_pine_get();
  }

}
