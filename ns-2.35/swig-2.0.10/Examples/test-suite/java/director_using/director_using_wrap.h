/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_director_using_WRAP_H_
#define SWIG_director_using_WRAP_H_

class SwigDirector_Foo_int : public Foo< int >, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Foo_int(JNIEnv *jenv);
    virtual ~SwigDirector_Foo_int();
    virtual std::string do_advance();
    virtual std::string do_step() const;
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    bool swig_override[2];
};

class SwigDirector_Bar : public Bar, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Bar(JNIEnv *jenv);
    virtual ~SwigDirector_Bar();
    virtual std::string do_advance();
    virtual std::string do_advanceSwigPublic() {
      return Bar::do_advance();
    }
    virtual std::string do_step() const;
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    bool swig_override[2];
};

class SwigDirector_FooBar_int : public FooBar< int >, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_FooBar_int(JNIEnv *jenv);
    virtual ~SwigDirector_FooBar_int();
    virtual std::string do_advance();
    virtual std::string do_step() const;
    virtual int get_value() const;
public:
    bool swig_overrides(int n) {
      return (n < 3 ? swig_override[n] : false);
    }
protected:
    bool swig_override[3];
};

struct SwigDirector_SomeBase : public SomeBase, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_SomeBase(JNIEnv *jenv);
    virtual ~SwigDirector_SomeBase();
    virtual void method1();
    virtual void method2();
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    bool swig_override[2];
};

struct SwigDirector_PrivateDerived : public PrivateDerived, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_PrivateDerived(JNIEnv *jenv);
    virtual ~SwigDirector_PrivateDerived();
    virtual void method1();
    virtual void method2();
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    bool swig_override[2];
};


#endif
