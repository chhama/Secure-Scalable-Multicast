/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package enum_thorough;

public class NewNameStruct {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected NewNameStruct(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(NewNameStruct obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        enum_thoroughJNI.delete_NewNameStruct(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public NewNameStruct.enumeration renameTest1(NewNameStruct.enumeration e) {
    return NewNameStruct.enumeration.swigToEnum(enum_thoroughJNI.NewNameStruct_renameTest1(swigCPtr, this, e.swigValue()));
  }

  public NewNameStruct.enumeration renameTest2(NewNameStruct.enumeration e) {
    return NewNameStruct.enumeration.swigToEnum(enum_thoroughJNI.NewNameStruct_renameTest2(swigCPtr, this, e.swigValue()));
  }

  public NewNameStruct.simplerenamed renameTest3(NewNameStruct.simplerenamed e) {
    return NewNameStruct.simplerenamed.swigToEnum(enum_thoroughJNI.NewNameStruct_renameTest3(swigCPtr, this, e.swigValue()));
  }

  public NewNameStruct.doublenamerenamed renameTest4(NewNameStruct.doublenamerenamed e) {
    return NewNameStruct.doublenamerenamed.swigToEnum(enum_thoroughJNI.NewNameStruct_renameTest4(swigCPtr, this, e.swigValue()));
  }

  public NewNameStruct.doublenamerenamed renameTest5(NewNameStruct.doublenamerenamed e) {
    return NewNameStruct.doublenamerenamed.swigToEnum(enum_thoroughJNI.NewNameStruct_renameTest5(swigCPtr, this, e.swigValue()));
  }

  public NewNameStruct.singlenamerenamed renameTest6(NewNameStruct.singlenamerenamed e) {
    return NewNameStruct.singlenamerenamed.swigToEnum(enum_thoroughJNI.NewNameStruct_renameTest6(swigCPtr, this, e.swigValue()));
  }

  public NewNameStruct() {
    this(enum_thoroughJNI.new_NewNameStruct(), true);
  }

  public final static class enumeration {
    public final static NewNameStruct.enumeration whizz = new NewNameStruct.enumeration("whizz");
    public final static NewNameStruct.enumeration bang = new NewNameStruct.enumeration("bang");
    public final static NewNameStruct.enumeration pop = new NewNameStruct.enumeration("pop");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static enumeration swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + enumeration.class + " with value " + swigValue);
    }

    private enumeration(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private enumeration(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private enumeration(String swigName, enumeration swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static enumeration[] swigValues = { whizz, bang, pop };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class simplerenamed {
    public final static NewNameStruct.simplerenamed simple1 = new NewNameStruct.simplerenamed("simple1");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static simplerenamed swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + simplerenamed.class + " with value " + swigValue);
    }

    private simplerenamed(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private simplerenamed(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private simplerenamed(String swigName, simplerenamed swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static simplerenamed[] swigValues = { simple1 };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class doublenamerenamed {
    public final static NewNameStruct.doublenamerenamed doublename1 = new NewNameStruct.doublenamerenamed("doublename1");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static doublenamerenamed swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + doublenamerenamed.class + " with value " + swigValue);
    }

    private doublenamerenamed(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private doublenamerenamed(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private doublenamerenamed(String swigName, doublenamerenamed swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static doublenamerenamed[] swigValues = { doublename1 };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

  public final static class singlenamerenamed {
    public final static NewNameStruct.singlenamerenamed singlename1 = new NewNameStruct.singlenamerenamed("singlename1");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static singlenamerenamed swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + singlenamerenamed.class + " with value " + swigValue);
    }

    private singlenamerenamed(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private singlenamerenamed(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private singlenamerenamed(String swigName, singlenamerenamed swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static singlenamerenamed[] swigValues = { singlename1 };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
