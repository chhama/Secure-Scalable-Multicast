/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_allprotected_WRAP_H_
#define SWIG_allprotected_WRAP_H_

class SwigDirector_PublicBase : public PublicBase, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_PublicBase(JNIEnv *jenv, char const *s);
    virtual ~SwigDirector_PublicBase();
    virtual std::string virtualMethod() const;
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};

class SwigDirector_ProtectedBase : public ProtectedBase, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_ProtectedBase(JNIEnv *jenv, char const *s);
    virtual ~SwigDirector_ProtectedBase();
    virtual std::string virtualMethod() const;
    virtual std::string virtualMethodSwigPublic() const {
      return ProtectedBase::virtualMethod();
    }
    using ProtectedBase::instanceMethod;
    using ProtectedBase::instanceOverloaded;
    using ProtectedBase::staticMethod;
    using ProtectedBase::staticOverloaded;
    using ProtectedBase::instanceMemberVariable;
    using ProtectedBase::staticMemberVariable;
    using ProtectedBase::staticConstMemberVariable;
    using ProtectedBase::anEnum;
    using ProtectedBase::stringMember;
    using ProtectedBase::IntegerType;
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};


#endif
