/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package smart_pointer_rename;

public class Bar {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Bar(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Bar obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        smart_pointer_renameJNI.delete_Bar(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Bar(Foo _f) {
    this(smart_pointer_renameJNI.new_Bar(Foo.getCPtr(_f), _f), true);
  }

  public Foo __deref__() {
    long cPtr = smart_pointer_renameJNI.Bar___deref__(swigCPtr, this);
    return (cPtr == 0) ? null : new Foo(cPtr, false);
  }

  public int test() {
    return smart_pointer_renameJNI.Bar_test(swigCPtr, this);
  }

  public int ftest1(int arg0) {
    return smart_pointer_renameJNI.Bar_ftest1(swigCPtr, this, arg0);
  }

  public int ftest2(int arg0, int arg1) {
    return smart_pointer_renameJNI.Bar_ftest2(swigCPtr, this, arg0, arg1);
  }

}
