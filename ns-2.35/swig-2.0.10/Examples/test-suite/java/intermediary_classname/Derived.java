/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package intermediary_classname;

public class Derived extends Base {
  private long swigCPtr;

  protected Derived(long cPtr, boolean cMemoryOwn) {
    super(intermediary_classname.Derived_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Derived obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        intermediary_classname.delete_Derived(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    intermediary_classname.Derived_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    intermediary_classname.Derived_change_ownership(this, swigCPtr, true);
  }

  public Derived(Base b) {
    this(intermediary_classname.new_Derived(Base.getCPtr(b), b), true);
    intermediary_classname.Derived_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

  public Base m1(Base b) throws IllegalAccessException/*outBase&*/ {
    return new Base((getClass() == Derived.class) ? intermediary_classname.Derived_m1(swigCPtr, this, Base.getCPtr(b), b) : intermediary_classname.Derived_m1SwigExplicitDerived(swigCPtr, this, Base.getCPtr(b), b), false);
  }

  public Base m2(Base b) {
    long cPtr = (getClass() == Derived.class) ? intermediary_classname.Derived_m2(swigCPtr, this, Base.getCPtr(b), b) : intermediary_classname.Derived_m2SwigExplicitDerived(swigCPtr, this, Base.getCPtr(b), b);
    return (cPtr == 0) ? null : new Base(cPtr, false);
  }

  public void throwspec() {
    intermediary_classname.Derived_throwspec(swigCPtr, this);
  }

}
