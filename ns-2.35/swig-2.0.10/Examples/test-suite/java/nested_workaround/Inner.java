/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nested_workaround;

public class Inner {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Inner(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Inner obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        nested_workaroundJNI.delete_Inner(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Inner(int v) {
    this(nested_workaroundJNI.new_Inner__SWIG_0(v), true);
  }

  public Inner() {
    this(nested_workaroundJNI.new_Inner__SWIG_1(), true);
  }

  public void setValue(int v) {
    nested_workaroundJNI.Inner_setValue(swigCPtr, this, v);
  }

  public int getValue() {
    return nested_workaroundJNI.Inner_getValue(swigCPtr, this);
  }

}
