/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package nested_workaround;

public class Outer {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Outer(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Outer obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        nested_workaroundJNI.delete_Outer(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public Inner createInner(int v) {
    return new Inner(nested_workaroundJNI.Outer_createInner(swigCPtr, this, v), true);
  }

  public int getInnerValue(Inner i) {
    return nested_workaroundJNI.Outer_getInnerValue(swigCPtr, this, Inner.getCPtr(i), i);
  }

  public Inner doubleInnerValue(Inner inner) {
    return new Inner(nested_workaroundJNI.Outer_doubleInnerValue(swigCPtr, this, Inner.getCPtr(inner), inner), true);
  }

  public Outer() {
    this(nested_workaroundJNI.new_Outer(), true);
  }

}
