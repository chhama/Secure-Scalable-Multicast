/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_director_primitives_WRAP_H_
#define SWIG_director_primitives_WRAP_H_

class SwigDirector_Base : public Base, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Base(JNIEnv *jenv, double dd);
    virtual ~SwigDirector_Base();
    virtual void NoParmsMethod();
    virtual bool BoolMethod(bool x);
    virtual int IntMethod(int x);
    virtual unsigned int UIntMethod(unsigned int x);
    virtual float FloatMethod(float x);
    virtual char *CharPtrMethod(char *x);
    virtual char const *ConstCharPtrMethod(char const *x);
    virtual HShadowMode EnumMethod(HShadowMode x);
    virtual void ManyParmsMethod(bool b, int i, unsigned int u, float f, char *c, char const *cc, HShadowMode h);
    virtual void NotOverriddenMethod();
public:
    bool swig_overrides(int n) {
      return (n < 10 ? swig_override[n] : false);
    }
protected:
    bool swig_override[10];
};

class SwigDirector_Derived : public Derived, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Derived(JNIEnv *jenv, double dd);
    virtual ~SwigDirector_Derived();
    virtual void NoParmsMethod();
    virtual bool BoolMethod(bool x);
    virtual int IntMethod(int x);
    virtual unsigned int UIntMethod(unsigned int x);
    virtual float FloatMethod(float x);
    virtual char *CharPtrMethod(char *x);
    virtual char const *ConstCharPtrMethod(char const *x);
    virtual HShadowMode EnumMethod(HShadowMode x);
    virtual void ManyParmsMethod(bool b, int i, unsigned int u, float f, char *c, char const *cc, HShadowMode h);
    virtual void NotOverriddenMethod();
public:
    bool swig_overrides(int n) {
      return (n < 10 ? swig_override[n] : false);
    }
protected:
    bool swig_override[10];
};


#endif
