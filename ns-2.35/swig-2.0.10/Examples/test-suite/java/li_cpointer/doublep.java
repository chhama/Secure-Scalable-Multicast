/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package li_cpointer;

public class doublep {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected doublep(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(doublep obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        li_cpointerJNI.delete_doublep(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public doublep() {
    this(li_cpointerJNI.new_doublep(), true);
  }

  public void assign(double value) {
    li_cpointerJNI.doublep_assign(swigCPtr, this, value);
  }

  public double value() {
    return li_cpointerJNI.doublep_value(swigCPtr, this);
  }

  public SWIGTYPE_p_double cast() {
    long cPtr = li_cpointerJNI.doublep_cast(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_double(cPtr, false);
  }

  public static doublep frompointer(SWIGTYPE_p_double t) {
    long cPtr = li_cpointerJNI.doublep_frompointer(SWIGTYPE_p_double.getCPtr(t));
    return (cPtr == 0) ? null : new doublep(cPtr, false);
  }

}
