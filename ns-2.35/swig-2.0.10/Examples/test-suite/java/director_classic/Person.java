/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package director_classic;

public class Person extends Being {
  private long swigCPtr;

  protected Person(long cPtr, boolean cMemoryOwn) {
    super(director_classicJNI.Person_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Person obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        director_classicJNI.delete_Person(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    director_classicJNI.Person_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    director_classicJNI.Person_change_ownership(this, swigCPtr, true);
  }

  public String id() {
    return (getClass() == Person.class) ? director_classicJNI.Person_id(swigCPtr, this) : director_classicJNI.Person_idSwigExplicitPerson(swigCPtr, this);
  }

  public Person() {
    this(director_classicJNI.new_Person(), true);
    director_classicJNI.Person_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
