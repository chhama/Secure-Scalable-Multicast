/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package derived_nested;

public class BB {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected BB(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(BB obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        derived_nestedJNI.delete_BB(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setFf_instance(SWIGTYPE_p_BB__FF value) {
    derived_nestedJNI.BB_ff_instance_set(swigCPtr, this, SWIGTYPE_p_BB__FF.getCPtr(value));
  }

  public SWIGTYPE_p_BB__FF getFf_instance() {
    long cPtr = derived_nestedJNI.BB_ff_instance_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_BB__FF(cPtr, false);
  }

  public void useEE(SWIGTYPE_p_BB__EE e) {
    derived_nestedJNI.BB_useEE(swigCPtr, this, SWIGTYPE_p_BB__EE.getCPtr(e));
  }

  public BB() {
    this(derived_nestedJNI.new_BB(), true);
  }

}
