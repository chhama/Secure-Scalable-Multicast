/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package virtual_vs_nonvirtual_base;

public class SimpleClassFail extends SimpleVirtual {
  private long swigCPtr;

  protected SimpleClassFail(long cPtr, boolean cMemoryOwn) {
    super(virtual_vs_nonvirtual_baseJNI.SimpleClassFail_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  protected static long getCPtr(SimpleClassFail obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        virtual_vs_nonvirtual_baseJNI.delete_SimpleClassFail(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public SimpleClassFail() {
    this(virtual_vs_nonvirtual_baseJNI.new_SimpleClassFail(), true);
  }

  public SimpleReturnClass getInner() {
    return new SimpleReturnClass(virtual_vs_nonvirtual_baseJNI.SimpleClassFail_getInner(swigCPtr, this), true);
  }

  public int implementMe() {
    return virtual_vs_nonvirtual_baseJNI.SimpleClassFail_implementMe(swigCPtr, this);
  }

}
