/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package typemap_global_scope;

public class typemap_global_scope {
  public static void test1a(Test1 t, Test1 tt) {
    typemap_global_scopeJNI.test1a(Test1.getCPtr(t), t, Test1.getCPtr(tt), tt);
  }

  public static void test1b(Test1 t, Test1 tt) {
    typemap_global_scopeJNI.test1b(Test1.getCPtr(t), t, Test1.getCPtr(tt), tt);
  }

  public static void test2a(Test2 t, Test2 tt) {
    typemap_global_scopeJNI.test2a(Test2.getCPtr(t), t, Test2.getCPtr(tt), tt);
  }

  public static void test2b(Test2 t, Test2 tt) {
    typemap_global_scopeJNI.test2b(Test2.getCPtr(t), t, Test2.getCPtr(tt), tt);
  }

  public static void test3a(Test3 t, Test3 tt) {
    typemap_global_scopeJNI.test3a(Test3.getCPtr(t), t, Test3.getCPtr(tt), tt);
  }

  public static void test3b(Test3 t, Test3 tt) {
    typemap_global_scopeJNI.test3b(Test3.getCPtr(t), t, Test3.getCPtr(tt), tt);
  }

  public static void test3c(Test3 t, Test3 tt) {
    typemap_global_scopeJNI.test3c(Test3.getCPtr(t), t, Test3.getCPtr(tt), tt);
  }

  public static void test3d(Test3 t, Test3 tt) {
    typemap_global_scopeJNI.test3d(Test3.getCPtr(t), t, Test3.getCPtr(tt), tt);
  }

  public static void test3e(Test3 t, Test3 tt) {
    typemap_global_scopeJNI.test3e(Test3.getCPtr(t), t, Test3.getCPtr(tt), tt);
  }

  public static void test4a(Test4 t, Test4 tt) {
    typemap_global_scopeJNI.test4a(Test4.getCPtr(t), t, Test4.getCPtr(tt), tt);
  }

  public static void test4b(Test4 t, Test4 tt) {
    typemap_global_scopeJNI.test4b(Test4.getCPtr(t), t, Test4.getCPtr(tt), tt);
  }

  public static void test4c(Test4 t, Test4 tt) {
    typemap_global_scopeJNI.test4c(Test4.getCPtr(t), t, Test4.getCPtr(tt), tt);
  }

  public static void test4d(Test4 t, Test4 tt) {
    typemap_global_scopeJNI.test4d(Test4.getCPtr(t), t, Test4.getCPtr(tt), tt);
  }

  public static void test4e(Test4 t, Test4 tt) {
    typemap_global_scopeJNI.test4e(Test4.getCPtr(t), t, Test4.getCPtr(tt), tt);
  }

  public static void test_template_1a(TemplateTest1XX t, TemplateTest1XX tt) {
    typemap_global_scopeJNI.test_template_1a(TemplateTest1XX.getCPtr(t), t, TemplateTest1XX.getCPtr(tt), tt);
  }

  public static void test_template_1b(TemplateTest1XX t, TemplateTest1XX tt) {
    typemap_global_scopeJNI.test_template_1b(TemplateTest1XX.getCPtr(t), t, TemplateTest1XX.getCPtr(tt), tt);
  }

  public static void test_template_2a(TemplateTest2XX t, TemplateTest2XX tt) {
    typemap_global_scopeJNI.test_template_2a(TemplateTest2XX.getCPtr(t), t, TemplateTest2XX.getCPtr(tt), tt);
  }

  public static void test_template_2b(TemplateTest2XX t, TemplateTest2XX tt) {
    typemap_global_scopeJNI.test_template_2b(TemplateTest2XX.getCPtr(t), t, TemplateTest2XX.getCPtr(tt), tt);
  }

  public static void test_template_3a(TemplateTest3XX t, TemplateTest3XX tt) {
    typemap_global_scopeJNI.test_template_3a(TemplateTest3XX.getCPtr(t), t, TemplateTest3XX.getCPtr(tt), tt);
  }

  public static void test_template_3b(TemplateTest3XX t, TemplateTest3XX tt) {
    typemap_global_scopeJNI.test_template_3b(TemplateTest3XX.getCPtr(t), t, TemplateTest3XX.getCPtr(tt), tt);
  }

  public static void test_template_3c(TemplateTest3XX t, TemplateTest3XX tt) {
    typemap_global_scopeJNI.test_template_3c(TemplateTest3XX.getCPtr(t), t, TemplateTest3XX.getCPtr(tt), tt);
  }

  public static void test_template_3d(TemplateTest3XX t, TemplateTest3XX tt) {
    typemap_global_scopeJNI.test_template_3d(TemplateTest3XX.getCPtr(t), t, TemplateTest3XX.getCPtr(tt), tt);
  }

  public static void test_template_3e(TemplateTest3XX t, TemplateTest3XX tt) {
    typemap_global_scopeJNI.test_template_3e(TemplateTest3XX.getCPtr(t), t, TemplateTest3XX.getCPtr(tt), tt);
  }

  public static void test_template_4a(TemplateTest4XX t, TemplateTest4XX tt) {
    typemap_global_scopeJNI.test_template_4a(TemplateTest4XX.getCPtr(t), t, TemplateTest4XX.getCPtr(tt), tt);
  }

  public static void test_template_4b(TemplateTest4XX t, TemplateTest4XX tt) {
    typemap_global_scopeJNI.test_template_4b(TemplateTest4XX.getCPtr(t), t, TemplateTest4XX.getCPtr(tt), tt);
  }

  public static void test_template_4c(TemplateTest4XX t, TemplateTest4XX tt) {
    typemap_global_scopeJNI.test_template_4c(TemplateTest4XX.getCPtr(t), t, TemplateTest4XX.getCPtr(tt), tt);
  }

  public static void test_template_4d(TemplateTest4XX t, TemplateTest4XX tt) {
    typemap_global_scopeJNI.test_template_4d(TemplateTest4XX.getCPtr(t), t, TemplateTest4XX.getCPtr(tt), tt);
  }

  public static void test_template_4e(TemplateTest4XX t, TemplateTest4XX tt) {
    typemap_global_scopeJNI.test_template_4e(TemplateTest4XX.getCPtr(t), t, TemplateTest4XX.getCPtr(tt), tt);
  }

  public static void test_enum_1a(Enum1 t, Enum1 tt) {
    typemap_global_scopeJNI.test_enum_1a(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_1b(Enum1 t, Enum1 tt) {
    typemap_global_scopeJNI.test_enum_1b(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_2a(Enum2 t, Enum2 tt) {
    typemap_global_scopeJNI.test_enum_2a(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_2b(Enum2 t, Enum2 tt) {
    typemap_global_scopeJNI.test_enum_2b(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_3a(Enum3 t, Enum3 tt) {
    typemap_global_scopeJNI.test_enum_3a(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_3b(Enum3 t, Enum3 tt) {
    typemap_global_scopeJNI.test_enum_3b(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_3c(Enum3 t, Enum3 tt) {
    typemap_global_scopeJNI.test_enum_3c(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_3d(Enum3 t, Enum3 tt) {
    typemap_global_scopeJNI.test_enum_3d(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_3e(Enum3 t, Enum3 tt) {
    typemap_global_scopeJNI.test_enum_3e(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_4a(Enum4 t, Enum4 tt) {
    typemap_global_scopeJNI.test_enum_4a(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_4b(Enum4 t, Enum4 tt) {
    typemap_global_scopeJNI.test_enum_4b(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_4c(Enum4 t, Enum4 tt) {
    typemap_global_scopeJNI.test_enum_4c(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_4d(Enum4 t, Enum4 tt) {
    typemap_global_scopeJNI.test_enum_4d(t.swigValue(), tt.swigValue());
  }

  public static void test_enum_4e(Enum4 t, Enum4 tt) {
    typemap_global_scopeJNI.test_enum_4e(t.swigValue(), tt.swigValue());
  }

}
