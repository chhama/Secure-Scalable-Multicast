/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package threads_exception;

public class Test {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected Test(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(Test obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        threads_exceptionJNI.delete_Test(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public int simple() {
    return threads_exceptionJNI.Test_simple(swigCPtr, this);
  }

  public int message() {
    return threads_exceptionJNI.Test_message(swigCPtr, this);
  }

  public int hosed() {
    return threads_exceptionJNI.Test_hosed(swigCPtr, this);
  }

  public int unknown() {
    return threads_exceptionJNI.Test_unknown(swigCPtr, this);
  }

  public int multi(int x) {
    return threads_exceptionJNI.Test_multi(swigCPtr, this, x);
  }

  public Test() {
    this(threads_exceptionJNI.new_Test(), true);
  }

}
