/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package director_overload;

public class OverloadedClass {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  protected OverloadedClass(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(OverloadedClass obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        director_overloadJNI.delete_OverloadedClass(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  protected void swigDirectorDisconnect() {
    swigCMemOwn = false;
    delete();
  }

  public void swigReleaseOwnership() {
    swigCMemOwn = false;
    director_overloadJNI.OverloadedClass_change_ownership(this, swigCPtr, false);
  }

  public void swigTakeOwnership() {
    swigCMemOwn = true;
    director_overloadJNI.OverloadedClass_change_ownership(this, swigCPtr, true);
  }

  public void method1() {
    if (getClass() == OverloadedClass.class) director_overloadJNI.OverloadedClass_method1(swigCPtr, this); else director_overloadJNI.OverloadedClass_method1SwigExplicitOverloadedClass(swigCPtr, this);
  }

  public void method2() {
    if (getClass() == OverloadedClass.class) director_overloadJNI.OverloadedClass_method2__SWIG_0(swigCPtr, this); else director_overloadJNI.OverloadedClass_method2SwigExplicitOverloadedClass__SWIG_0(swigCPtr, this);
  }

  public void method3() {
    if (getClass() == OverloadedClass.class) director_overloadJNI.OverloadedClass_method3(swigCPtr, this); else director_overloadJNI.OverloadedClass_method3SwigExplicitOverloadedClass(swigCPtr, this);
  }

  public void method2(boolean b) {
    if (getClass() == OverloadedClass.class) director_overloadJNI.OverloadedClass_method2__SWIG_1(swigCPtr, this, b); else director_overloadJNI.OverloadedClass_method2SwigExplicitOverloadedClass__SWIG_1(swigCPtr, this, b);
  }

  public OverloadedClass() {
    this(director_overloadJNI.new_OverloadedClass(), true);
    director_overloadJNI.OverloadedClass_director_connect(this, swigCPtr, swigCMemOwn, true);
  }

}
