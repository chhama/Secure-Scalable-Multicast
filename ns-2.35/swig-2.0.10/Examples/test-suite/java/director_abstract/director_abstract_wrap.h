/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_director_abstract_WRAP_H_
#define SWIG_director_abstract_WRAP_H_

class SwigDirector_Foo : public Foo, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Foo(JNIEnv *jenv);
    virtual ~SwigDirector_Foo();
    virtual std::string ping();
    virtual std::string pong();
public:
    bool swig_overrides(int n) {
      return (n < 2 ? swig_override[n] : false);
    }
protected:
    bool swig_override[2];
};

class SwigDirector_Example0 : public Example0, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Example0(JNIEnv *jenv, int x, int y);
    SwigDirector_Example0(JNIEnv *jenv);
    virtual ~SwigDirector_Example0();
    virtual int Color(unsigned char r, unsigned char g, unsigned char b);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};

class SwigDirector_Example1 : public Example1, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Example1(JNIEnv *jenv, int x, int y);
    SwigDirector_Example1(JNIEnv *jenv);
    virtual ~SwigDirector_Example1();
    virtual int Color(unsigned char r, unsigned char g, unsigned char b);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};

class SwigDirector_Example2 : public Example2, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Example2(JNIEnv *jenv, int x);
    SwigDirector_Example2(JNIEnv *jenv, int x, int y);
    virtual ~SwigDirector_Example2();
    virtual int Color(unsigned char r, unsigned char g, unsigned char b);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};

class SwigDirector_Example4 : public Example4, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Example4(JNIEnv *jenv);
    SwigDirector_Example4(JNIEnv *jenv, int x, int y);
    virtual ~SwigDirector_Example4();
    virtual int Color(unsigned char r, unsigned char g, unsigned char b);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};

class SwigDirector_Example3_i : public ns::Example3< int >, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_Example3_i(JNIEnv *jenv);
    SwigDirector_Example3_i(JNIEnv *jenv, int x);
    SwigDirector_Example3_i(JNIEnv *jenv, int x, int y);
    virtual ~SwigDirector_Example3_i();
    virtual int Color(unsigned char r, unsigned char g, unsigned char b);
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};

struct SwigDirector_A : public A, public Swig::Director {

public:
    void swig_connect_director(JNIEnv *jenv, jobject jself, jclass jcls, bool swig_mem_own, bool weak_global);
    SwigDirector_A(JNIEnv *jenv, A const &arg0);
    virtual ~SwigDirector_A();
    virtual int f();
public:
    bool swig_overrides(int n) {
      return (n < 1 ? swig_override[n] : false);
    }
protected:
    bool swig_override[1];
};


#endif
