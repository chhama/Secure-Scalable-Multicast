<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('friends')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_friends.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('friends.so')) return;
    } else {
      if (!dl('friends.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class friends {
	static function globalscope() {
		globalscope();
	}

	static function mix($a,$b) {
		return mix($a,$b);
	}

	static function get_val2($a) {
		return get_val2($a);
	}

	static function get_val3($a) {
		return get_val3($a);
	}

	static function bas() {
		bas();
	}

	static function baz() {
		baz();
	}

	static function bar() {
		bar();
	}

	static function get_val1($a_or_i_or_b=null,$o_or_a=null,$b=null) {
		switch (func_num_args()) {
		case 0: $r=get_val1(); break;
		case 1: $r=get_val1($a_or_i_or_b); break;
		case 2: $r=get_val1($a_or_i_or_b,$o_or_a); break;
		default: $r=get_val1($a_or_i_or_b,$o_or_a,$b);
		}
		return $r;
	}

	static function set($b=null,$v=null) {
		switch (func_num_args()) {
		case 0: set(); break;
		case 1: set($b); break;
		default: set($b,$v);
		}
	}
}

/* PHP Proxy Classes */
class B {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_friends_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_friends_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($i) {
		if (is_resource($i) && get_resource_type($i) === '_p_B') {
			$this->_cPtr=$i;
			return;
		}
		$this->_cPtr=new_B($i);
	}
}

class A {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_friends_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_friends_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($v) {
		if (is_resource($v) && get_resource_type($v) === '_p_A') {
			$this->_cPtr=$v;
			return;
		}
		$this->_cPtr=new_A($v);
	}
}

class Foo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_friends_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_friends_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns1__ns2__Foo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Foo();
	}

	function member() {
		Foo_member($this->_cPtr);
	}
}

class D_i {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_friends_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_friends_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($v) {
		if (is_resource($v) && get_resource_type($v) === '_p_DT_int_t') {
			$this->_cPtr=$v;
			return;
		}
		$this->_cPtr=new_D_i($v);
	}
}

class D_d {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_friends_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_friends_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($v) {
		if (is_resource($v) && get_resource_type($v) === '_p_DT_double_t') {
			$this->_cPtr=$v;
			return;
		}
		$this->_cPtr=new_D_d($v);
	}
}


?>
