<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('abstract_signature')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_abstract_signature.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('abstract_signature.so')) return;
    } else {
      if (!dl('abstract_signature.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
abstract class abstract_foo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_abstract_signature_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_abstract_signature_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function meth($meth_param) {
		return abstract_foo_meth($this->_cPtr,$meth_param);
	}
}

abstract class abstract_bar extends abstract_foo {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_abstract_signature_alter_newobject($this->_cPtr,$value);
		abstract_foo::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return abstract_foo::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_abstract_signature_get_newobject($this->_cPtr);
		return abstract_foo::__get($var);
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function meth($meth_param_or_meth_param_1,$meth_param_2=null) {
		switch (func_num_args()) {
		case 1: $r=abstract_bar_meth($this->_cPtr,$meth_param_or_meth_param_1); break;
		default: $r=abstract_bar_meth($this->_cPtr,$meth_param_or_meth_param_1,$meth_param_2);
		}
		return $r;
	}
}


?>
