<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('director_basic')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_director_basic.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('director_basic.so')) return;
    } else {
      if (!dl('director_basic.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class Foo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_basic_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_basic_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function ping() {
		return Foo_ping($this->_cPtr);
	}

	function pong() {
		return Foo_pong($this->_cPtr);
	}

	static function get_self($slf) {
		$r=Foo_get_self($slf);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Foo($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Foo') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Foo') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Foo($_this);
	}
}

class A {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_basic_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_basic_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($i,$d_or_j=null) {
		if (is_resource($i) && get_resource_type($i) === '_p_A') {
			$this->_cPtr=$i;
			return;
		}
		if (get_class($this) === 'A') {
			$_this = null;
		} else {
			$_this = $this;
		}
		switch (func_num_args()) {
		case 1: $this->_cPtr=new_A($_this, $i); break;
		default: $this->_cPtr=new_A($_this, $i,$d_or_j);
		}
	}

	function f($i=0) {
		return A_f($this->_cPtr,$i);
	}

	function rg($i=0) {
		return A_rg($this->_cPtr,$i);
	}
}

class A1 extends A {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_basic_alter_newobject($this->_cPtr,$value);
		A::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return A::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_basic_get_newobject($this->_cPtr);
		return A::__get($var);
	}

	function __construct($i,$d_or_j=null) {
		if (is_resource($i) && get_resource_type($i) === '_p_hi__A1') {
			$this->_cPtr=$i;
			return;
		}
		switch (func_num_args()) {
		case 1: $this->_cPtr=new_A1($i); break;
		default: $this->_cPtr=new_A1($i,$d_or_j);
		}
	}

	function ff($i=0) {
		return A1_ff($this->_cPtr,$i);
	}
}

class Bar {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'x') return Bar_x_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_director_basic_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('Bar_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'x') return Bar_x_get($this->_cPtr);
		if ($var === 'thisown') return swig_director_basic_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($_x=0) {
		if (is_resource($_x) && get_resource_type($_x) === '_p_Bar') {
			$this->_cPtr=$_x;
			return;
		}
		$this->_cPtr=new_Bar($_x);
	}
}

class MyClass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_basic_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_basic_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($a=0) {
		if (is_resource($a) && get_resource_type($a) === '_p_MyClass') {
			$this->_cPtr=$a;
			return;
		}
		if (get_class($this) === 'MyClass') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_MyClass($_this);
	}

	function method($arg0) {
		MyClass_method($this->_cPtr,$arg0);
	}

	function vmethod($b) {
		$r=MyClass_vmethod($this->_cPtr,$b);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Bar($r);
		}
		return $r;
	}

	function pmethod($b) {
		$r=MyClass_pmethod($this->_cPtr,$b);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Bar($r);
		}
		return $r;
	}

	function cmethod($b) {
		$r=MyClass_cmethod($this->_cPtr,$b);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Bar($r);
		}
		return $r;
	}

	static function get_self($c_) {
		$r=MyClass_get_self($c_);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new MyClass($r);
		}
		return $r;
	}

	static function call_pmethod($myclass,$b) {
		$r=MyClass_call_pmethod($myclass,$b);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Bar($r);
		}
		return $r;
	}
}

class MyClassT_i {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_basic_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_basic_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($a=0) {
		if (is_resource($a) && get_resource_type($a) === '_p_MyClassTT_int_t') {
			$this->_cPtr=$a;
			return;
		}
		$this->_cPtr=new_MyClassT_i($a);
	}

	function method($arg1) {
		MyClassT_i_method($this->_cPtr,$arg1);
	}
}


?>
