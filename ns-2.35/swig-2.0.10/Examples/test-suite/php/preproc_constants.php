<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('preproc_constants')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_preproc_constants.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('preproc_constants.so')) return;
    } else {
      if (!dl('preproc_constants.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class preproc_constants {
	const CONST_INT1 = CONST_INT1;

	const CONST_INT2 = CONST_INT2;

	const CONST_UINT1 = CONST_UINT1;

	const CONST_UINT2 = CONST_UINT2;

	const CONST_UINT3 = CONST_UINT3;

	const CONST_UINT4 = CONST_UINT4;

	const CONST_LONG1 = CONST_LONG1;

	const CONST_LONG2 = CONST_LONG2;

	const CONST_LONG3 = CONST_LONG3;

	const CONST_LONG4 = CONST_LONG4;

	const CONST_LLONG1 = CONST_LLONG1;

	const CONST_LLONG2 = CONST_LLONG2;

	const CONST_LLONG3 = CONST_LLONG3;

	const CONST_LLONG4 = CONST_LLONG4;

	const CONST_ULLONG1 = CONST_ULLONG1;

	const CONST_ULLONG2 = CONST_ULLONG2;

	const CONST_ULLONG3 = CONST_ULLONG3;

	const CONST_ULLONG4 = CONST_ULLONG4;

	const CONST_DOUBLE1 = CONST_DOUBLE1;

	const CONST_DOUBLE2 = CONST_DOUBLE2;

	const CONST_DOUBLE3 = CONST_DOUBLE3;

	const CONST_DOUBLE4 = CONST_DOUBLE4;

	const CONST_DOUBLE5 = CONST_DOUBLE5;

	const CONST_DOUBLE6 = CONST_DOUBLE6;

	const CONST_BOOL1 = CONST_BOOL1;

	const CONST_BOOL2 = CONST_BOOL2;

	const CONST_CHAR = CONST_CHAR;

	const CONST_STRING1 = CONST_STRING1;

	const CONST_STRING2 = CONST_STRING2;

	const CONST_STRING3 = CONST_STRING3;

	const INT_AND_BOOL = INT_AND_BOOL;

	const INT_AND_INT = INT_AND_INT;

	const INT_AND_UINT = INT_AND_UINT;

	const INT_AND_LONG = INT_AND_LONG;

	const INT_AND_ULONG = INT_AND_ULONG;

	const INT_AND_LLONG = INT_AND_LLONG;

	const INT_AND_ULLONG = INT_AND_ULLONG;

	const BOOL_AND_BOOL = BOOL_AND_BOOL;

	const EXPR_MULTIPLY = EXPR_MULTIPLY;

	const EXPR_DIVIDE = EXPR_DIVIDE;

	const EXPR_PLUS = EXPR_PLUS;

	const EXPR_MINUS = EXPR_MINUS;

	const EXPR_LSHIFT = EXPR_LSHIFT;

	const EXPR_RSHIFT = EXPR_RSHIFT;

	const EXPR_LTE = EXPR_LTE;

	const EXPR_GTE = EXPR_GTE;

	const EXPR_INEQUALITY = EXPR_INEQUALITY;

	const EXPR_EQUALITY = EXPR_EQUALITY;

	const EXPR_AND = EXPR_AND;

	const EXPR_XOR = EXPR_XOR;

	const EXPR_OR = EXPR_OR;

	const EXPR_LAND = EXPR_LAND;

	const EXPR_LOR = EXPR_LOR;

	const EXPR_CONDITIONAL = EXPR_CONDITIONAL;

	const kValue = kValue;
}

/* PHP Proxy Classes */

?>
