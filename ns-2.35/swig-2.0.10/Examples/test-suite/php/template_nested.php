<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('template_nested')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_template_nested.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('template_nested.so')) return;
    } else {
      if (!dl('template_nested.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class NormalClass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_nested_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_nested_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns__NormalClass') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_NormalClass();
	}
}

class OuterClass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'iii') return OuterClass_iii_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_nested_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('OuterClass_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'iii') return OuterClass_iii_get($this->_cPtr);
		if ($var === 'thisown') return swig_template_nested_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function useInner1($inner) {
		return OuterClass_useInner1($this->_cPtr,$inner);
	}

	function useInner2($inner) {
		return OuterClass_useInner2($this->_cPtr,$inner);
	}

	function T_OuterTMethodNormalClass($z) {
		OuterClass_T_OuterTMethodNormalClass($this->_cPtr,$z);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns__OuterClass') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_OuterClass();
	}
}

class ABC {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_nested_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_nested_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns__ABC') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ABC();
	}
}

class TemplateFuncs {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_nested_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_nested_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function T_TemplateFuncs1Int($x) {
		return TemplateFuncs_T_TemplateFuncs1Int($this->_cPtr,$x);
	}

	function T_TemplateFuncs2Double($x) {
		return TemplateFuncs_T_TemplateFuncs2Double($this->_cPtr,$x);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns__TemplateFuncs') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_TemplateFuncs();
	}
}

class T_NormalTemplateNormalClass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_nested_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_nested_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function tmethod($t) {
		T_NormalTemplateNormalClass_tmethod($this->_cPtr,$t);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns__NormalTemplateT_ns__NormalClass_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_T_NormalTemplateNormalClass();
	}
}

class T_NestedOuterTemplateDouble {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_nested_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_nested_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function hohum($u) {
		return T_NestedOuterTemplateDouble_hohum($this->_cPtr,$u);
	}

	function useNestedInnerTemplate1($inner) {
		return T_NestedOuterTemplateDouble_useNestedInnerTemplate1($this->_cPtr,$inner);
	}

	function useNestedInnerTemplate2($inner) {
		return T_NestedOuterTemplateDouble_useNestedInnerTemplate2($this->_cPtr,$inner);
	}

	function useNestedInnerTemplate3($inner) {
		return T_NestedOuterTemplateDouble_useNestedInnerTemplate3($this->_cPtr,$inner);
	}

	function useNestedStruct($inner) {
		return T_NestedOuterTemplateDouble_useNestedStruct($this->_cPtr,$inner);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ns__OuterTemplateT_double_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_T_NestedOuterTemplateDouble();
	}
}


?>
