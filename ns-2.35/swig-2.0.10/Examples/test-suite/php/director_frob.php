<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('director_frob')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_director_frob.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('director_frob.so')) return;
    } else {
      if (!dl('director_frob.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
abstract class Alpha {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function abs_method() {
		return Alpha_abs_method($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Alpha') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Alpha') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Alpha($_this);
	}
}

class Bravo extends Alpha {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		Alpha::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return Alpha::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return Alpha::__get($var);
	}

	function abs_method() {
		return Bravo_abs_method($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Bravo') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Bravo') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Bravo($_this);
	}
}

class Charlie extends Bravo {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		Bravo::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return Bravo::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return Bravo::__get($var);
	}

	function abs_method() {
		return Charlie_abs_method($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Charlie') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Charlie') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Charlie($_this);
	}
}

class Delta extends Charlie {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		Charlie::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return Charlie::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return Charlie::__get($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Delta') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Delta') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Delta($_this);
	}
}

class Ops {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Ops') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Ops') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Ops($_this);
	}

	function OpInt() {
		return Ops_OpInt($this->_cPtr);
	}

	function OpIntStarStarConst() {
		return Ops_OpIntStarStarConst($this->_cPtr);
	}

	function OpIntAmp() {
		return Ops_OpIntAmp($this->_cPtr);
	}

	function OpIntStar() {
		return Ops_OpIntStar($this->_cPtr);
	}

	function OpConstIntIntStar() {
		return Ops_OpConstIntIntStar($this->_cPtr);
	}
}

class Prims {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function ull($i,$j) {
		return Prims_ull($this->_cPtr,$i,$j);
	}

	function callull($i,$j) {
		return Prims_callull($this->_cPtr,$i,$j);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Prims') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'Prims') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_Prims($_this);
	}
}

class corePoint3d {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_corePoint3d') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_corePoint3d();
	}
}

class coreCallbacks_On3dEngineRedrawnData {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === '_eye') return coreCallbacks_On3dEngineRedrawnData__eye_set($this->_cPtr,$value);
		if ($var === '_at') return coreCallbacks_On3dEngineRedrawnData__at_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('coreCallbacks_On3dEngineRedrawnData_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === '_eye') return new corePoint3d(coreCallbacks_On3dEngineRedrawnData__eye_get($this->_cPtr));
		if ($var === '_at') return new corePoint3d(coreCallbacks_On3dEngineRedrawnData__at_get($this->_cPtr));
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_coreCallbacks_On3dEngineRedrawnData') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_coreCallbacks_On3dEngineRedrawnData();
	}
}

class coreCallbacksOn3dEngineRedrawnData {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === '_eye') return coreCallbacksOn3dEngineRedrawnData__eye_set($this->_cPtr,$value);
		if ($var === '_at') return coreCallbacksOn3dEngineRedrawnData__at_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('coreCallbacksOn3dEngineRedrawnData_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === '_eye') return new corePoint3d(coreCallbacksOn3dEngineRedrawnData__eye_get($this->_cPtr));
		if ($var === '_at') return new corePoint3d(coreCallbacksOn3dEngineRedrawnData__at_get($this->_cPtr));
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_coreCallbacksOn3dEngineRedrawnData') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_coreCallbacksOn3dEngineRedrawnData();
	}
}

class coreCallbacks {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_director_frob_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_director_frob_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_coreCallbacks') {
			$this->_cPtr=$res;
			return;
		}
		if (get_class($this) === 'coreCallbacks') {
			$_this = null;
		} else {
			$_this = $this;
		}
		$this->_cPtr=new_coreCallbacks($_this);
	}

	function On3dEngineRedrawn($data) {
		coreCallbacks_On3dEngineRedrawn($this->_cPtr,$data);
	}

	function On3dEngineRedrawn2($data) {
		coreCallbacks_On3dEngineRedrawn2($this->_cPtr,$data);
	}
}


?>
