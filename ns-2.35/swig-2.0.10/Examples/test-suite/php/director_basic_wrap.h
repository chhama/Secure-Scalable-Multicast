/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_BASIC_WRAP_H_
#define SWIG_DIRECTOR_BASIC_WRAP_H_

class SwigDirector_Foo : public Foo, public Swig::Director {

public:
    SwigDirector_Foo(zval *self TSRMLS_DC);
    virtual ~SwigDirector_Foo();
    virtual std::string ping();
    virtual std::string pong();
};
struct SwigDirector_A : public A, public Swig::Director {

public:
    SwigDirector_A(zval *self, std::complex< int > i, double d = 0.0 TSRMLS_DC);
    SwigDirector_A(zval *self, int i, bool j = false TSRMLS_DC);
    virtual ~SwigDirector_A();
    virtual int f(int i = 0);
    virtual int gg(int i = 0);
};
class SwigDirector_MyClass : public MyClass, public Swig::Director {

public:
    SwigDirector_MyClass(zval *self, int a = 0 TSRMLS_DC);
    virtual void method(VoidType *arg0);
    virtual ~SwigDirector_MyClass();
    virtual Bar vmethod(Bar b);
    virtual Bar *pmethod(Bar *b);
};

#endif
