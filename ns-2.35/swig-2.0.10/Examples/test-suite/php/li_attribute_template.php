<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('li_attribute_template')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_li_attribute_template.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('li_attribute_template.so')) return;
    } else {
      if (!dl('li_attribute_template.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class Foo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'value') return Foo_value_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_li_attribute_template_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('Foo_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'value') return Foo_value_get($this->_cPtr);
		if ($var === 'thisown') return swig_li_attribute_template_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($_value) {
		if (is_resource($_value) && get_resource_type($_value) === '_p_Foo') {
			$this->_cPtr=$_value;
			return;
		}
		$this->_cPtr=new_Foo($_value);
	}
}

class pair_intint {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'first') return pair_intint_first_set($this->_cPtr,$value);
		if ($var === 'second') return pair_intint_second_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_li_attribute_template_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('pair_intint_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'first') return pair_intint_first_get($this->_cPtr);
		if ($var === 'second') return pair_intint_second_get($this->_cPtr);
		if ($var === 'thisown') return swig_li_attribute_template_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($t1,$t2) {
		if (is_resource($t1) && get_resource_type($t1) === '_p_pairT_int_int_t') {
			$this->_cPtr=$t1;
			return;
		}
		$this->_cPtr=new_pair_intint($t1,$t2);
	}
}

class Cintint {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'Cintint_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_li_attribute_template_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('Cintint_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'd') return new Foo(Cintint_d_get($this->_cPtr));
		if ($var === 'e') return new Foo(Cintint_e_get($this->_cPtr));
		if ($var === 'f') return new pair_intint(Cintint_f_get($this->_cPtr));
		if ($var === 'g') return new pair_intint(Cintint_g_get($this->_cPtr));
		$func = 'Cintint_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		if ($var === 'thisown') return swig_li_attribute_template_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($a,$b,$c_) {
		if (is_resource($a) && get_resource_type($a) === '_p_CT_int_int_t') {
			$this->_cPtr=$a;
			return;
		}
		$this->_cPtr=new_Cintint($a,$b,$c_);
	}
}


?>
