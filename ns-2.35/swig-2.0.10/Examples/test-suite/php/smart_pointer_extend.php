<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('smart_pointer_extend')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_smart_pointer_extend.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('smart_pointer_extend.so')) return;
    } else {
      if (!dl('smart_pointer_extend.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class smart_pointer_extend {
	static function get_hello($ptr) {
		return get_hello($ptr);
	}
}

/* PHP Proxy Classes */
class CBase {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'x') return CBase_x_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('CBase_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'x') return CBase_x_get($this->_cPtr);
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	static function hello() {
		return CBase_hello();
	}

	const z = CBase_z;

	function foo() {
		return CBase_foo($this->_cPtr);
	}

	function bar() {
		return CBase_bar($this->_cPtr);
	}

	function boo($i) {
		return CBase_boo($this->_cPtr,$i);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_hi__CBase') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CBase();
	}
}

class CDerived extends CBase {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		CBase::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return CBase::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return CBase::__get($var);
	}

	function foo() {
		return CDerived_foo($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_hi__CDerived') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CDerived();
	}
}

class CPtr {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'x') return CPtr_x_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('CPtr_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'x') return CPtr_x_get($this->_cPtr);
		if ($var === 'z') return CPtr_z_get($this->_cPtr);
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __deref__() {
		$r=CPtr___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CDerived($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_hi__CPtr') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CPtr();
	}

	function foo() {
		return CPtr_foo($this->_cPtr);
	}

	function hello() {
		return CPtr_hello($this->_cPtr);
	}

	function bar() {
		return CPtr_bar($this->_cPtr);
	}

	function boo($i) {
		return CPtr_boo($this->_cPtr,$i);
	}
}

class CPtrConst {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'x') return CPtrConst_x_get($this->_cPtr);
		if ($var === 'z') return CPtrConst_z_get($this->_cPtr);
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __deref__() {
		$r=CPtrConst___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CDerived($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_hi__CPtrConst') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CPtrConst();
	}
}

class Foo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function extension($i=null,$j=null) {
		switch (func_num_args()) {
		case 0: $r=Foo_extension($this->_cPtr); break;
		case 1: $r=Foo_extension($this->_cPtr,$i); break;
		default: $r=Foo_extension($this->_cPtr,$i,$j);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Foo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Foo();
	}
}

class Bar {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($f) {
		if (is_resource($f) && get_resource_type($f) === '_p_Bar') {
			$this->_cPtr=$f;
			return;
		}
		$this->_cPtr=new_Bar($f);
	}

	function __deref__() {
		$r=Bar___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Foo($r);
		}
		return $r;
	}

	function extension($i=null,$j=null) {
		switch (func_num_args()) {
		case 0: $r=Bar_extension($this->_cPtr); break;
		case 1: $r=Bar_extension($this->_cPtr,$i); break;
		default: $r=Bar_extension($this->_cPtr,$i,$j);
		}
		return $r;
	}
}

class CFoo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	static function StatFun($i=null) {
		switch (func_num_args()) {
		case 0: CFoo_StatFun(); break;
		default: CFoo_StatFun($i);
		}
	}

	static function HoHoHo($i,$j) {
		CFoo_HoHoHo($i,$j);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CFoo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CFoo();
	}
}

class CPtrFoo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __deref__() {
		$r=CPtrFoo___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new CFoo($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_CPtrFoo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_CPtrFoo();
	}

	function StatFun($i=null) {
		switch (func_num_args()) {
		case 0: CPtrFoo_StatFun($this->_cPtr); break;
		default: CPtrFoo_StatFun($this->_cPtr,$i);
		}
	}

	function HoHoHo($i,$j) {
		CPtrFoo_HoHoHo($this->_cPtr,$i,$j);
	}
}

class DPtrFoo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($ptr) {
		if (is_resource($ptr) && get_resource_type($ptr) === '_p_foo__DPtrFoo') {
			$this->_cPtr=$ptr;
			return;
		}
		$this->_cPtr=new_DPtrFoo($ptr);
	}

	function __deref__() {
		$r=DPtrFoo___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new DFoo($r);
		}
		return $r;
	}

	function F() {
		DPtrFoo_F($this->_cPtr);
	}

	function SExt($i=1) {
		return DPtrFoo_SExt($this->_cPtr,$i);
	}

	function Ext($i=2) {
		return DPtrFoo_Ext($this->_cPtr,$i);
	}
}

class DFoo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_extend_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_extend_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function F() {
		DFoo_F($this->_cPtr);
	}

	static function SExt($i=1) {
		return DFoo_SExt($i);
	}

	function Ext($i=2) {
		return DFoo_Ext($this->_cPtr,$i);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_foo__DFoo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_DFoo();
	}
}


?>
