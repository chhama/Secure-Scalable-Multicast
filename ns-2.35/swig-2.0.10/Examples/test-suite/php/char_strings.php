<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('char_strings')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_char_strings.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('char_strings.so')) return;
    } else {
      if (!dl('char_strings.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class char_strings {
	static function GetCharHeapString() {
		return GetCharHeapString();
	}

	static function GetConstCharProgramCodeString() {
		return GetConstCharProgramCodeString();
	}

	static function DeleteCharHeapString() {
		DeleteCharHeapString();
	}

	static function GetCharStaticString() {
		return GetCharStaticString();
	}

	static function GetCharStaticStringFixed() {
		return GetCharStaticStringFixed();
	}

	static function GetConstCharStaticStringFixed() {
		return GetConstCharStaticStringFixed();
	}

	static function SetCharHeapString($str,$number) {
		return SetCharHeapString($str,$number);
	}

	static function SetCharStaticString($str,$number) {
		return SetCharStaticString($str,$number);
	}

	static function SetCharArrayStaticString($str,$number) {
		return SetCharArrayStaticString($str,$number);
	}

	static function SetConstCharHeapString($str,$number) {
		return SetConstCharHeapString($str,$number);
	}

	static function SetConstCharStaticString($str,$number) {
		return SetConstCharStaticString($str,$number);
	}

	static function SetConstCharArrayStaticString($str,$number) {
		return SetConstCharArrayStaticString($str,$number);
	}

	static function SetCharConstStaticString($str,$number) {
		return SetCharConstStaticString($str,$number);
	}

	static function SetConstCharConstStaticString($str,$number) {
		return SetConstCharConstStaticString($str,$number);
	}

	static function CharPingPong($str) {
		return CharPingPong($str);
	}

	static function CharArrayPingPong($abcstr) {
		return CharArrayPingPong($abcstr);
	}

	static function CharArrayDimsPingPong($abcstr) {
		return CharArrayDimsPingPong($abcstr);
	}

	static function global_char_set($global_char) {
		global_char_set($global_char);
	}

	static function global_char_get() {
		return global_char_get();
	}

	static function global_char_array1_set($global_char_array1) {
		global_char_array1_set($global_char_array1);
	}

	static function global_char_array1_get() {
		return global_char_array1_get();
	}

	static function global_char_array2_set($global_char_array2) {
		global_char_array2_set($global_char_array2);
	}

	static function global_char_array2_get() {
		return global_char_array2_get();
	}

	static function global_const_char_get() {
		return global_const_char_get();
	}

	static function global_const_char_array1_get() {
		return global_const_char_array1_get();
	}

	static function global_const_char_array2_get() {
		return global_const_char_array2_get();
	}

	static function GetNewCharString() {
		return GetNewCharString();
	}

	static function GetNextFormat($itr,$str,$pFormat) {
		return GetNextFormat($itr,$str,$pFormat);
	}

	static function GetCharPointerRef() {
		return GetCharPointerRef();
	}

	static function SetCharPointerRef($str,$number) {
		return SetCharPointerRef($str,$number);
	}

	static function GetConstCharPointerRef() {
		return GetConstCharPointerRef();
	}

	static function SetConstCharPointerRef($str,$number) {
		return SetConstCharPointerRef($str,$number);
	}
}

/* PHP Proxy Classes */

?>
