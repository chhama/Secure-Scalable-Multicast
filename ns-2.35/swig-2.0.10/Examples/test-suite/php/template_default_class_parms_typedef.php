<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('template_default_class_parms_typedef')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_template_default_class_parms_typedef.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('template_default_class_parms_typedef.so')) return;
    } else {
      if (!dl('template_default_class_parms_typedef.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class SomeType {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__SomeType') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_SomeType();
	}
}

class AnotherType {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__AnotherType') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_AnotherType();
	}
}

class DefaultBar {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'DefaultBar_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('DefaultBar_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'DType') return new SomeType(DefaultBar_DType_get($this->_cPtr));
		if ($var === 'CType') return DefaultBar_CType_get($this->_cPtr);
		if ($var === 'EType') return DefaultBar_EType_get($this->_cPtr);
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function method($c_,$d,$e) {
		return DefaultBar_method($this->_cPtr,$c_,$d,$e);
	}

	function method_1($c_,$d,$e) {
		return DefaultBar_method_1($this->_cPtr,$c_,$d,$e);
	}

	function method_2($c_,$d,$e) {
		return DefaultBar_method_2($this->_cPtr,$c_,$d,$e);
	}

	function __construct($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_=null,$e_or_d=null,$e=null) {
		if (is_resource($c_) && get_resource_type($c_) === '_p_Space__BarT_double_Space__SomeType_int_t') {
			$this->_cPtr=$c_;
			return;
		}
		switch (func_num_args()) {
		case 3: $this->_cPtr=new_DefaultBar($c_,$d_or_c,$e_or_d_or_c); break;
		case 4: $this->_cPtr=new_DefaultBar($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_); break;
		case 5: $this->_cPtr=new_DefaultBar($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_,$e_or_d); break;
		default: $this->_cPtr=new_DefaultBar($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_,$e_or_d,$e);
		}
	}

	function method_3($c_,$d,$e) {
		return DefaultBar_method_3($this->_cPtr,$c_,$d,$e);
	}
}

class DefaultFoo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'TType') return DefaultFoo_TType_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('DefaultFoo_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'TType') return new SomeType(DefaultFoo_TType_get($this->_cPtr));
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function method($t) {
		$r=DefaultFoo_method($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new SomeType($r);
		}
		return $r;
	}

	function method_A($t) {
		$r=DefaultFoo_method_A($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new SomeType($r);
		}
		return $r;
	}

	function method_B($t) {
		$r=DefaultFoo_method_B($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new SomeType($r);
		}
		return $r;
	}

	function __construct($t,$t_=null,$t__=null,$t___=null) {
		if (is_resource($t) && get_resource_type($t) === '_p_Space__FooT_Space__SomeType_t') {
			$this->_cPtr=$t;
			return;
		}
		switch (func_num_args()) {
		case 1: $this->_cPtr=new_DefaultFoo($t); break;
		case 2: $this->_cPtr=new_DefaultFoo($t,$t_); break;
		case 3: $this->_cPtr=new_DefaultFoo($t,$t_,$t__); break;
		default: $this->_cPtr=new_DefaultFoo($t,$t_,$t__,$t___);
		}
	}

	function method_C($t) {
		$r=DefaultFoo_method_C($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new SomeType($r);
		}
		return $r;
	}
}

class BarAnotherTypeBool {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'BarAnotherTypeBool_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('BarAnotherTypeBool_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'CType') return new AnotherType(BarAnotherTypeBool_CType_get($this->_cPtr));
		if ($var === 'EType') return BarAnotherTypeBool_EType_get($this->_cPtr);
		if ($var === 'DType') return BarAnotherTypeBool_DType_get($this->_cPtr);
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function method($c_,$d,$e) {
		$r=BarAnotherTypeBool_method($this->_cPtr,$c_,$d,$e);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}

	function method_1($c_,$d,$e) {
		$r=BarAnotherTypeBool_method_1($this->_cPtr,$c_,$d,$e);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}

	function method_2($c_,$d,$e) {
		$r=BarAnotherTypeBool_method_2($this->_cPtr,$c_,$d,$e);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}

	function __construct($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_=null,$e_or_d=null,$e=null) {
		if (is_resource($c_) && get_resource_type($c_) === '_p_Space__BarT_Space__AnotherType_bool_int_t') {
			$this->_cPtr=$c_;
			return;
		}
		switch (func_num_args()) {
		case 3: $this->_cPtr=new_BarAnotherTypeBool($c_,$d_or_c,$e_or_d_or_c); break;
		case 4: $this->_cPtr=new_BarAnotherTypeBool($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_); break;
		case 5: $this->_cPtr=new_BarAnotherTypeBool($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_,$e_or_d); break;
		default: $this->_cPtr=new_BarAnotherTypeBool($c_,$d_or_c,$e_or_d_or_c,$e_or_d_or_c_,$e_or_d,$e);
		}
	}

	function method_3($c_,$d,$e) {
		$r=BarAnotherTypeBool_method_3($this->_cPtr,$c_,$d,$e);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}
}

class FooAnotherType {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'TType') return FooAnotherType_TType_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('FooAnotherType_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'TType') return new AnotherType(FooAnotherType_TType_get($this->_cPtr));
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function method($t) {
		$r=FooAnotherType_method($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}

	function method_A($t) {
		$r=FooAnotherType_method_A($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}

	function method_B($t) {
		$r=FooAnotherType_method_B($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}

	function __construct($t,$t_=null,$t__=null,$t___=null) {
		if (is_resource($t) && get_resource_type($t) === '_p_Space__FooT_Space__AnotherType_t') {
			$this->_cPtr=$t;
			return;
		}
		switch (func_num_args()) {
		case 1: $this->_cPtr=new_FooAnotherType($t); break;
		case 2: $this->_cPtr=new_FooAnotherType($t,$t_); break;
		case 3: $this->_cPtr=new_FooAnotherType($t,$t_,$t__); break;
		default: $this->_cPtr=new_FooAnotherType($t,$t_,$t__,$t___);
		}
	}

	function method_C($t) {
		$r=FooAnotherType_method_C($this->_cPtr,$t);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new AnotherType($r);
		}
		return $r;
	}
}

class UsesBarDouble {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_default_class_parms_typedef_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function use_A($arg1,$arg2,$arg3) {
		UsesBarDouble_use_A($this->_cPtr,$arg1,$arg2,$arg3);
	}

	function use_B($arg1,$arg2,$arg3) {
		UsesBarDouble_use_B($this->_cPtr,$arg1,$arg2,$arg3);
	}

	function use_C($arg1,$arg2,$arg3) {
		UsesBarDouble_use_C($this->_cPtr,$arg1,$arg2,$arg3);
	}

	function use_D($arg1,$arg2,$arg3) {
		UsesBarDouble_use_D($this->_cPtr,$arg1,$arg2,$arg3);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__UsesBarT_double_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_UsesBarDouble();
	}
}


?>
