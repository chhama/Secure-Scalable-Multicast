<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('smart_pointer_inherit')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_smart_pointer_inherit.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('smart_pointer_inherit.so')) return;
    } else {
      if (!dl('smart_pointer_inherit.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
abstract class Base {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'val') return Base_val_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('Base_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'val') return Base_val_get($this->_cPtr);
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}
	function __construct($h) {
		$this->_cPtr=$h;
	}

	function value() {
		return Base_value($this->_cPtr);
	}

	function value2() {
		return Base_value2($this->_cPtr);
	}

	function value3() {
		return Base_value3($this->_cPtr);
	}

	function valuehide() {
		return Base_valuehide($this->_cPtr);
	}
}

class Derived extends Base {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		Base::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return Base::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return Base::__get($var);
	}

	function __construct($i) {
		if (is_resource($i) && get_resource_type($i) === '_p_hi__Derived') {
			$this->_cPtr=$i;
			return;
		}
		$this->_cPtr=new_Derived($i);
	}

	function value() {
		return Derived_value($this->_cPtr);
	}

	function value3() {
		return Derived_value3($this->_cPtr);
	}

	function valuehide() {
		return Derived_valuehide($this->_cPtr);
	}
}

class SmartBase {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'val') return SmartBase_val_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('SmartBase_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'val') return SmartBase_val_get($this->_cPtr);
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($t) {
		if (is_resource($t) && get_resource_type($t) === '_p_hi__SmartPtrT_hi__Base_t') {
			$this->_cPtr=$t;
			return;
		}
		$this->_cPtr=new_SmartBase($t);
	}

	function __deref__() {
		$r=SmartBase___deref__($this->_cPtr);
		$this->_cPtr = $r;
		return $this;
	}

	function value() {
		return SmartBase_value($this->_cPtr);
	}

	function value2() {
		return SmartBase_value2($this->_cPtr);
	}

	function value3() {
		return SmartBase_value3($this->_cPtr);
	}

	function valuehide() {
		return SmartBase_valuehide($this->_cPtr);
	}
}

class SmartDerived {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'val') return SmartDerived_val_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('SmartDerived_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'val') return SmartDerived_val_get($this->_cPtr);
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($t) {
		if (is_resource($t) && get_resource_type($t) === '_p_hi__SmartPtrT_hi__Derived_t') {
			$this->_cPtr=$t;
			return;
		}
		$this->_cPtr=new_SmartDerived($t);
	}

	function __deref__() {
		$r=SmartDerived___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Derived($r);
		}
		return $r;
	}

	function value() {
		return SmartDerived_value($this->_cPtr);
	}

	function value3() {
		return SmartDerived_value3($this->_cPtr);
	}

	function valuehide() {
		return SmartDerived_valuehide($this->_cPtr);
	}

	function value2() {
		return SmartDerived_value2($this->_cPtr);
	}
}

class ItkLevelSetNodeUS2 {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ItkLevelSetNodeUS2') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ItkLevelSetNodeUS2();
	}
}

class VectorLevelSetNodeUS2 {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($n=null) {
		if (is_resource($n) && get_resource_type($n) === '_p_std__vectorT_ItkLevelSetNodeUS2_t') {
			$this->_cPtr=$n;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_VectorLevelSetNodeUS2(); break;
		default: $this->_cPtr=new_VectorLevelSetNodeUS2($n);
		}
	}

	function size() {
		return VectorLevelSetNodeUS2_size($this->_cPtr);
	}

	function capacity() {
		return VectorLevelSetNodeUS2_capacity($this->_cPtr);
	}

	function reserve($n) {
		VectorLevelSetNodeUS2_reserve($this->_cPtr,$n);
	}

	function clear() {
		VectorLevelSetNodeUS2_clear($this->_cPtr);
	}

	function push($x) {
		VectorLevelSetNodeUS2_push($this->_cPtr,$x);
	}

	function is_empty() {
		return VectorLevelSetNodeUS2_is_empty($this->_cPtr);
	}

	function pop() {
		$r=VectorLevelSetNodeUS2_pop($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ItkLevelSetNodeUS2($r);
		}
		return $r;
	}

	function get($i) {
		$r=VectorLevelSetNodeUS2_get($this->_cPtr,$i);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ItkLevelSetNodeUS2($r);
		}
		return $r;
	}

	function set($i,$val) {
		VectorLevelSetNodeUS2_set($this->_cPtr,$i,$val);
	}
}

class ItkVectorContainerUILSNUS2 extends VectorLevelSetNodeUS2 {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		VectorLevelSetNodeUS2::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return VectorLevelSetNodeUS2::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return VectorLevelSetNodeUS2::__get($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ItkVectorContainerUILSNUS2') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ItkVectorContainerUILSNUS2();
	}
}

class ItkVectorContainerUILSNUS2_Pointer {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_smart_pointer_inherit_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __deref__() {
		$r=ItkVectorContainerUILSNUS2_Pointer___deref__($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ItkVectorContainerUILSNUS2($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ItkVectorContainerUILSNUS2_Pointer') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ItkVectorContainerUILSNUS2_Pointer();
	}

	function size() {
		return ItkVectorContainerUILSNUS2_Pointer_size($this->_cPtr);
	}

	function capacity() {
		return ItkVectorContainerUILSNUS2_Pointer_capacity($this->_cPtr);
	}

	function reserve($n) {
		ItkVectorContainerUILSNUS2_Pointer_reserve($this->_cPtr,$n);
	}

	function clear() {
		ItkVectorContainerUILSNUS2_Pointer_clear($this->_cPtr);
	}

	function push($x) {
		ItkVectorContainerUILSNUS2_Pointer_push($this->_cPtr,$x);
	}

	function is_empty() {
		return ItkVectorContainerUILSNUS2_Pointer_is_empty($this->_cPtr);
	}

	function pop() {
		$r=ItkVectorContainerUILSNUS2_Pointer_pop($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ItkLevelSetNodeUS2($r);
		}
		return $r;
	}

	function get($i) {
		$r=ItkVectorContainerUILSNUS2_Pointer_get($this->_cPtr,$i);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ItkLevelSetNodeUS2($r);
		}
		return $r;
	}

	function set($i,$val) {
		ItkVectorContainerUILSNUS2_Pointer_set($this->_cPtr,$i,$val);
	}
}


?>
