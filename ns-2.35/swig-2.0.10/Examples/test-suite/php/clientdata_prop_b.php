<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('clientdata_prop_b')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_clientdata_prop_b.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('clientdata_prop_b.so')) return;
    } else {
      if (!dl('clientdata_prop_b.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class clientdata_prop_b {
	static function test_t2A($a) {
		test_t2A($a);
	}

	static function test_t3A($a) {
		test_t3A($a);
	}

	static function test_B($b) {
		test_B($b);
	}

	static function test_C($c_) {
		test_C($c_);
	}

	static function test_D($d) {
		test_D($d);
	}

	static function test_tD($d) {
		test_tD($d);
	}

	static function test_t2D($d) {
		test_t2D($d);
	}

	static function new_t2A() {
		$r=new_t2A();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new A($r);
		}
		return $r;
	}

	static function new_t3A() {
		$r=new_t3A();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new A($r);
		}
		return $r;
	}

	static function new_tD() {
		$r=new_tD();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new D($r);
		}
		return $r;
	}

	static function new_t2D() {
		$r=new_t2D();
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new D($r);
		}
		return $r;
	}
}

/* PHP Proxy Classes */
class B extends A {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_clientdata_prop_b_alter_newobject($this->_cPtr,$value);
		A::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return A::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_clientdata_prop_b_get_newobject($this->_cPtr);
		return A::__get($var);
	}

	function fB() {
		B_fB($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_B') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_B();
	}
}

class C extends A {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_clientdata_prop_b_alter_newobject($this->_cPtr,$value);
		A::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return A::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_clientdata_prop_b_get_newobject($this->_cPtr);
		return A::__get($var);
	}

	function fC() {
		C_fC($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_C') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_C();
	}
}

class D extends A {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_clientdata_prop_b_alter_newobject($this->_cPtr,$value);
		A::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return A::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_clientdata_prop_b_get_newobject($this->_cPtr);
		return A::__get($var);
	}

	function fD() {
		D_fD($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_D') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_D();
	}
}


?>
