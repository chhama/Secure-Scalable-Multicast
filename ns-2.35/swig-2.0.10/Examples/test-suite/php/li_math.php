<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('li_math')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_li_math.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('li_math.so')) return;
    } else {
      if (!dl('li_math.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class li_math {
	static function c_cos($x) {
		return c_cos($x);
	}

	static function c_sin($x) {
		return c_sin($x);
	}

	static function c_tan($x) {
		return c_tan($x);
	}

	static function c_acos($x) {
		return c_acos($x);
	}

	static function c_asin($x) {
		return c_asin($x);
	}

	static function c_atan($x) {
		return c_atan($x);
	}

	static function c_atan2($y,$x) {
		return c_atan2($y,$x);
	}

	static function c_cosh($x) {
		return c_cosh($x);
	}

	static function c_sinh($x) {
		return c_sinh($x);
	}

	static function c_tanh($x) {
		return c_tanh($x);
	}

	static function c_exp($x) {
		return c_exp($x);
	}

	static function c_log($x) {
		return c_log($x);
	}

	static function c_log10($x) {
		return c_log10($x);
	}

	static function c_pow($x,$y) {
		return c_pow($x,$y);
	}

	static function c_sqrt($x) {
		return c_sqrt($x);
	}

	static function fabs($x) {
		return fabs($x);
	}

	static function c_ceil($x) {
		return c_ceil($x);
	}

	static function c_floor($x) {
		return c_floor($x);
	}

	static function c_fmod($x,$y) {
		return c_fmod($x,$y);
	}

	const M_E = M_E;

	const M_LOG2E = M_LOG2E;

	const M_LOG10E = M_LOG10E;

	const M_LN2 = M_LN2;

	const M_LN10 = M_LN10;

	const M_PI = M_PI;

	const M_PI_2 = M_PI_2;

	const M_PI_4 = M_PI_4;

	const M_1_PI = M_1_PI;

	const M_2_PI = M_2_PI;

	const M_2_SQRTPI = M_2_SQRTPI;

	const M_SQRT2 = M_SQRT2;

	const M_SQRT1_2 = M_SQRT1_2;
}

/* PHP Proxy Classes */

?>
