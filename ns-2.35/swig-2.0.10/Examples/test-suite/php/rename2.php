<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('rename2')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_rename2.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('rename2.so')) return;
    } else {
      if (!dl('rename2.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class rename2 {
	const En1 = 0;

	const En2 = En2;

	const En3 = En3;
}

/* PHP Proxy Classes */
class Klass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($i=null) {
		if (is_resource($i) && get_resource_type($i) === '_p_Space__Klass') {
			$this->_cPtr=$i;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_Klass(); break;
		default: $this->_cPtr=new_Klass($i);
		}
	}
}

class Another {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_AnotherSpace__Another') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Another();
	}
}

class ABC {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function methodABC($a) {
		ABC_methodABC($this->_cPtr,$a);
	}

	function methodKlass($k) {
		ABC_methodKlass($this->_cPtr,$k);
	}

	function opABC() {
		$r=ABC_opABC($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new ABC($r);
		}
		return $r;
	}

	function opKlass() {
		$r=ABC_opKlass($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Klass($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__ABC') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ABC();
	}
}

class XYZInt {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function opIntPtrA() {
		$r=XYZInt_opIntPtrA($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZInt($r);
		}
		return $r;
	}

	function opIntPtrB() {
		$r=XYZInt_opIntPtrB($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZInt($r);
		}
		return $r;
	}

	function opAnother2() {
		$r=XYZInt_opAnother2($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Another($r);
		}
		return $r;
	}

	function tMethod2($i) {
		XYZInt_tMethod2($this->_cPtr,$i);
	}

	function tMethodNotXYZ2($i) {
		XYZInt_tMethodNotXYZ2($this->_cPtr,$i);
	}

	function tMethodXYZ2($i) {
		XYZInt_tMethodXYZ2($this->_cPtr,$i);
	}

	function opT2() {
		return XYZInt_opT2($this->_cPtr);
	}

	function opNotXYZ2() {
		$r=XYZInt_opNotXYZ2($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZInt($r);
		}
		return $r;
	}

	function opXYZ2() {
		$r=XYZInt_opXYZ2($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZInt($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__XYZT_int_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_XYZInt();
	}
}

class XYZDouble {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function opIntPtrA() {
		$r=XYZDouble_opIntPtrA($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZInt($r);
		}
		return $r;
	}

	function opIntPtrB() {
		$r=XYZDouble_opIntPtrB($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZInt($r);
		}
		return $r;
	}

	function opAnother1() {
		$r=XYZDouble_opAnother1($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Another($r);
		}
		return $r;
	}

	function tMethod1($i) {
		XYZDouble_tMethod1($this->_cPtr,$i);
	}

	function tMethodNotXYZ1($i) {
		XYZDouble_tMethodNotXYZ1($this->_cPtr,$i);
	}

	function tMethodXYZ1($i) {
		XYZDouble_tMethodXYZ1($this->_cPtr,$i);
	}

	function opT1() {
		return XYZDouble_opT1($this->_cPtr);
	}

	function opNotXYZ1() {
		$r=XYZDouble_opNotXYZ1($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZDouble($r);
		}
		return $r;
	}

	function opXYZ1() {
		$r=XYZDouble_opXYZ1($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZDouble($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__XYZT_double_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_XYZDouble();
	}
}

class XYZKlass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function opIntPtrA() {
		$r=XYZKlass_opIntPtrA($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZInt($r);
		}
		return $r;
	}

	function opIntPtrB() {
		$r=XYZKlass_opIntPtrB($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZInt($r);
		}
		return $r;
	}

	function opAnother3() {
		$r=XYZKlass_opAnother3($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Another($r);
		}
		return $r;
	}

	function tMethod3($i) {
		XYZKlass_tMethod3($this->_cPtr,$i);
	}

	function tMethodNotXYZ3($i) {
		XYZKlass_tMethodNotXYZ3($this->_cPtr,$i);
	}

	function tMethodXYZ3($i) {
		XYZKlass_tMethodXYZ3($this->_cPtr,$i);
	}

	function opT3() {
		$r=XYZKlass_opT3($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Klass($r);
		}
		return $r;
	}

	function opNotXYZ3() {
		$r=XYZKlass_opNotXYZ3($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZKlass($r);
		}
		return $r;
	}

	function opXYZ3() {
		$r=XYZKlass_opXYZ3($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZKlass($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__XYZT_Space__Klass_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_XYZKlass();
	}
}

class XYZEnu {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function opIntPtrA() {
		$r=XYZEnu_opIntPtrA($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZInt($r);
		}
		return $r;
	}

	function opIntPtrB() {
		$r=XYZEnu_opIntPtrB($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZInt($r);
		}
		return $r;
	}

	function opAnother4() {
		$r=XYZEnu_opAnother4($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new Another($r);
		}
		return $r;
	}

	function tMethod4($i) {
		XYZEnu_tMethod4($this->_cPtr,$i);
	}

	function tMethodNotXYZ4($i) {
		XYZEnu_tMethodNotXYZ4($this->_cPtr,$i);
	}

	function tMethodXYZ4($i) {
		XYZEnu_tMethodXYZ4($this->_cPtr,$i);
	}

	function opT4() {
		return XYZEnu_opT4($this->_cPtr);
	}

	function opNotXYZ4() {
		$r=XYZEnu_opNotXYZ4($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new NotXYZEnu($r);
		}
		return $r;
	}

	function opXYZ4() {
		$r=XYZEnu_opXYZ4($this->_cPtr);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new XYZEnu($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__XYZT_Space__Enu_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_XYZEnu();
	}
}

class NotXYZInt {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__NotXYZT_int_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_NotXYZInt();
	}
}

class NotXYZDouble {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__NotXYZT_double_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_NotXYZDouble();
	}
}

class NotXYZKlass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__NotXYZT_Space__Klass_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_NotXYZKlass();
	}
}

class NotXYZEnu {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_rename2_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_rename2_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__NotXYZT_Space__Enu_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_NotXYZEnu();
	}
}


?>
