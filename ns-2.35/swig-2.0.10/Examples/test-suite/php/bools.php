<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('bools')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_bools.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('bools.so')) return;
    } else {
      if (!dl('bools.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class bools {
	const constbool = constbool;

	static function bool1_set($bool1) {
		bool1_set($bool1);
	}

	static function bool1_get() {
		return bool1_get();
	}

	static function bool2_set($bool2) {
		bool2_set($bool2);
	}

	static function bool2_get() {
		return bool2_get();
	}

	static function pbool_set($pbool) {
		pbool_set($pbool);
	}

	static function pbool_get() {
		return pbool_get();
	}

	static function rbool_set($rbool) {
		rbool_set($rbool);
	}

	static function rbool_get() {
		return rbool_get();
	}

	static function const_pbool_set($const_pbool) {
		const_pbool_set($const_pbool);
	}

	static function const_pbool_get() {
		return const_pbool_get();
	}

	static function const_rbool_get() {
		return const_rbool_get();
	}

	static function eax() {
		return eax();
	}

	static function bo($b) {
		return bo($b);
	}

	static function rbo($b) {
		return rbo($b);
	}

	static function pbo($b) {
		return pbo($b);
	}

	static function const_rbo($b) {
		return const_rbo($b);
	}

	static function const_pbo($b) {
		return const_pbo($b);
	}

	static function value($b) {
		return value($b);
	}
}

/* PHP Proxy Classes */
class BoolStructure {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		$func = 'BoolStructure_'.$var.'_set';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr,$value);
		if ($var === 'thisown') return swig_bools_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('BoolStructure_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		$func = 'BoolStructure_'.$var.'_get';
		if (function_exists($func)) return call_user_func($func,$this->_cPtr);
		if ($var === 'thisown') return swig_bools_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_BoolStructure') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_BoolStructure();
	}
}


?>
