<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('template_namespace_forward_declaration')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_template_namespace_forward_declaration.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('template_namespace_forward_declaration.so')) return;
    } else {
      if (!dl('template_namespace_forward_declaration.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class template_namespace_forward_declaration {
	static function testXXX1($xx) {
		testXXX1($xx);
	}

	static function testXXX2($xx) {
		testXXX2($xx);
	}

	static function testXXX3($xx) {
		testXXX3($xx);
	}

	static function testYYY1($yy) {
		testYYY1($yy);
	}

	static function testYYY2($yy) {
		testYYY2($yy);
	}

	static function testYYY3($yy) {
		testYYY3($yy);
	}
}

/* PHP Proxy Classes */
class XXXInt {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_namespace_forward_declaration_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_namespace_forward_declaration_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function xxx($h) {
		return XXXInt_xxx($this->_cPtr,$h);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space1__Space2__XXXT_int_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_XXXInt();
	}
}

class YYYInt {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_namespace_forward_declaration_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_namespace_forward_declaration_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function yyy($h) {
		return YYYInt_yyy($this->_cPtr,$h);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space1__Space2__YYYT_int_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_YYYInt();
	}
}


?>
