/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

#ifndef SWIG_DIRECTOR_CLASSIC_WRAP_H_
#define SWIG_DIRECTOR_CLASSIC_WRAP_H_

struct SwigDirector_Being : public Being, public Swig::Director {

public:
    SwigDirector_Being(zval *self TSRMLS_DC);
    virtual std::string id();
    virtual ~SwigDirector_Being();
};
struct SwigDirector_Person : public Person, public Swig::Director {

public:
    SwigDirector_Person(zval *self TSRMLS_DC);
    virtual std::string id();
    virtual ~SwigDirector_Person();
};
struct SwigDirector_Child : public Child, public Swig::Director {

public:
    SwigDirector_Child(zval *self TSRMLS_DC);
    virtual std::string id();
    virtual ~SwigDirector_Child();
};
struct SwigDirector_GrandChild : public GrandChild, public Swig::Director {

public:
    SwigDirector_GrandChild(zval *self TSRMLS_DC);
    virtual std::string id();
    virtual ~SwigDirector_GrandChild();
};
struct SwigDirector_OrphanPerson : public OrphanPerson, public Swig::Director {

public:
    SwigDirector_OrphanPerson(zval *self TSRMLS_DC);
    virtual std::string id();
    virtual ~SwigDirector_OrphanPerson();
};
struct SwigDirector_OrphanChild : public OrphanChild, public Swig::Director {

public:
    SwigDirector_OrphanChild(zval *self TSRMLS_DC);
    virtual std::string id();
    virtual ~SwigDirector_OrphanChild();
};

#endif
