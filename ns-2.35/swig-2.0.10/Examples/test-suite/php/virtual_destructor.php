<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('virtual_destructor')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_virtual_destructor.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('virtual_destructor.so')) return;
    } else {
      if (!dl('virtual_destructor.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class VirtualVoidDestructor {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_virtual_destructor_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_virtual_destructor_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_VirtualVoidDestructor') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_VirtualVoidDestructor();
	}
}

class Derived extends VirtualVoidDestructor {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_virtual_destructor_alter_newobject($this->_cPtr,$value);
		VirtualVoidDestructor::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return VirtualVoidDestructor::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_virtual_destructor_get_newobject($this->_cPtr);
		return VirtualVoidDestructor::__get($var);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Derived') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Derived();
	}
}


?>
