<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('template_methods')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_template_methods.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('template_methods.so')) return;
    } else {
      if (!dl('template_methods.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class template_methods {
	static function convolve1Bool($a=null) {
		switch (func_num_args()) {
		case 0: $r=convolve1Bool(); break;
		default: $r=convolve1Bool($a);
		}
		return $r;
	}

	static function convolve2Float() {
		return convolve2Float();
	}

	static function convolve3FloatRenamed($a) {
		convolve3FloatRenamed($a);
	}

	static function convolve4Float() {
		return convolve4Float();
	}

	static function convolve4FloatRenamed($a) {
		convolve4FloatRenamed($a);
	}

	static function convolve5FloatRenamed($a=null) {
		switch (func_num_args()) {
		case 0: $r=convolve5FloatRenamed(); break;
		default: $r=convolve5FloatRenamed($a);
		}
		return $r;
	}
}

/* PHP Proxy Classes */
class Klass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_methods_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_methods_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function KlassTMethodBoolRenamed($x) {
		return Klass_KlassTMethodBoolRenamed($this->_cPtr,$x);
	}

	function KlassTMethodBool() {
		Klass_KlassTMethodBool($this->_cPtr);
	}

	static function KlassStaticTMethodBoolRenamed($x) {
		return Klass_KlassStaticTMethodBoolRenamed($x);
	}

	static function KlassStaticTMethodBool() {
		Klass_KlassStaticTMethodBool();
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Klass') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Klass();
	}
}

class ComponentProperties {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_methods_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_methods_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ComponentProperties') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ComponentProperties();
	}

	function adda($key1,$val1,$key2,$val2,$key3=null,$val3=null) {
		switch (func_num_args()) {
		case 4: ComponentProperties_adda($this->_cPtr,$key1,$val1,$key2,$val2); break;
		case 5: ComponentProperties_adda($this->_cPtr,$key1,$val1,$key2,$val2,$key3); break;
		default: ComponentProperties_adda($this->_cPtr,$key1,$val1,$key2,$val2,$key3,$val3);
		}
	}
}


?>
