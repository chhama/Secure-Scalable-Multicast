<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('template_typedef_class_template')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_template_typedef_class_template.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('template_typedef_class_template.so')) return;
    } else {
      if (!dl('template_typedef_class_template.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



/* PHP Proxy Classes */
class A {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'val') return A_val_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_typedef_class_template_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('A_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'val') return A_val_get($this->_cPtr);
		if ($var === 'thisown') return swig_template_typedef_class_template_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($v=0) {
		if (is_resource($v) && get_resource_type($v) === '_p_A') {
			$this->_cPtr=$v;
			return;
		}
		$this->_cPtr=new_A($v);
	}
}

class PairA {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'first') return PairA_first_set($this->_cPtr,$value);
		if ($var === 'second') return PairA_second_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_template_typedef_class_template_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('PairA_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'second') return new A(PairA_second_get($this->_cPtr));
		if ($var === 'first') return PairA_first_get($this->_cPtr);
		if ($var === 'thisown') return swig_template_typedef_class_template_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Standard__PairT_int_A_p_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_PairA();
	}
}

class MultimapA {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_template_typedef_class_template_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_template_typedef_class_template_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function equal_range_1($kt1) {
		return MultimapA_equal_range_1($this->_cPtr,$kt1);
	}

	function equal_range_2($kt2) {
		return MultimapA_equal_range_2($this->_cPtr,$kt2);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Standard__MultimapT_int_A_p_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_MultimapA();
	}
}


?>
