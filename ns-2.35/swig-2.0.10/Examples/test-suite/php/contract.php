<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('contract')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_contract.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('contract.so')) return;
    } else {
      if (!dl('contract.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class contract {
	static function test_preassert($x,$y) {
		return test_preassert($x,$y);
	}

	static function test_postassert($x) {
		return test_postassert($x);
	}

	static function test_prepost($x,$y) {
		return test_prepost($x,$y);
	}
}

/* PHP Proxy Classes */
class Foo {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function test_preassert($x,$y) {
		return Foo_test_preassert($this->_cPtr,$x,$y);
	}

	function test_postassert($x) {
		return Foo_test_postassert($this->_cPtr,$x);
	}

	function test_prepost($x,$y) {
		return Foo_test_prepost($this->_cPtr,$x,$y);
	}

	static function stest_prepost($x,$y) {
		return Foo_stest_prepost($x,$y);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Foo') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Foo();
	}
}

class Bar extends Foo {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		Foo::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return Foo::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return Foo::__get($var);
	}

	function test_prepost($x,$y) {
		return Bar_test_prepost($this->_cPtr,$x,$y);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Bar') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Bar();
	}
}

class A {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function foo($a,$b,$c_,$d,$e) {
		return A_foo($this->_cPtr,$a,$b,$c_,$d,$e);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_A') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_A();
	}
}

class B {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function bar($a,$b,$c_,$d,$e) {
		return B_bar($this->_cPtr,$a,$b,$c_,$d,$e);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_B') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_B();
	}
}

class C extends A {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		A::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return A::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return A::__get($var);
	}

	function foo($a,$b,$c_,$d,$e) {
		return C_foo($this->_cPtr,$a,$b,$c_,$d,$e);
	}

	function bar($a,$b,$c_,$d,$e) {
		return C_bar($this->_cPtr,$a,$b,$c_,$d,$e);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_C') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_C();
	}
}

class D extends C {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		C::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return C::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return C::__get($var);
	}

	function foo($a,$b,$c_,$d,$e) {
		return D_foo($this->_cPtr,$a,$b,$c_,$d,$e);
	}

	function bar($a,$b,$c_,$d,$e) {
		return D_bar($this->_cPtr,$a,$b,$c_,$d,$e);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_D') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_D();
	}
}

class E {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'm_i') return E_m_i_set($this->_cPtr,$value);
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if (function_exists('E_'.$var.'_set')) return true;
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'm_i') return E_m_i_get($this->_cPtr);
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function manipulate_i($i) {
		E_manipulate_i($this->_cPtr,$i);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_E') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_E();
	}
}

class myClass {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_contract_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_contract_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($i) {
		if (is_resource($i) && get_resource_type($i) === '_p_myNames__myClass') {
			$this->_cPtr=$i;
			return;
		}
		$this->_cPtr=new_myClass($i);
	}
}


?>
