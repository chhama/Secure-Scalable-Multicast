<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('features')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_features.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('features.so')) return;
    } else {
      if (!dl('features.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class features {
	static function FooBarInt($t) {
		FooBarInt($t);
	}
}

/* PHP Proxy Classes */
class Simple {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Simple') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Simple();
	}
}

class SimpleNS {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function method() {
		SimpleNS_method($this->_cPtr);
	}

	function afunction() {
		SimpleNS_afunction($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_NS__SimpleNS') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_SimpleNS();
	}
}

class SimpleInt {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_SimpleTemplateT_int_t') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_SimpleInt();
	}
}

class TemplateInt {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($arg1=null) {
		if (is_resource($arg1) && get_resource_type($arg1) === '_p_TemplateT_int_t') {
			$this->_cPtr=$arg1;
			return;
		}
		switch (func_num_args()) {
		case 0: $this->_cPtr=new_TemplateInt(); break;
		default: $this->_cPtr=new_TemplateInt($arg1);
		}
	}

	function foo() {
		TemplateInt_foo($this->_cPtr);
	}

	function bar($t) {
		TemplateInt_bar($this->_cPtr,$t);
	}

	function get($i) {
		return TemplateInt_get($this->_cPtr,$i);
	}

	function set($t) {
		TemplateInt_set($this->_cPtr,$t);
	}
}

class WildCards {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function incy($a) {
		$r=WildCards_incy($this->_cPtr,$a);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new WildCards($r);
		}
		return $r;
	}

	function wincy($a) {
		$r=WildCards_wincy($this->_cPtr,$a);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new WildCards($r);
		}
		return $r;
	}

	function spider($a) {
		$r=WildCards_spider($this->_cPtr,$a);
		if (is_resource($r)) {
			$c=substr(get_resource_type($r), (strpos(get_resource_type($r), '__') ? strpos(get_resource_type($r), '__') + 2 : 3));
			if (class_exists($c)) return new $c($r);
			return new WildCards($r);
		}
		return $r;
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__WildCards') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_WildCards();
	}
}

class Animals {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function __construct($a=0,$d=0.0) {
		if (is_resource($a) && get_resource_type($a) === '_p_Space__Animals') {
			$this->_cPtr=$a;
			return;
		}
		$this->_cPtr=new_Animals($a,$d);
	}

	function lions($a=0,$d=0.0) {
		return Animals_lions($this->_cPtr,$a,$d);
	}

	function leopards($a=0,$d=0.0) {
		return Animals_leopards($this->_cPtr,$a,$d);
	}

	function cheetahs($a=0,$d=0.0) {
		return Animals_cheetahs($this->_cPtr,$a,$d);
	}

	function jackal($a=0,$d=0.0) {
		return Animals_jackal($this->_cPtr,$a,$d);
	}
}

class Base {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function virtualmethod($a) {
		return Base_virtualmethod($this->_cPtr,$a);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__Base') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Base();
	}
}

class Derived extends Base {
	public $_cPtr=null;

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		Base::__set($var,$value);
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return Base::__isset($var);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return Base::__get($var);
	}

	function virtualmethod($a) {
		return Derived_virtualmethod($this->_cPtr,$a);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_Space__Derived') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_Derived();
	}
}

class ConversionOperators {
	public $_cPtr=null;
	protected $_pData=array();

	function __set($var,$value) {
		if ($var === 'thisown') return swig_features_alter_newobject($this->_cPtr,$value);
		$this->_pData[$var] = $value;
	}

	function __isset($var) {
		if ($var === 'thisown') return true;
		return array_key_exists($var, $this->_pData);
	}

	function __get($var) {
		if ($var === 'thisown') return swig_features_get_newobject($this->_cPtr);
		return $this->_pData[$var];
	}

	function opbool() {
		return ConversionOperators_opbool($this->_cPtr);
	}

	function opuint() {
		return ConversionOperators_opuint($this->_cPtr);
	}

	function __construct($res=null) {
		if (is_resource($res) && get_resource_type($res) === '_p_ConversionOperators') {
			$this->_cPtr=$res;
			return;
		}
		$this->_cPtr=new_ConversionOperators();
	}
}


?>
