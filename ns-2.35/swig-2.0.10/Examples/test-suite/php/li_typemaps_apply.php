<?php

/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.10
 * 
 * This file is not intended to be easily readable and contains a number of 
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG 
 * interface file instead. 
 * ----------------------------------------------------------------------------- */

// Try to load our extension if it's not already loaded.
if (!extension_loaded('li_typemaps_apply')) {
  if (strtolower(substr(PHP_OS, 0, 3)) === 'win') {
    if (!dl('php_li_typemaps_apply.dll')) return;
  } else {
    // PHP_SHLIB_SUFFIX gives 'dylib' on MacOS X but modules are 'so'.
    if (PHP_SHLIB_SUFFIX === 'dylib') {
      if (!dl('li_typemaps_apply.so')) return;
    } else {
      if (!dl('li_typemaps_apply.'.PHP_SHLIB_SUFFIX)) return;
    }
  }
}



abstract class li_typemaps_apply {
	static function input_ptr_bool($v) {
		return input_ptr_bool($v);
	}

	static function input_ref_bool($v) {
		return input_ref_bool($v);
	}

	static function output_ptr_bool($x) {
		return output_ptr_bool($x);
	}

	static function output_ref_bool($x) {
		return output_ref_bool($x);
	}

	static function inout_ptr_bool($v) {
		return inout_ptr_bool($v);
	}

	static function inout_ref_bool($v) {
		return inout_ref_bool($v);
	}

	static function input_ptr_int($v) {
		return input_ptr_int($v);
	}

	static function input_ref_int($v) {
		return input_ref_int($v);
	}

	static function output_ptr_int($x) {
		return output_ptr_int($x);
	}

	static function output_ref_int($x) {
		return output_ref_int($x);
	}

	static function inout_ptr_int($v) {
		return inout_ptr_int($v);
	}

	static function inout_ref_int($v) {
		return inout_ref_int($v);
	}

	static function input_ptr_short($v) {
		return input_ptr_short($v);
	}

	static function input_ref_short($v) {
		return input_ref_short($v);
	}

	static function output_ptr_short($x) {
		return output_ptr_short($x);
	}

	static function output_ref_short($x) {
		return output_ref_short($x);
	}

	static function inout_ptr_short($v) {
		return inout_ptr_short($v);
	}

	static function inout_ref_short($v) {
		return inout_ref_short($v);
	}

	static function input_ptr_long($v) {
		return input_ptr_long($v);
	}

	static function input_ref_long($v) {
		return input_ref_long($v);
	}

	static function output_ptr_long($x) {
		return output_ptr_long($x);
	}

	static function output_ref_long($x) {
		return output_ref_long($x);
	}

	static function inout_ptr_long($v) {
		return inout_ptr_long($v);
	}

	static function inout_ref_long($v) {
		return inout_ref_long($v);
	}

	static function input_ptr_uint($v) {
		return input_ptr_uint($v);
	}

	static function input_ref_uint($v) {
		return input_ref_uint($v);
	}

	static function output_ptr_uint($x) {
		return output_ptr_uint($x);
	}

	static function output_ref_uint($x) {
		return output_ref_uint($x);
	}

	static function inout_ptr_uint($v) {
		return inout_ptr_uint($v);
	}

	static function inout_ref_uint($v) {
		return inout_ref_uint($v);
	}

	static function input_ptr_ushort($v) {
		return input_ptr_ushort($v);
	}

	static function input_ref_ushort($v) {
		return input_ref_ushort($v);
	}

	static function output_ptr_ushort($x) {
		return output_ptr_ushort($x);
	}

	static function output_ref_ushort($x) {
		return output_ref_ushort($x);
	}

	static function inout_ptr_ushort($v) {
		return inout_ptr_ushort($v);
	}

	static function inout_ref_ushort($v) {
		return inout_ref_ushort($v);
	}

	static function input_ptr_ulong($v) {
		return input_ptr_ulong($v);
	}

	static function input_ref_ulong($v) {
		return input_ref_ulong($v);
	}

	static function output_ptr_ulong($x) {
		return output_ptr_ulong($x);
	}

	static function output_ref_ulong($x) {
		return output_ref_ulong($x);
	}

	static function inout_ptr_ulong($v) {
		return inout_ptr_ulong($v);
	}

	static function inout_ref_ulong($v) {
		return inout_ref_ulong($v);
	}

	static function input_ptr_uchar($v) {
		return input_ptr_uchar($v);
	}

	static function input_ref_uchar($v) {
		return input_ref_uchar($v);
	}

	static function output_ptr_uchar($x) {
		return output_ptr_uchar($x);
	}

	static function output_ref_uchar($x) {
		return output_ref_uchar($x);
	}

	static function inout_ptr_uchar($v) {
		return inout_ptr_uchar($v);
	}

	static function inout_ref_uchar($v) {
		return inout_ref_uchar($v);
	}

	static function input_ptr_schar($v) {
		return input_ptr_schar($v);
	}

	static function input_ref_schar($v) {
		return input_ref_schar($v);
	}

	static function output_ptr_schar($x) {
		return output_ptr_schar($x);
	}

	static function output_ref_schar($x) {
		return output_ref_schar($x);
	}

	static function inout_ptr_schar($v) {
		return inout_ptr_schar($v);
	}

	static function inout_ref_schar($v) {
		return inout_ref_schar($v);
	}

	static function input_ptr_float($v) {
		return input_ptr_float($v);
	}

	static function input_ref_float($v) {
		return input_ref_float($v);
	}

	static function output_ptr_float($x) {
		return output_ptr_float($x);
	}

	static function output_ref_float($x) {
		return output_ref_float($x);
	}

	static function inout_ptr_float($v) {
		return inout_ptr_float($v);
	}

	static function inout_ref_float($v) {
		return inout_ref_float($v);
	}

	static function input_ptr_double($v) {
		return input_ptr_double($v);
	}

	static function input_ref_double($v) {
		return input_ref_double($v);
	}

	static function output_ptr_double($x) {
		return output_ptr_double($x);
	}

	static function output_ref_double($x) {
		return output_ref_double($x);
	}

	static function inout_ptr_double($v) {
		return inout_ptr_double($v);
	}

	static function inout_ref_double($v) {
		return inout_ref_double($v);
	}

	static function input_ptr_longlong($v) {
		return input_ptr_longlong($v);
	}

	static function input_ref_longlong($v) {
		return input_ref_longlong($v);
	}

	static function output_ptr_longlong($x) {
		return output_ptr_longlong($x);
	}

	static function output_ref_longlong($x) {
		return output_ref_longlong($x);
	}

	static function inout_ptr_longlong($v) {
		return inout_ptr_longlong($v);
	}

	static function inout_ref_longlong($v) {
		return inout_ref_longlong($v);
	}

	static function input_ptr_ulonglong($v) {
		return input_ptr_ulonglong($v);
	}

	static function input_ref_ulonglong($v) {
		return input_ref_ulonglong($v);
	}

	static function output_ptr_ulonglong($x) {
		return output_ptr_ulonglong($x);
	}

	static function output_ref_ulonglong($x) {
		return output_ref_ulonglong($x);
	}

	static function inout_ptr_ulonglong($v) {
		return inout_ptr_ulonglong($v);
	}

	static function inout_ref_ulonglong($v) {
		return inout_ref_ulonglong($v);
	}
}

/* PHP Proxy Classes */

?>
