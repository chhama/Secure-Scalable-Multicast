# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_nested', [dirname(__file__)])
        except ImportError:
            import _nested
            return _nested
        if fp is not None:
            try:
                _mod = imp.load_module('_nested', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _nested = swig_import_helper()
    del swig_import_helper
else:
    import _nested
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class TestStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TestStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TestStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["a"] = _nested.TestStruct_a_set
    __swig_getmethods__["a"] = _nested.TestStruct_a_get
    if _newclass:a = _swig_property(_nested.TestStruct_a_get, _nested.TestStruct_a_set)
    def __init__(self): 
        this = _nested.new_TestStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_TestStruct
    __del__ = lambda self : None;
TestStruct_swigregister = _nested.TestStruct_swigregister
TestStruct_swigregister(TestStruct)

class OuterStructNamed(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStructNamed, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStructNamed, name)
    __repr__ = _swig_repr
    __swig_getmethods__["inner_struct_named"] = _nested.OuterStructNamed_inner_struct_named_get
    if _newclass:inner_struct_named = _swig_property(_nested.OuterStructNamed_inner_struct_named_get)
    __swig_getmethods__["inner_union_named"] = _nested.OuterStructNamed_inner_union_named_get
    if _newclass:inner_union_named = _swig_property(_nested.OuterStructNamed_inner_union_named_get)
    def __init__(self): 
        this = _nested.new_OuterStructNamed()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStructNamed
    __del__ = lambda self : None;
OuterStructNamed_swigregister = _nested.OuterStructNamed_swigregister
OuterStructNamed_swigregister(OuterStructNamed)

class OuterStructNamed_inner_union_named(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStructNamed_inner_union_named, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStructNamed_inner_union_named, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ee"] = _nested.OuterStructNamed_inner_union_named_ee_set
    __swig_getmethods__["ee"] = _nested.OuterStructNamed_inner_union_named_ee_get
    if _newclass:ee = _swig_property(_nested.OuterStructNamed_inner_union_named_ee_get, _nested.OuterStructNamed_inner_union_named_ee_set)
    __swig_setmethods__["ff"] = _nested.OuterStructNamed_inner_union_named_ff_set
    __swig_getmethods__["ff"] = _nested.OuterStructNamed_inner_union_named_ff_get
    if _newclass:ff = _swig_property(_nested.OuterStructNamed_inner_union_named_ff_get, _nested.OuterStructNamed_inner_union_named_ff_set)
    def __init__(self): 
        this = _nested.new_OuterStructNamed_inner_union_named()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStructNamed_inner_union_named
    __del__ = lambda self : None;
OuterStructNamed_inner_union_named_swigregister = _nested.OuterStructNamed_inner_union_named_swigregister
OuterStructNamed_inner_union_named_swigregister(OuterStructNamed_inner_union_named)

class OuterStructNamed_inner_struct_named(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStructNamed_inner_struct_named, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStructNamed_inner_struct_named, name)
    __repr__ = _swig_repr
    __swig_setmethods__["dd"] = _nested.OuterStructNamed_inner_struct_named_dd_set
    __swig_getmethods__["dd"] = _nested.OuterStructNamed_inner_struct_named_dd_get
    if _newclass:dd = _swig_property(_nested.OuterStructNamed_inner_struct_named_dd_get, _nested.OuterStructNamed_inner_struct_named_dd_set)
    def __init__(self): 
        this = _nested.new_OuterStructNamed_inner_struct_named()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStructNamed_inner_struct_named
    __del__ = lambda self : None;
OuterStructNamed_inner_struct_named_swigregister = _nested.OuterStructNamed_inner_struct_named_swigregister
OuterStructNamed_inner_struct_named_swigregister(OuterStructNamed_inner_struct_named)

class OuterStructUnnamed(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStructUnnamed, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStructUnnamed, name)
    __repr__ = _swig_repr
    __swig_getmethods__["inner_struct_unnamed"] = _nested.OuterStructUnnamed_inner_struct_unnamed_get
    if _newclass:inner_struct_unnamed = _swig_property(_nested.OuterStructUnnamed_inner_struct_unnamed_get)
    __swig_getmethods__["inner_union_unnamed"] = _nested.OuterStructUnnamed_inner_union_unnamed_get
    if _newclass:inner_union_unnamed = _swig_property(_nested.OuterStructUnnamed_inner_union_unnamed_get)
    def __init__(self): 
        this = _nested.new_OuterStructUnnamed()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStructUnnamed
    __del__ = lambda self : None;
OuterStructUnnamed_swigregister = _nested.OuterStructUnnamed_swigregister
OuterStructUnnamed_swigregister(OuterStructUnnamed)

class OuterStructUnnamed_inner_union_unnamed(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStructUnnamed_inner_union_unnamed, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStructUnnamed_inner_union_unnamed, name)
    __repr__ = _swig_repr
    __swig_setmethods__["yy"] = _nested.OuterStructUnnamed_inner_union_unnamed_yy_set
    __swig_getmethods__["yy"] = _nested.OuterStructUnnamed_inner_union_unnamed_yy_get
    if _newclass:yy = _swig_property(_nested.OuterStructUnnamed_inner_union_unnamed_yy_get, _nested.OuterStructUnnamed_inner_union_unnamed_yy_set)
    __swig_setmethods__["zz"] = _nested.OuterStructUnnamed_inner_union_unnamed_zz_set
    __swig_getmethods__["zz"] = _nested.OuterStructUnnamed_inner_union_unnamed_zz_get
    if _newclass:zz = _swig_property(_nested.OuterStructUnnamed_inner_union_unnamed_zz_get, _nested.OuterStructUnnamed_inner_union_unnamed_zz_set)
    def __init__(self): 
        this = _nested.new_OuterStructUnnamed_inner_union_unnamed()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStructUnnamed_inner_union_unnamed
    __del__ = lambda self : None;
OuterStructUnnamed_inner_union_unnamed_swigregister = _nested.OuterStructUnnamed_inner_union_unnamed_swigregister
OuterStructUnnamed_inner_union_unnamed_swigregister(OuterStructUnnamed_inner_union_unnamed)

class OuterStructUnnamed_inner_struct_unnamed(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStructUnnamed_inner_struct_unnamed, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStructUnnamed_inner_struct_unnamed, name)
    __repr__ = _swig_repr
    __swig_setmethods__["xx"] = _nested.OuterStructUnnamed_inner_struct_unnamed_xx_set
    __swig_getmethods__["xx"] = _nested.OuterStructUnnamed_inner_struct_unnamed_xx_get
    if _newclass:xx = _swig_property(_nested.OuterStructUnnamed_inner_struct_unnamed_xx_get, _nested.OuterStructUnnamed_inner_struct_unnamed_xx_set)
    def __init__(self): 
        this = _nested.new_OuterStructUnnamed_inner_struct_unnamed()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStructUnnamed_inner_struct_unnamed
    __del__ = lambda self : None;
OuterStructUnnamed_inner_struct_unnamed_swigregister = _nested.OuterStructUnnamed_inner_struct_unnamed_swigregister
OuterStructUnnamed_inner_struct_unnamed_swigregister(OuterStructUnnamed_inner_struct_unnamed)

class OuterStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStruct, name)
    __repr__ = _swig_repr
    __swig_getmethods__["EmbeddedUnion"] = _nested.OuterStruct_EmbeddedUnion_get
    if _newclass:EmbeddedUnion = _swig_property(_nested.OuterStruct_EmbeddedUnion_get)
    def __init__(self): 
        this = _nested.new_OuterStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStruct
    __del__ = lambda self : None;
OuterStruct_swigregister = _nested.OuterStruct_swigregister
OuterStruct_swigregister(OuterStruct)

class OuterStruct_EmbeddedUnion(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStruct_EmbeddedUnion, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStruct_EmbeddedUnion, name)
    __repr__ = _swig_repr
    __swig_getmethods__["OuterNestedStruct"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_get
    if _newclass:OuterNestedStruct = _swig_property(_nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_get)
    def __init__(self): 
        this = _nested.new_OuterStruct_EmbeddedUnion()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStruct_EmbeddedUnion
    __del__ = lambda self : None;
OuterStruct_EmbeddedUnion_swigregister = _nested.OuterStruct_EmbeddedUnion_swigregister
OuterStruct_EmbeddedUnion_swigregister(OuterStruct_EmbeddedUnion)

class OuterStruct_EmbeddedUnion_OuterNestedStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStruct_EmbeddedUnion_OuterNestedStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStruct_EmbeddedUnion_OuterNestedStruct, name)
    __repr__ = _swig_repr
    __swig_getmethods__["InnerNestedUnion"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_get
    if _newclass:InnerNestedUnion = _swig_property(_nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_get)
    __swig_getmethods__["InnerNestedStruct"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_get
    if _newclass:InnerNestedStruct = _swig_property(_nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_get)
    def __init__(self): 
        this = _nested.new_OuterStruct_EmbeddedUnion_OuterNestedStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStruct_EmbeddedUnion_OuterNestedStruct
    __del__ = lambda self : None;
OuterStruct_EmbeddedUnion_OuterNestedStruct_swigregister = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_swigregister
OuterStruct_EmbeddedUnion_OuterNestedStruct_swigregister(OuterStruct_EmbeddedUnion_OuterNestedStruct)

class OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["blue"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_blue_set
    __swig_getmethods__["blue"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_blue_get
    if _newclass:blue = _swig_property(_nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_blue_get, _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_blue_set)
    def __init__(self): 
        this = _nested.new_OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct
    __del__ = lambda self : None;
OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_swigregister = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_swigregister
OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct_swigregister(OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedStruct)

class OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion, name)
    __repr__ = _swig_repr
    __swig_setmethods__["red"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_red_set
    __swig_getmethods__["red"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_red_get
    if _newclass:red = _swig_property(_nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_red_get, _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_red_set)
    __swig_setmethods__["green"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_green_set
    __swig_getmethods__["green"] = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_green_get
    if _newclass:green = _swig_property(_nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_green_get, _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_green_set)
    def __init__(self): 
        this = _nested.new_OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested.delete_OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion
    __del__ = lambda self : None;
OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_swigregister = _nested.OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_swigregister
OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion_swigregister(OuterStruct_EmbeddedUnion_OuterNestedStruct_InnerNestedUnion)

# This file is compatible with both classic and new-style classes.


