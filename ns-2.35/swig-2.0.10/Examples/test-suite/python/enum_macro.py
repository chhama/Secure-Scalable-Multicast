# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_enum_macro', [dirname(__file__)])
        except ImportError:
            import _enum_macro
            return _enum_macro
        if fp is not None:
            try:
                _mod = imp.load_module('_enum_macro', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _enum_macro = swig_import_helper()
    del swig_import_helper
else:
    import _enum_macro
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


alpha1 = _enum_macro.alpha1
beta1 = _enum_macro.beta1
theta1 = _enum_macro.theta1
alpha2 = _enum_macro.alpha2
beta2 = _enum_macro.beta2
theta2 = _enum_macro.theta2
alpha3 = _enum_macro.alpha3
beta3 = _enum_macro.beta3
theta3 = _enum_macro.theta3
alpha4 = _enum_macro.alpha4
beta4 = _enum_macro.beta4
theta4 = _enum_macro.theta4
alpha5 = _enum_macro.alpha5
beta5 = _enum_macro.beta5
alpha6 = _enum_macro.alpha6
beta6 = _enum_macro.beta6
alpha7 = _enum_macro.alpha7
beta7 = _enum_macro.beta7
theta8 = _enum_macro.theta8
theta9 = _enum_macro.theta9
theta10 = _enum_macro.theta10
theta11 = _enum_macro.theta11
theta12 = _enum_macro.theta12
# This file is compatible with both classic and new-style classes.


