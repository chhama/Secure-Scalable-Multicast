# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_li_stdint', [dirname(__file__)])
        except ImportError:
            import _li_stdint
            return _li_stdint
        if fp is not None:
            try:
                _mod = imp.load_module('_li_stdint', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _li_stdint = swig_import_helper()
    del swig_import_helper
else:
    import _li_stdint
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class StdInts(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StdInts, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StdInts, name)
    __repr__ = _swig_repr
    __swig_setmethods__["int8_member"] = _li_stdint.StdInts_int8_member_set
    __swig_getmethods__["int8_member"] = _li_stdint.StdInts_int8_member_get
    if _newclass:int8_member = _swig_property(_li_stdint.StdInts_int8_member_get, _li_stdint.StdInts_int8_member_set)
    __swig_setmethods__["int16_member"] = _li_stdint.StdInts_int16_member_set
    __swig_getmethods__["int16_member"] = _li_stdint.StdInts_int16_member_get
    if _newclass:int16_member = _swig_property(_li_stdint.StdInts_int16_member_get, _li_stdint.StdInts_int16_member_set)
    __swig_setmethods__["int32_member"] = _li_stdint.StdInts_int32_member_set
    __swig_getmethods__["int32_member"] = _li_stdint.StdInts_int32_member_get
    if _newclass:int32_member = _swig_property(_li_stdint.StdInts_int32_member_get, _li_stdint.StdInts_int32_member_set)
    __swig_setmethods__["int64_member"] = _li_stdint.StdInts_int64_member_set
    __swig_getmethods__["int64_member"] = _li_stdint.StdInts_int64_member_get
    if _newclass:int64_member = _swig_property(_li_stdint.StdInts_int64_member_get, _li_stdint.StdInts_int64_member_set)
    __swig_setmethods__["uint8_member"] = _li_stdint.StdInts_uint8_member_set
    __swig_getmethods__["uint8_member"] = _li_stdint.StdInts_uint8_member_get
    if _newclass:uint8_member = _swig_property(_li_stdint.StdInts_uint8_member_get, _li_stdint.StdInts_uint8_member_set)
    __swig_setmethods__["uint16_member"] = _li_stdint.StdInts_uint16_member_set
    __swig_getmethods__["uint16_member"] = _li_stdint.StdInts_uint16_member_get
    if _newclass:uint16_member = _swig_property(_li_stdint.StdInts_uint16_member_get, _li_stdint.StdInts_uint16_member_set)
    __swig_setmethods__["uint32_member"] = _li_stdint.StdInts_uint32_member_set
    __swig_getmethods__["uint32_member"] = _li_stdint.StdInts_uint32_member_get
    if _newclass:uint32_member = _swig_property(_li_stdint.StdInts_uint32_member_get, _li_stdint.StdInts_uint32_member_set)
    __swig_setmethods__["uint64_member"] = _li_stdint.StdInts_uint64_member_set
    __swig_getmethods__["uint64_member"] = _li_stdint.StdInts_uint64_member_get
    if _newclass:uint64_member = _swig_property(_li_stdint.StdInts_uint64_member_get, _li_stdint.StdInts_uint64_member_set)
    def __init__(self): 
        this = _li_stdint.new_StdInts()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _li_stdint.delete_StdInts
    __del__ = lambda self : None;
StdInts_swigregister = _li_stdint.StdInts_swigregister
StdInts_swigregister(StdInts)


def int8_td(*args):
  return _li_stdint.int8_td(*args)
int8_td = _li_stdint.int8_td

def int16_td(*args):
  return _li_stdint.int16_td(*args)
int16_td = _li_stdint.int16_td

def int32_td(*args):
  return _li_stdint.int32_td(*args)
int32_td = _li_stdint.int32_td

def int64_td(*args):
  return _li_stdint.int64_td(*args)
int64_td = _li_stdint.int64_td

def uint8_td(*args):
  return _li_stdint.uint8_td(*args)
uint8_td = _li_stdint.uint8_td

def uint16_td(*args):
  return _li_stdint.uint16_td(*args)
uint16_td = _li_stdint.uint16_td

def uint32_td(*args):
  return _li_stdint.uint32_td(*args)
uint32_td = _li_stdint.uint32_td

def uint64_td(*args):
  return _li_stdint.uint64_td(*args)
uint64_td = _li_stdint.uint64_td
class StdIntFasts(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StdIntFasts, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StdIntFasts, name)
    __repr__ = _swig_repr
    __swig_setmethods__["int_fast8_member"] = _li_stdint.StdIntFasts_int_fast8_member_set
    __swig_getmethods__["int_fast8_member"] = _li_stdint.StdIntFasts_int_fast8_member_get
    if _newclass:int_fast8_member = _swig_property(_li_stdint.StdIntFasts_int_fast8_member_get, _li_stdint.StdIntFasts_int_fast8_member_set)
    __swig_setmethods__["int_fast16_member"] = _li_stdint.StdIntFasts_int_fast16_member_set
    __swig_getmethods__["int_fast16_member"] = _li_stdint.StdIntFasts_int_fast16_member_get
    if _newclass:int_fast16_member = _swig_property(_li_stdint.StdIntFasts_int_fast16_member_get, _li_stdint.StdIntFasts_int_fast16_member_set)
    __swig_setmethods__["int_fast32_member"] = _li_stdint.StdIntFasts_int_fast32_member_set
    __swig_getmethods__["int_fast32_member"] = _li_stdint.StdIntFasts_int_fast32_member_get
    if _newclass:int_fast32_member = _swig_property(_li_stdint.StdIntFasts_int_fast32_member_get, _li_stdint.StdIntFasts_int_fast32_member_set)
    __swig_setmethods__["int_fast64_member"] = _li_stdint.StdIntFasts_int_fast64_member_set
    __swig_getmethods__["int_fast64_member"] = _li_stdint.StdIntFasts_int_fast64_member_get
    if _newclass:int_fast64_member = _swig_property(_li_stdint.StdIntFasts_int_fast64_member_get, _li_stdint.StdIntFasts_int_fast64_member_set)
    __swig_setmethods__["uint_fast8_member"] = _li_stdint.StdIntFasts_uint_fast8_member_set
    __swig_getmethods__["uint_fast8_member"] = _li_stdint.StdIntFasts_uint_fast8_member_get
    if _newclass:uint_fast8_member = _swig_property(_li_stdint.StdIntFasts_uint_fast8_member_get, _li_stdint.StdIntFasts_uint_fast8_member_set)
    __swig_setmethods__["uint_fast16_member"] = _li_stdint.StdIntFasts_uint_fast16_member_set
    __swig_getmethods__["uint_fast16_member"] = _li_stdint.StdIntFasts_uint_fast16_member_get
    if _newclass:uint_fast16_member = _swig_property(_li_stdint.StdIntFasts_uint_fast16_member_get, _li_stdint.StdIntFasts_uint_fast16_member_set)
    __swig_setmethods__["uint_fast32_member"] = _li_stdint.StdIntFasts_uint_fast32_member_set
    __swig_getmethods__["uint_fast32_member"] = _li_stdint.StdIntFasts_uint_fast32_member_get
    if _newclass:uint_fast32_member = _swig_property(_li_stdint.StdIntFasts_uint_fast32_member_get, _li_stdint.StdIntFasts_uint_fast32_member_set)
    __swig_setmethods__["uint_fast64_member"] = _li_stdint.StdIntFasts_uint_fast64_member_set
    __swig_getmethods__["uint_fast64_member"] = _li_stdint.StdIntFasts_uint_fast64_member_get
    if _newclass:uint_fast64_member = _swig_property(_li_stdint.StdIntFasts_uint_fast64_member_get, _li_stdint.StdIntFasts_uint_fast64_member_set)
    def __init__(self): 
        this = _li_stdint.new_StdIntFasts()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _li_stdint.delete_StdIntFasts
    __del__ = lambda self : None;
StdIntFasts_swigregister = _li_stdint.StdIntFasts_swigregister
StdIntFasts_swigregister(StdIntFasts)


def int_fast8_td(*args):
  return _li_stdint.int_fast8_td(*args)
int_fast8_td = _li_stdint.int_fast8_td

def int_fast16_td(*args):
  return _li_stdint.int_fast16_td(*args)
int_fast16_td = _li_stdint.int_fast16_td

def int_fast32_td(*args):
  return _li_stdint.int_fast32_td(*args)
int_fast32_td = _li_stdint.int_fast32_td

def int_fast64_td(*args):
  return _li_stdint.int_fast64_td(*args)
int_fast64_td = _li_stdint.int_fast64_td

def uint_fast8_td(*args):
  return _li_stdint.uint_fast8_td(*args)
uint_fast8_td = _li_stdint.uint_fast8_td

def uint_fast16_td(*args):
  return _li_stdint.uint_fast16_td(*args)
uint_fast16_td = _li_stdint.uint_fast16_td

def uint_fast32_td(*args):
  return _li_stdint.uint_fast32_td(*args)
uint_fast32_td = _li_stdint.uint_fast32_td

def uint_fast64_td(*args):
  return _li_stdint.uint_fast64_td(*args)
uint_fast64_td = _li_stdint.uint_fast64_td
class StdIntLeasts(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, StdIntLeasts, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, StdIntLeasts, name)
    __repr__ = _swig_repr
    __swig_setmethods__["int_least8_member"] = _li_stdint.StdIntLeasts_int_least8_member_set
    __swig_getmethods__["int_least8_member"] = _li_stdint.StdIntLeasts_int_least8_member_get
    if _newclass:int_least8_member = _swig_property(_li_stdint.StdIntLeasts_int_least8_member_get, _li_stdint.StdIntLeasts_int_least8_member_set)
    __swig_setmethods__["int_least16_member"] = _li_stdint.StdIntLeasts_int_least16_member_set
    __swig_getmethods__["int_least16_member"] = _li_stdint.StdIntLeasts_int_least16_member_get
    if _newclass:int_least16_member = _swig_property(_li_stdint.StdIntLeasts_int_least16_member_get, _li_stdint.StdIntLeasts_int_least16_member_set)
    __swig_setmethods__["int_least32_member"] = _li_stdint.StdIntLeasts_int_least32_member_set
    __swig_getmethods__["int_least32_member"] = _li_stdint.StdIntLeasts_int_least32_member_get
    if _newclass:int_least32_member = _swig_property(_li_stdint.StdIntLeasts_int_least32_member_get, _li_stdint.StdIntLeasts_int_least32_member_set)
    __swig_setmethods__["int_least64_member"] = _li_stdint.StdIntLeasts_int_least64_member_set
    __swig_getmethods__["int_least64_member"] = _li_stdint.StdIntLeasts_int_least64_member_get
    if _newclass:int_least64_member = _swig_property(_li_stdint.StdIntLeasts_int_least64_member_get, _li_stdint.StdIntLeasts_int_least64_member_set)
    __swig_setmethods__["uint_least8_member"] = _li_stdint.StdIntLeasts_uint_least8_member_set
    __swig_getmethods__["uint_least8_member"] = _li_stdint.StdIntLeasts_uint_least8_member_get
    if _newclass:uint_least8_member = _swig_property(_li_stdint.StdIntLeasts_uint_least8_member_get, _li_stdint.StdIntLeasts_uint_least8_member_set)
    __swig_setmethods__["uint_least16_member"] = _li_stdint.StdIntLeasts_uint_least16_member_set
    __swig_getmethods__["uint_least16_member"] = _li_stdint.StdIntLeasts_uint_least16_member_get
    if _newclass:uint_least16_member = _swig_property(_li_stdint.StdIntLeasts_uint_least16_member_get, _li_stdint.StdIntLeasts_uint_least16_member_set)
    __swig_setmethods__["uint_least32_member"] = _li_stdint.StdIntLeasts_uint_least32_member_set
    __swig_getmethods__["uint_least32_member"] = _li_stdint.StdIntLeasts_uint_least32_member_get
    if _newclass:uint_least32_member = _swig_property(_li_stdint.StdIntLeasts_uint_least32_member_get, _li_stdint.StdIntLeasts_uint_least32_member_set)
    __swig_setmethods__["uint_least64_member"] = _li_stdint.StdIntLeasts_uint_least64_member_set
    __swig_getmethods__["uint_least64_member"] = _li_stdint.StdIntLeasts_uint_least64_member_get
    if _newclass:uint_least64_member = _swig_property(_li_stdint.StdIntLeasts_uint_least64_member_get, _li_stdint.StdIntLeasts_uint_least64_member_set)
    def __init__(self): 
        this = _li_stdint.new_StdIntLeasts()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _li_stdint.delete_StdIntLeasts
    __del__ = lambda self : None;
StdIntLeasts_swigregister = _li_stdint.StdIntLeasts_swigregister
StdIntLeasts_swigregister(StdIntLeasts)


def int_least8_td(*args):
  return _li_stdint.int_least8_td(*args)
int_least8_td = _li_stdint.int_least8_td

def int_least16_td(*args):
  return _li_stdint.int_least16_td(*args)
int_least16_td = _li_stdint.int_least16_td

def int_least32_td(*args):
  return _li_stdint.int_least32_td(*args)
int_least32_td = _li_stdint.int_least32_td

def int_least64_td(*args):
  return _li_stdint.int_least64_td(*args)
int_least64_td = _li_stdint.int_least64_td

def uint_least8_td(*args):
  return _li_stdint.uint_least8_td(*args)
uint_least8_td = _li_stdint.uint_least8_td

def uint_least16_td(*args):
  return _li_stdint.uint_least16_td(*args)
uint_least16_td = _li_stdint.uint_least16_td

def uint_least32_td(*args):
  return _li_stdint.uint_least32_td(*args)
uint_least32_td = _li_stdint.uint_least32_td

def uint_least64_td(*args):
  return _li_stdint.uint_least64_td(*args)
uint_least64_td = _li_stdint.uint_least64_td
# This file is compatible with both classic and new-style classes.


