# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_arrays_global', [dirname(__file__)])
        except ImportError:
            import _arrays_global
            return _arrays_global
        if fp is not None:
            try:
                _mod = imp.load_module('_arrays_global', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _arrays_global = swig_import_helper()
    del swig_import_helper
else:
    import _arrays_global
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


ARRAY_LEN = _arrays_global.ARRAY_LEN
One = _arrays_global.One
Two = _arrays_global.Two
Three = _arrays_global.Three
Four = _arrays_global.Four
Five = _arrays_global.Five
class SimpleStruct(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SimpleStruct, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SimpleStruct, name)
    __repr__ = _swig_repr
    __swig_setmethods__["double_field"] = _arrays_global.SimpleStruct_double_field_set
    __swig_getmethods__["double_field"] = _arrays_global.SimpleStruct_double_field_get
    if _newclass:double_field = _swig_property(_arrays_global.SimpleStruct_double_field_get, _arrays_global.SimpleStruct_double_field_set)
    def __init__(self): 
        this = _arrays_global.new_SimpleStruct()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _arrays_global.delete_SimpleStruct
    __del__ = lambda self : None;
SimpleStruct_swigregister = _arrays_global.SimpleStruct_swigregister
SimpleStruct_swigregister(SimpleStruct)


def test_a(*args):
  return _arrays_global.test_a(*args)
test_a = _arrays_global.test_a

def test_b(*args):
  return _arrays_global.test_b(*args)
test_b = _arrays_global.test_b
class Material(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Material, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Material, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _arrays_global.new_Material()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _arrays_global.delete_Material
    __del__ = lambda self : None;
Material_swigregister = _arrays_global.Material_swigregister
Material_swigregister(Material)
cvar = _arrays_global.cvar
array_const_i = cvar.array_const_i
BeginString_FIX44a = cvar.BeginString_FIX44a
BeginString_FIX44c = cvar.BeginString_FIX44c
BeginString_FIX44f = cvar.BeginString_FIX44f

Size = _arrays_global.Size
# This file is compatible with both classic and new-style classes.


