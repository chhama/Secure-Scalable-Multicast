# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_template_using_directive_and_declaration_forward', [dirname(__file__)])
        except ImportError:
            import _template_using_directive_and_declaration_forward
            return _template_using_directive_and_declaration_forward
        if fp is not None:
            try:
                _mod = imp.load_module('_template_using_directive_and_declaration_forward', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _template_using_directive_and_declaration_forward = swig_import_helper()
    del swig_import_helper
else:
    import _template_using_directive_and_declaration_forward
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def useit1(*args):
  return _template_using_directive_and_declaration_forward.useit1(*args)
useit1 = _template_using_directive_and_declaration_forward.useit1

def useit1a(*args):
  return _template_using_directive_and_declaration_forward.useit1a(*args)
useit1a = _template_using_directive_and_declaration_forward.useit1a

def useit1b(*args):
  return _template_using_directive_and_declaration_forward.useit1b(*args)
useit1b = _template_using_directive_and_declaration_forward.useit1b

def useit1c(*args):
  return _template_using_directive_and_declaration_forward.useit1c(*args)
useit1c = _template_using_directive_and_declaration_forward.useit1c

def useit2(*args):
  return _template_using_directive_and_declaration_forward.useit2(*args)
useit2 = _template_using_directive_and_declaration_forward.useit2

def useit2a(*args):
  return _template_using_directive_and_declaration_forward.useit2a(*args)
useit2a = _template_using_directive_and_declaration_forward.useit2a

def useit2b(*args):
  return _template_using_directive_and_declaration_forward.useit2b(*args)
useit2b = _template_using_directive_and_declaration_forward.useit2b

def useit2c(*args):
  return _template_using_directive_and_declaration_forward.useit2c(*args)
useit2c = _template_using_directive_and_declaration_forward.useit2c

def useit2d(*args):
  return _template_using_directive_and_declaration_forward.useit2d(*args)
useit2d = _template_using_directive_and_declaration_forward.useit2d

def useit3(*args):
  return _template_using_directive_and_declaration_forward.useit3(*args)
useit3 = _template_using_directive_and_declaration_forward.useit3

def useit3a(*args):
  return _template_using_directive_and_declaration_forward.useit3a(*args)
useit3a = _template_using_directive_and_declaration_forward.useit3a

def useit3b(*args):
  return _template_using_directive_and_declaration_forward.useit3b(*args)
useit3b = _template_using_directive_and_declaration_forward.useit3b

def useit3c(*args):
  return _template_using_directive_and_declaration_forward.useit3c(*args)
useit3c = _template_using_directive_and_declaration_forward.useit3c

def useit3d(*args):
  return _template_using_directive_and_declaration_forward.useit3d(*args)
useit3d = _template_using_directive_and_declaration_forward.useit3d

def useit4(*args):
  return _template_using_directive_and_declaration_forward.useit4(*args)
useit4 = _template_using_directive_and_declaration_forward.useit4

def useit4a(*args):
  return _template_using_directive_and_declaration_forward.useit4a(*args)
useit4a = _template_using_directive_and_declaration_forward.useit4a

def useit4b(*args):
  return _template_using_directive_and_declaration_forward.useit4b(*args)
useit4b = _template_using_directive_and_declaration_forward.useit4b

def useit4c(*args):
  return _template_using_directive_and_declaration_forward.useit4c(*args)
useit4c = _template_using_directive_and_declaration_forward.useit4c

def useit4d(*args):
  return _template_using_directive_and_declaration_forward.useit4d(*args)
useit4d = _template_using_directive_and_declaration_forward.useit4d

def useit5(*args):
  return _template_using_directive_and_declaration_forward.useit5(*args)
useit5 = _template_using_directive_and_declaration_forward.useit5

def useit5a(*args):
  return _template_using_directive_and_declaration_forward.useit5a(*args)
useit5a = _template_using_directive_and_declaration_forward.useit5a

def useit5b(*args):
  return _template_using_directive_and_declaration_forward.useit5b(*args)
useit5b = _template_using_directive_and_declaration_forward.useit5b

def useit5c(*args):
  return _template_using_directive_and_declaration_forward.useit5c(*args)
useit5c = _template_using_directive_and_declaration_forward.useit5c

def useit5d(*args):
  return _template_using_directive_and_declaration_forward.useit5d(*args)
useit5d = _template_using_directive_and_declaration_forward.useit5d

def useit7(*args):
  return _template_using_directive_and_declaration_forward.useit7(*args)
useit7 = _template_using_directive_and_declaration_forward.useit7

def useit7a(*args):
  return _template_using_directive_and_declaration_forward.useit7a(*args)
useit7a = _template_using_directive_and_declaration_forward.useit7a

def useit7b(*args):
  return _template_using_directive_and_declaration_forward.useit7b(*args)
useit7b = _template_using_directive_and_declaration_forward.useit7b

def useit7c(*args):
  return _template_using_directive_and_declaration_forward.useit7c(*args)
useit7c = _template_using_directive_and_declaration_forward.useit7c

def useit7d(*args):
  return _template_using_directive_and_declaration_forward.useit7d(*args)
useit7d = _template_using_directive_and_declaration_forward.useit7d
class Thing1Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thing1Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thing1Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_using_directive_and_declaration_forward.new_Thing1Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_using_directive_and_declaration_forward.delete_Thing1Int
    __del__ = lambda self : None;
Thing1Int_swigregister = _template_using_directive_and_declaration_forward.Thing1Int_swigregister
Thing1Int_swigregister(Thing1Int)

class Thing2Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thing2Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thing2Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_using_directive_and_declaration_forward.new_Thing2Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_using_directive_and_declaration_forward.delete_Thing2Int
    __del__ = lambda self : None;
Thing2Int_swigregister = _template_using_directive_and_declaration_forward.Thing2Int_swigregister
Thing2Int_swigregister(Thing2Int)

class Thing3Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thing3Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thing3Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_using_directive_and_declaration_forward.new_Thing3Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_using_directive_and_declaration_forward.delete_Thing3Int
    __del__ = lambda self : None;
Thing3Int_swigregister = _template_using_directive_and_declaration_forward.Thing3Int_swigregister
Thing3Int_swigregister(Thing3Int)

class Thing4Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thing4Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thing4Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_using_directive_and_declaration_forward.new_Thing4Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_using_directive_and_declaration_forward.delete_Thing4Int
    __del__ = lambda self : None;
Thing4Int_swigregister = _template_using_directive_and_declaration_forward.Thing4Int_swigregister
Thing4Int_swigregister(Thing4Int)

class Thing5Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thing5Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thing5Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_using_directive_and_declaration_forward.new_Thing5Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_using_directive_and_declaration_forward.delete_Thing5Int
    __del__ = lambda self : None;
Thing5Int_swigregister = _template_using_directive_and_declaration_forward.Thing5Int_swigregister
Thing5Int_swigregister(Thing5Int)

class Thing7Int(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Thing7Int, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Thing7Int, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_using_directive_and_declaration_forward.new_Thing7Int()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_using_directive_and_declaration_forward.delete_Thing7Int
    __del__ = lambda self : None;
Thing7Int_swigregister = _template_using_directive_and_declaration_forward.Thing7Int_swigregister
Thing7Int_swigregister(Thing7Int)

# This file is compatible with both classic and new-style classes.


