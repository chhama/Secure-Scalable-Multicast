# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_li_typemaps_apply', [dirname(__file__)])
        except ImportError:
            import _li_typemaps_apply
            return _li_typemaps_apply
        if fp is not None:
            try:
                _mod = imp.load_module('_li_typemaps_apply', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _li_typemaps_apply = swig_import_helper()
    del swig_import_helper
else:
    import _li_typemaps_apply
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0



def input_ptr_bool(*args):
  return _li_typemaps_apply.input_ptr_bool(*args)
input_ptr_bool = _li_typemaps_apply.input_ptr_bool

def input_ref_bool(*args):
  return _li_typemaps_apply.input_ref_bool(*args)
input_ref_bool = _li_typemaps_apply.input_ref_bool

def output_ptr_bool(*args):
  return _li_typemaps_apply.output_ptr_bool(*args)
output_ptr_bool = _li_typemaps_apply.output_ptr_bool

def output_ref_bool(*args):
  return _li_typemaps_apply.output_ref_bool(*args)
output_ref_bool = _li_typemaps_apply.output_ref_bool

def inout_ptr_bool(*args):
  return _li_typemaps_apply.inout_ptr_bool(*args)
inout_ptr_bool = _li_typemaps_apply.inout_ptr_bool

def inout_ref_bool(*args):
  return _li_typemaps_apply.inout_ref_bool(*args)
inout_ref_bool = _li_typemaps_apply.inout_ref_bool

def input_ptr_int(*args):
  return _li_typemaps_apply.input_ptr_int(*args)
input_ptr_int = _li_typemaps_apply.input_ptr_int

def input_ref_int(*args):
  return _li_typemaps_apply.input_ref_int(*args)
input_ref_int = _li_typemaps_apply.input_ref_int

def output_ptr_int(*args):
  return _li_typemaps_apply.output_ptr_int(*args)
output_ptr_int = _li_typemaps_apply.output_ptr_int

def output_ref_int(*args):
  return _li_typemaps_apply.output_ref_int(*args)
output_ref_int = _li_typemaps_apply.output_ref_int

def inout_ptr_int(*args):
  return _li_typemaps_apply.inout_ptr_int(*args)
inout_ptr_int = _li_typemaps_apply.inout_ptr_int

def inout_ref_int(*args):
  return _li_typemaps_apply.inout_ref_int(*args)
inout_ref_int = _li_typemaps_apply.inout_ref_int

def input_ptr_short(*args):
  return _li_typemaps_apply.input_ptr_short(*args)
input_ptr_short = _li_typemaps_apply.input_ptr_short

def input_ref_short(*args):
  return _li_typemaps_apply.input_ref_short(*args)
input_ref_short = _li_typemaps_apply.input_ref_short

def output_ptr_short(*args):
  return _li_typemaps_apply.output_ptr_short(*args)
output_ptr_short = _li_typemaps_apply.output_ptr_short

def output_ref_short(*args):
  return _li_typemaps_apply.output_ref_short(*args)
output_ref_short = _li_typemaps_apply.output_ref_short

def inout_ptr_short(*args):
  return _li_typemaps_apply.inout_ptr_short(*args)
inout_ptr_short = _li_typemaps_apply.inout_ptr_short

def inout_ref_short(*args):
  return _li_typemaps_apply.inout_ref_short(*args)
inout_ref_short = _li_typemaps_apply.inout_ref_short

def input_ptr_long(*args):
  return _li_typemaps_apply.input_ptr_long(*args)
input_ptr_long = _li_typemaps_apply.input_ptr_long

def input_ref_long(*args):
  return _li_typemaps_apply.input_ref_long(*args)
input_ref_long = _li_typemaps_apply.input_ref_long

def output_ptr_long(*args):
  return _li_typemaps_apply.output_ptr_long(*args)
output_ptr_long = _li_typemaps_apply.output_ptr_long

def output_ref_long(*args):
  return _li_typemaps_apply.output_ref_long(*args)
output_ref_long = _li_typemaps_apply.output_ref_long

def inout_ptr_long(*args):
  return _li_typemaps_apply.inout_ptr_long(*args)
inout_ptr_long = _li_typemaps_apply.inout_ptr_long

def inout_ref_long(*args):
  return _li_typemaps_apply.inout_ref_long(*args)
inout_ref_long = _li_typemaps_apply.inout_ref_long

def input_ptr_uint(*args):
  return _li_typemaps_apply.input_ptr_uint(*args)
input_ptr_uint = _li_typemaps_apply.input_ptr_uint

def input_ref_uint(*args):
  return _li_typemaps_apply.input_ref_uint(*args)
input_ref_uint = _li_typemaps_apply.input_ref_uint

def output_ptr_uint(*args):
  return _li_typemaps_apply.output_ptr_uint(*args)
output_ptr_uint = _li_typemaps_apply.output_ptr_uint

def output_ref_uint(*args):
  return _li_typemaps_apply.output_ref_uint(*args)
output_ref_uint = _li_typemaps_apply.output_ref_uint

def inout_ptr_uint(*args):
  return _li_typemaps_apply.inout_ptr_uint(*args)
inout_ptr_uint = _li_typemaps_apply.inout_ptr_uint

def inout_ref_uint(*args):
  return _li_typemaps_apply.inout_ref_uint(*args)
inout_ref_uint = _li_typemaps_apply.inout_ref_uint

def input_ptr_ushort(*args):
  return _li_typemaps_apply.input_ptr_ushort(*args)
input_ptr_ushort = _li_typemaps_apply.input_ptr_ushort

def input_ref_ushort(*args):
  return _li_typemaps_apply.input_ref_ushort(*args)
input_ref_ushort = _li_typemaps_apply.input_ref_ushort

def output_ptr_ushort(*args):
  return _li_typemaps_apply.output_ptr_ushort(*args)
output_ptr_ushort = _li_typemaps_apply.output_ptr_ushort

def output_ref_ushort(*args):
  return _li_typemaps_apply.output_ref_ushort(*args)
output_ref_ushort = _li_typemaps_apply.output_ref_ushort

def inout_ptr_ushort(*args):
  return _li_typemaps_apply.inout_ptr_ushort(*args)
inout_ptr_ushort = _li_typemaps_apply.inout_ptr_ushort

def inout_ref_ushort(*args):
  return _li_typemaps_apply.inout_ref_ushort(*args)
inout_ref_ushort = _li_typemaps_apply.inout_ref_ushort

def input_ptr_ulong(*args):
  return _li_typemaps_apply.input_ptr_ulong(*args)
input_ptr_ulong = _li_typemaps_apply.input_ptr_ulong

def input_ref_ulong(*args):
  return _li_typemaps_apply.input_ref_ulong(*args)
input_ref_ulong = _li_typemaps_apply.input_ref_ulong

def output_ptr_ulong(*args):
  return _li_typemaps_apply.output_ptr_ulong(*args)
output_ptr_ulong = _li_typemaps_apply.output_ptr_ulong

def output_ref_ulong(*args):
  return _li_typemaps_apply.output_ref_ulong(*args)
output_ref_ulong = _li_typemaps_apply.output_ref_ulong

def inout_ptr_ulong(*args):
  return _li_typemaps_apply.inout_ptr_ulong(*args)
inout_ptr_ulong = _li_typemaps_apply.inout_ptr_ulong

def inout_ref_ulong(*args):
  return _li_typemaps_apply.inout_ref_ulong(*args)
inout_ref_ulong = _li_typemaps_apply.inout_ref_ulong

def input_ptr_uchar(*args):
  return _li_typemaps_apply.input_ptr_uchar(*args)
input_ptr_uchar = _li_typemaps_apply.input_ptr_uchar

def input_ref_uchar(*args):
  return _li_typemaps_apply.input_ref_uchar(*args)
input_ref_uchar = _li_typemaps_apply.input_ref_uchar

def output_ptr_uchar(*args):
  return _li_typemaps_apply.output_ptr_uchar(*args)
output_ptr_uchar = _li_typemaps_apply.output_ptr_uchar

def output_ref_uchar(*args):
  return _li_typemaps_apply.output_ref_uchar(*args)
output_ref_uchar = _li_typemaps_apply.output_ref_uchar

def inout_ptr_uchar(*args):
  return _li_typemaps_apply.inout_ptr_uchar(*args)
inout_ptr_uchar = _li_typemaps_apply.inout_ptr_uchar

def inout_ref_uchar(*args):
  return _li_typemaps_apply.inout_ref_uchar(*args)
inout_ref_uchar = _li_typemaps_apply.inout_ref_uchar

def input_ptr_schar(*args):
  return _li_typemaps_apply.input_ptr_schar(*args)
input_ptr_schar = _li_typemaps_apply.input_ptr_schar

def input_ref_schar(*args):
  return _li_typemaps_apply.input_ref_schar(*args)
input_ref_schar = _li_typemaps_apply.input_ref_schar

def output_ptr_schar(*args):
  return _li_typemaps_apply.output_ptr_schar(*args)
output_ptr_schar = _li_typemaps_apply.output_ptr_schar

def output_ref_schar(*args):
  return _li_typemaps_apply.output_ref_schar(*args)
output_ref_schar = _li_typemaps_apply.output_ref_schar

def inout_ptr_schar(*args):
  return _li_typemaps_apply.inout_ptr_schar(*args)
inout_ptr_schar = _li_typemaps_apply.inout_ptr_schar

def inout_ref_schar(*args):
  return _li_typemaps_apply.inout_ref_schar(*args)
inout_ref_schar = _li_typemaps_apply.inout_ref_schar

def input_ptr_float(*args):
  return _li_typemaps_apply.input_ptr_float(*args)
input_ptr_float = _li_typemaps_apply.input_ptr_float

def input_ref_float(*args):
  return _li_typemaps_apply.input_ref_float(*args)
input_ref_float = _li_typemaps_apply.input_ref_float

def output_ptr_float(*args):
  return _li_typemaps_apply.output_ptr_float(*args)
output_ptr_float = _li_typemaps_apply.output_ptr_float

def output_ref_float(*args):
  return _li_typemaps_apply.output_ref_float(*args)
output_ref_float = _li_typemaps_apply.output_ref_float

def inout_ptr_float(*args):
  return _li_typemaps_apply.inout_ptr_float(*args)
inout_ptr_float = _li_typemaps_apply.inout_ptr_float

def inout_ref_float(*args):
  return _li_typemaps_apply.inout_ref_float(*args)
inout_ref_float = _li_typemaps_apply.inout_ref_float

def input_ptr_double(*args):
  return _li_typemaps_apply.input_ptr_double(*args)
input_ptr_double = _li_typemaps_apply.input_ptr_double

def input_ref_double(*args):
  return _li_typemaps_apply.input_ref_double(*args)
input_ref_double = _li_typemaps_apply.input_ref_double

def output_ptr_double(*args):
  return _li_typemaps_apply.output_ptr_double(*args)
output_ptr_double = _li_typemaps_apply.output_ptr_double

def output_ref_double(*args):
  return _li_typemaps_apply.output_ref_double(*args)
output_ref_double = _li_typemaps_apply.output_ref_double

def inout_ptr_double(*args):
  return _li_typemaps_apply.inout_ptr_double(*args)
inout_ptr_double = _li_typemaps_apply.inout_ptr_double

def inout_ref_double(*args):
  return _li_typemaps_apply.inout_ref_double(*args)
inout_ref_double = _li_typemaps_apply.inout_ref_double

def input_ptr_longlong(*args):
  return _li_typemaps_apply.input_ptr_longlong(*args)
input_ptr_longlong = _li_typemaps_apply.input_ptr_longlong

def input_ref_longlong(*args):
  return _li_typemaps_apply.input_ref_longlong(*args)
input_ref_longlong = _li_typemaps_apply.input_ref_longlong

def output_ptr_longlong(*args):
  return _li_typemaps_apply.output_ptr_longlong(*args)
output_ptr_longlong = _li_typemaps_apply.output_ptr_longlong

def output_ref_longlong(*args):
  return _li_typemaps_apply.output_ref_longlong(*args)
output_ref_longlong = _li_typemaps_apply.output_ref_longlong

def inout_ptr_longlong(*args):
  return _li_typemaps_apply.inout_ptr_longlong(*args)
inout_ptr_longlong = _li_typemaps_apply.inout_ptr_longlong

def inout_ref_longlong(*args):
  return _li_typemaps_apply.inout_ref_longlong(*args)
inout_ref_longlong = _li_typemaps_apply.inout_ref_longlong

def input_ptr_ulonglong(*args):
  return _li_typemaps_apply.input_ptr_ulonglong(*args)
input_ptr_ulonglong = _li_typemaps_apply.input_ptr_ulonglong

def input_ref_ulonglong(*args):
  return _li_typemaps_apply.input_ref_ulonglong(*args)
input_ref_ulonglong = _li_typemaps_apply.input_ref_ulonglong

def output_ptr_ulonglong(*args):
  return _li_typemaps_apply.output_ptr_ulonglong(*args)
output_ptr_ulonglong = _li_typemaps_apply.output_ptr_ulonglong

def output_ref_ulonglong(*args):
  return _li_typemaps_apply.output_ref_ulonglong(*args)
output_ref_ulonglong = _li_typemaps_apply.output_ref_ulonglong

def inout_ptr_ulonglong(*args):
  return _li_typemaps_apply.inout_ptr_ulonglong(*args)
inout_ptr_ulonglong = _li_typemaps_apply.inout_ptr_ulonglong

def inout_ref_ulonglong(*args):
  return _li_typemaps_apply.inout_ref_ulonglong(*args)
inout_ref_ulonglong = _li_typemaps_apply.inout_ref_ulonglong
# This file is compatible with both classic and new-style classes.


