# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_primitive_types', [dirname(__file__)])
        except ImportError:
            import _primitive_types
            return _primitive_types
        if fp is not None:
            try:
                _mod = imp.load_module('_primitive_types', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _primitive_types = swig_import_helper()
    del swig_import_helper
else:
    import _primitive_types
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


Hi = _primitive_types.Hi
Hola = _primitive_types.Hola
def_bool = _primitive_types.def_bool
def_schar = _primitive_types.def_schar
def_uchar = _primitive_types.def_uchar
def_int = _primitive_types.def_int
def_uint = _primitive_types.def_uint
def_short = _primitive_types.def_short
def_ushort = _primitive_types.def_ushort
def_long = _primitive_types.def_long
def_ulong = _primitive_types.def_ulong
def_llong = _primitive_types.def_llong
def_ullong = _primitive_types.def_ullong
def_float = _primitive_types.def_float
def_double = _primitive_types.def_double
def_char = _primitive_types.def_char
def_pint = _primitive_types.def_pint
def_sizet = _primitive_types.def_sizet
def_myint = _primitive_types.def_myint
def_parami = _primitive_types.def_parami
def_paramd = _primitive_types.def_paramd
def_paramc = _primitive_types.def_paramc
sct_bool = _primitive_types.sct_bool
sct_schar = _primitive_types.sct_schar
sct_uchar = _primitive_types.sct_uchar
sct_int = _primitive_types.sct_int
sct_uint = _primitive_types.sct_uint
sct_short = _primitive_types.sct_short
sct_ushort = _primitive_types.sct_ushort
sct_long = _primitive_types.sct_long
sct_ulong = _primitive_types.sct_ulong
sct_llong = _primitive_types.sct_llong
sct_ullong = _primitive_types.sct_ullong
sct_char = _primitive_types.sct_char
sct_pchar = _primitive_types.sct_pchar
sct_pcharc = _primitive_types.sct_pcharc
sct_pint = _primitive_types.sct_pint
sct_hello = _primitive_types.sct_hello
sct_myint = _primitive_types.sct_myint
sct_parami = _primitive_types.sct_parami
sct_paramd = _primitive_types.sct_paramd
sct_paramc = _primitive_types.sct_paramc
sct_sizet = _primitive_types.sct_sizet

def val_bool(*args):
  return _primitive_types.val_bool(*args)
val_bool = _primitive_types.val_bool

def val_schar(*args):
  return _primitive_types.val_schar(*args)
val_schar = _primitive_types.val_schar

def val_uchar(*args):
  return _primitive_types.val_uchar(*args)
val_uchar = _primitive_types.val_uchar

def val_int(*args):
  return _primitive_types.val_int(*args)
val_int = _primitive_types.val_int

def val_uint(*args):
  return _primitive_types.val_uint(*args)
val_uint = _primitive_types.val_uint

def val_short(*args):
  return _primitive_types.val_short(*args)
val_short = _primitive_types.val_short

def val_ushort(*args):
  return _primitive_types.val_ushort(*args)
val_ushort = _primitive_types.val_ushort

def val_long(*args):
  return _primitive_types.val_long(*args)
val_long = _primitive_types.val_long

def val_ulong(*args):
  return _primitive_types.val_ulong(*args)
val_ulong = _primitive_types.val_ulong

def val_llong(*args):
  return _primitive_types.val_llong(*args)
val_llong = _primitive_types.val_llong

def val_ullong(*args):
  return _primitive_types.val_ullong(*args)
val_ullong = _primitive_types.val_ullong

def val_char(*args):
  return _primitive_types.val_char(*args)
val_char = _primitive_types.val_char

def val_pchar(*args):
  return _primitive_types.val_pchar(*args)
val_pchar = _primitive_types.val_pchar

def val_pcharc(*args):
  return _primitive_types.val_pcharc(*args)
val_pcharc = _primitive_types.val_pcharc

def val_pint(*args):
  return _primitive_types.val_pint(*args)
val_pint = _primitive_types.val_pint

def val_hello(*args):
  return _primitive_types.val_hello(*args)
val_hello = _primitive_types.val_hello

def val_myint(*args):
  return _primitive_types.val_myint(*args)
val_myint = _primitive_types.val_myint

def val_parami(*args):
  return _primitive_types.val_parami(*args)
val_parami = _primitive_types.val_parami

def val_paramd(*args):
  return _primitive_types.val_paramd(*args)
val_paramd = _primitive_types.val_paramd

def val_paramc(*args):
  return _primitive_types.val_paramc(*args)
val_paramc = _primitive_types.val_paramc

def val_sizet(*args):
  return _primitive_types.val_sizet(*args)
val_sizet = _primitive_types.val_sizet

def ref_bool(*args):
  return _primitive_types.ref_bool(*args)
ref_bool = _primitive_types.ref_bool

def ref_schar(*args):
  return _primitive_types.ref_schar(*args)
ref_schar = _primitive_types.ref_schar

def ref_uchar(*args):
  return _primitive_types.ref_uchar(*args)
ref_uchar = _primitive_types.ref_uchar

def ref_int(*args):
  return _primitive_types.ref_int(*args)
ref_int = _primitive_types.ref_int

def ref_uint(*args):
  return _primitive_types.ref_uint(*args)
ref_uint = _primitive_types.ref_uint

def ref_short(*args):
  return _primitive_types.ref_short(*args)
ref_short = _primitive_types.ref_short

def ref_ushort(*args):
  return _primitive_types.ref_ushort(*args)
ref_ushort = _primitive_types.ref_ushort

def ref_long(*args):
  return _primitive_types.ref_long(*args)
ref_long = _primitive_types.ref_long

def ref_ulong(*args):
  return _primitive_types.ref_ulong(*args)
ref_ulong = _primitive_types.ref_ulong

def ref_llong(*args):
  return _primitive_types.ref_llong(*args)
ref_llong = _primitive_types.ref_llong

def ref_ullong(*args):
  return _primitive_types.ref_ullong(*args)
ref_ullong = _primitive_types.ref_ullong

def ref_char(*args):
  return _primitive_types.ref_char(*args)
ref_char = _primitive_types.ref_char

def ref_pchar(*args):
  return _primitive_types.ref_pchar(*args)
ref_pchar = _primitive_types.ref_pchar

def ref_pcharc(*args):
  return _primitive_types.ref_pcharc(*args)
ref_pcharc = _primitive_types.ref_pcharc

def ref_pint(*args):
  return _primitive_types.ref_pint(*args)
ref_pint = _primitive_types.ref_pint

def ref_hello(*args):
  return _primitive_types.ref_hello(*args)
ref_hello = _primitive_types.ref_hello

def ref_myint(*args):
  return _primitive_types.ref_myint(*args)
ref_myint = _primitive_types.ref_myint

def ref_parami(*args):
  return _primitive_types.ref_parami(*args)
ref_parami = _primitive_types.ref_parami

def ref_paramd(*args):
  return _primitive_types.ref_paramd(*args)
ref_paramd = _primitive_types.ref_paramd

def ref_paramc(*args):
  return _primitive_types.ref_paramc(*args)
ref_paramc = _primitive_types.ref_paramc

def ref_sizet(*args):
  return _primitive_types.ref_sizet(*args)
ref_sizet = _primitive_types.ref_sizet

def var_init():
  return _primitive_types.var_init()
var_init = _primitive_types.var_init
class Foo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Foo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Foo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["_a"] = _primitive_types.Foo__a_set
    __swig_getmethods__["_a"] = _primitive_types.Foo__a_get
    if _newclass:_a = _swig_property(_primitive_types.Foo__a_get, _primitive_types.Foo__a_set)
    def __init__(self, *args): 
        this = _primitive_types.new_Foo(*args)
        try: self.this.append(this)
        except: self.this = this
    def copy(self, *args): return _primitive_types.Foo_copy(self, *args)
    def copy_c(self, *args): return _primitive_types.Foo_copy_c(self, *args)
    def copy_r(self, *args): return _primitive_types.Foo_copy_r(self, *args)
    def this_p(self): return _primitive_types.Foo_this_p(self)
    def this_r(self): return _primitive_types.Foo_this_r(self)
    __swig_destroy__ = _primitive_types.delete_Foo
    __del__ = lambda self : None;
Foo_swigregister = _primitive_types.Foo_swigregister
Foo_swigregister(Foo)
cvar = _primitive_types.cvar
def_pchar = cvar.def_pchar
def_pcharc = cvar.def_pcharc
def_namet = cvar.def_namet
cct_bool = cvar.cct_bool
cct_schar = cvar.cct_schar
cct_uchar = cvar.cct_uchar
cct_int = cvar.cct_int
cct_uint = cvar.cct_uint
cct_short = cvar.cct_short
cct_ushort = cvar.cct_ushort
cct_long = cvar.cct_long
cct_ulong = cvar.cct_ulong
cct_llong = cvar.cct_llong
cct_ullong = cvar.cct_ullong
cct_char = cvar.cct_char
cct_pchar = cvar.cct_pchar
cct_pcharc = cvar.cct_pcharc
cct_pint = cvar.cct_pint
cct_hello = cvar.cct_hello
cct_myint = cvar.cct_myint
cct_parami = cvar.cct_parami
cct_paramd = cvar.cct_paramd
cct_paramc = cvar.cct_paramc
cct_sizet = cvar.cct_sizet


def fptr_val(*args):
  return _primitive_types.fptr_val(*args)
fptr_val = _primitive_types.fptr_val

def fptr_ref(*args):
  return _primitive_types.fptr_ref(*args)
fptr_ref = _primitive_types.fptr_ref
class Test(Exception):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Test, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Test, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _primitive_types.new_Test()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _primitive_types.delete_Test
    __del__ = lambda self : None;
    stc_bool = _primitive_types.Test_stc_bool
    stc_schar = _primitive_types.Test_stc_schar
    stc_uchar = _primitive_types.Test_stc_uchar
    stc_int = _primitive_types.Test_stc_int
    stc_uint = _primitive_types.Test_stc_uint
    stc_short = _primitive_types.Test_stc_short
    stc_ushort = _primitive_types.Test_stc_ushort
    stc_long = _primitive_types.Test_stc_long
    stc_ulong = _primitive_types.Test_stc_ulong
    stc_llong = _primitive_types.Test_stc_llong
    stc_ullong = _primitive_types.Test_stc_ullong
    stc_char = _primitive_types.Test_stc_char
    __swig_setmethods__["var_bool"] = _primitive_types.Test_var_bool_set
    __swig_getmethods__["var_bool"] = _primitive_types.Test_var_bool_get
    __swig_setmethods__["var_schar"] = _primitive_types.Test_var_schar_set
    __swig_getmethods__["var_schar"] = _primitive_types.Test_var_schar_get
    __swig_setmethods__["var_uchar"] = _primitive_types.Test_var_uchar_set
    __swig_getmethods__["var_uchar"] = _primitive_types.Test_var_uchar_get
    __swig_setmethods__["var_int"] = _primitive_types.Test_var_int_set
    __swig_getmethods__["var_int"] = _primitive_types.Test_var_int_get
    __swig_setmethods__["var_uint"] = _primitive_types.Test_var_uint_set
    __swig_getmethods__["var_uint"] = _primitive_types.Test_var_uint_get
    __swig_setmethods__["var_short"] = _primitive_types.Test_var_short_set
    __swig_getmethods__["var_short"] = _primitive_types.Test_var_short_get
    __swig_setmethods__["var_ushort"] = _primitive_types.Test_var_ushort_set
    __swig_getmethods__["var_ushort"] = _primitive_types.Test_var_ushort_get
    __swig_setmethods__["var_long"] = _primitive_types.Test_var_long_set
    __swig_getmethods__["var_long"] = _primitive_types.Test_var_long_get
    __swig_setmethods__["var_ulong"] = _primitive_types.Test_var_ulong_set
    __swig_getmethods__["var_ulong"] = _primitive_types.Test_var_ulong_get
    __swig_setmethods__["var_llong"] = _primitive_types.Test_var_llong_set
    __swig_getmethods__["var_llong"] = _primitive_types.Test_var_llong_get
    __swig_setmethods__["var_ullong"] = _primitive_types.Test_var_ullong_set
    __swig_getmethods__["var_ullong"] = _primitive_types.Test_var_ullong_get
    __swig_setmethods__["var_char"] = _primitive_types.Test_var_char_set
    __swig_getmethods__["var_char"] = _primitive_types.Test_var_char_get
    __swig_setmethods__["var_pchar"] = _primitive_types.Test_var_pchar_set
    __swig_getmethods__["var_pchar"] = _primitive_types.Test_var_pchar_get
    __swig_setmethods__["var_pcharc"] = _primitive_types.Test_var_pcharc_set
    __swig_getmethods__["var_pcharc"] = _primitive_types.Test_var_pcharc_get
    __swig_setmethods__["var_pint"] = _primitive_types.Test_var_pint_set
    __swig_getmethods__["var_pint"] = _primitive_types.Test_var_pint_get
    __swig_setmethods__["var_hello"] = _primitive_types.Test_var_hello_set
    __swig_getmethods__["var_hello"] = _primitive_types.Test_var_hello_get
    __swig_setmethods__["var_myint"] = _primitive_types.Test_var_myint_set
    __swig_getmethods__["var_myint"] = _primitive_types.Test_var_myint_get
    __swig_setmethods__["var_parami"] = _primitive_types.Test_var_parami_set
    __swig_getmethods__["var_parami"] = _primitive_types.Test_var_parami_get
    __swig_setmethods__["var_paramd"] = _primitive_types.Test_var_paramd_set
    __swig_getmethods__["var_paramd"] = _primitive_types.Test_var_paramd_get
    __swig_setmethods__["var_paramc"] = _primitive_types.Test_var_paramc_set
    __swig_getmethods__["var_paramc"] = _primitive_types.Test_var_paramc_get
    __swig_setmethods__["var_sizet"] = _primitive_types.Test_var_sizet_set
    __swig_getmethods__["var_sizet"] = _primitive_types.Test_var_sizet_get
    __swig_setmethods__["var_namet"] = _primitive_types.Test_var_namet_set
    __swig_getmethods__["var_namet"] = _primitive_types.Test_var_namet_get
    def val_namet(self, *args): return _primitive_types.Test_val_namet(self, *args)
    def val_cnamet(self, *args): return _primitive_types.Test_val_cnamet(self, *args)
    def val_bool(self, *args): return _primitive_types.Test_val_bool(self, *args)
    def val_schar(self, *args): return _primitive_types.Test_val_schar(self, *args)
    def val_uchar(self, *args): return _primitive_types.Test_val_uchar(self, *args)
    def val_int(self, *args): return _primitive_types.Test_val_int(self, *args)
    def val_uint(self, *args): return _primitive_types.Test_val_uint(self, *args)
    def val_short(self, *args): return _primitive_types.Test_val_short(self, *args)
    def val_ushort(self, *args): return _primitive_types.Test_val_ushort(self, *args)
    def val_long(self, *args): return _primitive_types.Test_val_long(self, *args)
    def val_ulong(self, *args): return _primitive_types.Test_val_ulong(self, *args)
    def val_llong(self, *args): return _primitive_types.Test_val_llong(self, *args)
    def val_ullong(self, *args): return _primitive_types.Test_val_ullong(self, *args)
    def val_char(self, *args): return _primitive_types.Test_val_char(self, *args)
    def val_pchar(self, *args): return _primitive_types.Test_val_pchar(self, *args)
    def val_pcharc(self, *args): return _primitive_types.Test_val_pcharc(self, *args)
    def val_pint(self, *args): return _primitive_types.Test_val_pint(self, *args)
    def val_hello(self, *args): return _primitive_types.Test_val_hello(self, *args)
    def val_myint(self, *args): return _primitive_types.Test_val_myint(self, *args)
    def val_parami(self, *args): return _primitive_types.Test_val_parami(self, *args)
    def val_paramd(self, *args): return _primitive_types.Test_val_paramd(self, *args)
    def val_paramc(self, *args): return _primitive_types.Test_val_paramc(self, *args)
    def val_sizet(self, *args): return _primitive_types.Test_val_sizet(self, *args)
    def ref_bool(self, *args): return _primitive_types.Test_ref_bool(self, *args)
    def ref_schar(self, *args): return _primitive_types.Test_ref_schar(self, *args)
    def ref_uchar(self, *args): return _primitive_types.Test_ref_uchar(self, *args)
    def ref_int(self, *args): return _primitive_types.Test_ref_int(self, *args)
    def ref_uint(self, *args): return _primitive_types.Test_ref_uint(self, *args)
    def ref_short(self, *args): return _primitive_types.Test_ref_short(self, *args)
    def ref_ushort(self, *args): return _primitive_types.Test_ref_ushort(self, *args)
    def ref_long(self, *args): return _primitive_types.Test_ref_long(self, *args)
    def ref_ulong(self, *args): return _primitive_types.Test_ref_ulong(self, *args)
    def ref_llong(self, *args): return _primitive_types.Test_ref_llong(self, *args)
    def ref_ullong(self, *args): return _primitive_types.Test_ref_ullong(self, *args)
    def ref_char(self, *args): return _primitive_types.Test_ref_char(self, *args)
    def ref_pchar(self, *args): return _primitive_types.Test_ref_pchar(self, *args)
    def ref_pcharc(self, *args): return _primitive_types.Test_ref_pcharc(self, *args)
    def ref_pint(self, *args): return _primitive_types.Test_ref_pint(self, *args)
    def ref_hello(self, *args): return _primitive_types.Test_ref_hello(self, *args)
    def ref_myint(self, *args): return _primitive_types.Test_ref_myint(self, *args)
    def ref_parami(self, *args): return _primitive_types.Test_ref_parami(self, *args)
    def ref_paramd(self, *args): return _primitive_types.Test_ref_paramd(self, *args)
    def ref_paramc(self, *args): return _primitive_types.Test_ref_paramc(self, *args)
    def ref_sizet(self, *args): return _primitive_types.Test_ref_sizet(self, *args)
    def c_check(self): return _primitive_types.Test_c_check(self)
    def v_check(self): return _primitive_types.Test_v_check(self)
    def ovr_val(self, *args): return _primitive_types.Test_ovr_val(self, *args)
    def ovr_ref(self, *args): return _primitive_types.Test_ovr_ref(self, *args)
Test_swigregister = _primitive_types.Test_swigregister
Test_swigregister(Test)
Test.stc_double = _primitive_types.cvar.Test_stc_double
Test.stc_float = _primitive_types.cvar.Test_stc_float

class TestDirector(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TestDirector, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TestDirector, name)
    __repr__ = _swig_repr
    def __init__(self): 
        if self.__class__ == TestDirector:
            _self = None
        else:
            _self = self
        this = _primitive_types.new_TestDirector(_self, )
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _primitive_types.delete_TestDirector
    __del__ = lambda self : None;
    def vval_namet(self, *args): return _primitive_types.TestDirector_vval_namet(self, *args)
    def vval_cnamet(self, *args): return _primitive_types.TestDirector_vval_cnamet(self, *args)
    stc_bool = _primitive_types.TestDirector_stc_bool
    stc_schar = _primitive_types.TestDirector_stc_schar
    stc_uchar = _primitive_types.TestDirector_stc_uchar
    stc_int = _primitive_types.TestDirector_stc_int
    stc_uint = _primitive_types.TestDirector_stc_uint
    stc_short = _primitive_types.TestDirector_stc_short
    stc_ushort = _primitive_types.TestDirector_stc_ushort
    stc_long = _primitive_types.TestDirector_stc_long
    stc_ulong = _primitive_types.TestDirector_stc_ulong
    stc_llong = _primitive_types.TestDirector_stc_llong
    stc_ullong = _primitive_types.TestDirector_stc_ullong
    stc_char = _primitive_types.TestDirector_stc_char
    __swig_setmethods__["var_bool"] = _primitive_types.TestDirector_var_bool_set
    __swig_getmethods__["var_bool"] = _primitive_types.TestDirector_var_bool_get
    if _newclass:var_bool = _swig_property(_primitive_types.TestDirector_var_bool_get, _primitive_types.TestDirector_var_bool_set)
    __swig_setmethods__["var_schar"] = _primitive_types.TestDirector_var_schar_set
    __swig_getmethods__["var_schar"] = _primitive_types.TestDirector_var_schar_get
    if _newclass:var_schar = _swig_property(_primitive_types.TestDirector_var_schar_get, _primitive_types.TestDirector_var_schar_set)
    __swig_setmethods__["var_uchar"] = _primitive_types.TestDirector_var_uchar_set
    __swig_getmethods__["var_uchar"] = _primitive_types.TestDirector_var_uchar_get
    if _newclass:var_uchar = _swig_property(_primitive_types.TestDirector_var_uchar_get, _primitive_types.TestDirector_var_uchar_set)
    __swig_setmethods__["var_int"] = _primitive_types.TestDirector_var_int_set
    __swig_getmethods__["var_int"] = _primitive_types.TestDirector_var_int_get
    if _newclass:var_int = _swig_property(_primitive_types.TestDirector_var_int_get, _primitive_types.TestDirector_var_int_set)
    __swig_setmethods__["var_uint"] = _primitive_types.TestDirector_var_uint_set
    __swig_getmethods__["var_uint"] = _primitive_types.TestDirector_var_uint_get
    if _newclass:var_uint = _swig_property(_primitive_types.TestDirector_var_uint_get, _primitive_types.TestDirector_var_uint_set)
    __swig_setmethods__["var_short"] = _primitive_types.TestDirector_var_short_set
    __swig_getmethods__["var_short"] = _primitive_types.TestDirector_var_short_get
    if _newclass:var_short = _swig_property(_primitive_types.TestDirector_var_short_get, _primitive_types.TestDirector_var_short_set)
    __swig_setmethods__["var_ushort"] = _primitive_types.TestDirector_var_ushort_set
    __swig_getmethods__["var_ushort"] = _primitive_types.TestDirector_var_ushort_get
    if _newclass:var_ushort = _swig_property(_primitive_types.TestDirector_var_ushort_get, _primitive_types.TestDirector_var_ushort_set)
    __swig_setmethods__["var_long"] = _primitive_types.TestDirector_var_long_set
    __swig_getmethods__["var_long"] = _primitive_types.TestDirector_var_long_get
    if _newclass:var_long = _swig_property(_primitive_types.TestDirector_var_long_get, _primitive_types.TestDirector_var_long_set)
    __swig_setmethods__["var_ulong"] = _primitive_types.TestDirector_var_ulong_set
    __swig_getmethods__["var_ulong"] = _primitive_types.TestDirector_var_ulong_get
    if _newclass:var_ulong = _swig_property(_primitive_types.TestDirector_var_ulong_get, _primitive_types.TestDirector_var_ulong_set)
    __swig_setmethods__["var_llong"] = _primitive_types.TestDirector_var_llong_set
    __swig_getmethods__["var_llong"] = _primitive_types.TestDirector_var_llong_get
    if _newclass:var_llong = _swig_property(_primitive_types.TestDirector_var_llong_get, _primitive_types.TestDirector_var_llong_set)
    __swig_setmethods__["var_ullong"] = _primitive_types.TestDirector_var_ullong_set
    __swig_getmethods__["var_ullong"] = _primitive_types.TestDirector_var_ullong_get
    if _newclass:var_ullong = _swig_property(_primitive_types.TestDirector_var_ullong_get, _primitive_types.TestDirector_var_ullong_set)
    __swig_setmethods__["var_char"] = _primitive_types.TestDirector_var_char_set
    __swig_getmethods__["var_char"] = _primitive_types.TestDirector_var_char_get
    if _newclass:var_char = _swig_property(_primitive_types.TestDirector_var_char_get, _primitive_types.TestDirector_var_char_set)
    __swig_setmethods__["var_pchar"] = _primitive_types.TestDirector_var_pchar_set
    __swig_getmethods__["var_pchar"] = _primitive_types.TestDirector_var_pchar_get
    if _newclass:var_pchar = _swig_property(_primitive_types.TestDirector_var_pchar_get, _primitive_types.TestDirector_var_pchar_set)
    __swig_setmethods__["var_pcharc"] = _primitive_types.TestDirector_var_pcharc_set
    __swig_getmethods__["var_pcharc"] = _primitive_types.TestDirector_var_pcharc_get
    if _newclass:var_pcharc = _swig_property(_primitive_types.TestDirector_var_pcharc_get, _primitive_types.TestDirector_var_pcharc_set)
    __swig_setmethods__["var_pint"] = _primitive_types.TestDirector_var_pint_set
    __swig_getmethods__["var_pint"] = _primitive_types.TestDirector_var_pint_get
    if _newclass:var_pint = _swig_property(_primitive_types.TestDirector_var_pint_get, _primitive_types.TestDirector_var_pint_set)
    __swig_setmethods__["var_hello"] = _primitive_types.TestDirector_var_hello_set
    __swig_getmethods__["var_hello"] = _primitive_types.TestDirector_var_hello_get
    if _newclass:var_hello = _swig_property(_primitive_types.TestDirector_var_hello_get, _primitive_types.TestDirector_var_hello_set)
    __swig_setmethods__["var_myint"] = _primitive_types.TestDirector_var_myint_set
    __swig_getmethods__["var_myint"] = _primitive_types.TestDirector_var_myint_get
    if _newclass:var_myint = _swig_property(_primitive_types.TestDirector_var_myint_get, _primitive_types.TestDirector_var_myint_set)
    __swig_setmethods__["var_parami"] = _primitive_types.TestDirector_var_parami_set
    __swig_getmethods__["var_parami"] = _primitive_types.TestDirector_var_parami_get
    if _newclass:var_parami = _swig_property(_primitive_types.TestDirector_var_parami_get, _primitive_types.TestDirector_var_parami_set)
    __swig_setmethods__["var_paramd"] = _primitive_types.TestDirector_var_paramd_set
    __swig_getmethods__["var_paramd"] = _primitive_types.TestDirector_var_paramd_get
    if _newclass:var_paramd = _swig_property(_primitive_types.TestDirector_var_paramd_get, _primitive_types.TestDirector_var_paramd_set)
    __swig_setmethods__["var_paramc"] = _primitive_types.TestDirector_var_paramc_set
    __swig_getmethods__["var_paramc"] = _primitive_types.TestDirector_var_paramc_get
    if _newclass:var_paramc = _swig_property(_primitive_types.TestDirector_var_paramc_get, _primitive_types.TestDirector_var_paramc_set)
    __swig_setmethods__["var_sizet"] = _primitive_types.TestDirector_var_sizet_set
    __swig_getmethods__["var_sizet"] = _primitive_types.TestDirector_var_sizet_get
    if _newclass:var_sizet = _swig_property(_primitive_types.TestDirector_var_sizet_get, _primitive_types.TestDirector_var_sizet_set)
    __swig_setmethods__["var_namet"] = _primitive_types.TestDirector_var_namet_set
    __swig_getmethods__["var_namet"] = _primitive_types.TestDirector_var_namet_get
    if _newclass:var_namet = _swig_property(_primitive_types.TestDirector_var_namet_get, _primitive_types.TestDirector_var_namet_set)
    def val_bool(self, *args): return _primitive_types.TestDirector_val_bool(self, *args)
    def val_schar(self, *args): return _primitive_types.TestDirector_val_schar(self, *args)
    def val_uchar(self, *args): return _primitive_types.TestDirector_val_uchar(self, *args)
    def val_int(self, *args): return _primitive_types.TestDirector_val_int(self, *args)
    def val_uint(self, *args): return _primitive_types.TestDirector_val_uint(self, *args)
    def val_short(self, *args): return _primitive_types.TestDirector_val_short(self, *args)
    def val_ushort(self, *args): return _primitive_types.TestDirector_val_ushort(self, *args)
    def val_long(self, *args): return _primitive_types.TestDirector_val_long(self, *args)
    def val_ulong(self, *args): return _primitive_types.TestDirector_val_ulong(self, *args)
    def val_llong(self, *args): return _primitive_types.TestDirector_val_llong(self, *args)
    def val_ullong(self, *args): return _primitive_types.TestDirector_val_ullong(self, *args)
    def val_char(self, *args): return _primitive_types.TestDirector_val_char(self, *args)
    def val_pchar(self, *args): return _primitive_types.TestDirector_val_pchar(self, *args)
    def val_pcharc(self, *args): return _primitive_types.TestDirector_val_pcharc(self, *args)
    def val_pint(self, *args): return _primitive_types.TestDirector_val_pint(self, *args)
    def val_hello(self, *args): return _primitive_types.TestDirector_val_hello(self, *args)
    def val_myint(self, *args): return _primitive_types.TestDirector_val_myint(self, *args)
    def val_parami(self, *args): return _primitive_types.TestDirector_val_parami(self, *args)
    def val_paramd(self, *args): return _primitive_types.TestDirector_val_paramd(self, *args)
    def val_paramc(self, *args): return _primitive_types.TestDirector_val_paramc(self, *args)
    def val_sizet(self, *args): return _primitive_types.TestDirector_val_sizet(self, *args)
    def ref_bool(self, *args): return _primitive_types.TestDirector_ref_bool(self, *args)
    def ref_schar(self, *args): return _primitive_types.TestDirector_ref_schar(self, *args)
    def ref_uchar(self, *args): return _primitive_types.TestDirector_ref_uchar(self, *args)
    def ref_int(self, *args): return _primitive_types.TestDirector_ref_int(self, *args)
    def ref_uint(self, *args): return _primitive_types.TestDirector_ref_uint(self, *args)
    def ref_short(self, *args): return _primitive_types.TestDirector_ref_short(self, *args)
    def ref_ushort(self, *args): return _primitive_types.TestDirector_ref_ushort(self, *args)
    def ref_long(self, *args): return _primitive_types.TestDirector_ref_long(self, *args)
    def ref_ulong(self, *args): return _primitive_types.TestDirector_ref_ulong(self, *args)
    def ref_llong(self, *args): return _primitive_types.TestDirector_ref_llong(self, *args)
    def ref_ullong(self, *args): return _primitive_types.TestDirector_ref_ullong(self, *args)
    def ref_char(self, *args): return _primitive_types.TestDirector_ref_char(self, *args)
    def ref_pchar(self, *args): return _primitive_types.TestDirector_ref_pchar(self, *args)
    def ref_pcharc(self, *args): return _primitive_types.TestDirector_ref_pcharc(self, *args)
    def ref_pint(self, *args): return _primitive_types.TestDirector_ref_pint(self, *args)
    def ref_hello(self, *args): return _primitive_types.TestDirector_ref_hello(self, *args)
    def ref_myint(self, *args): return _primitive_types.TestDirector_ref_myint(self, *args)
    def ref_parami(self, *args): return _primitive_types.TestDirector_ref_parami(self, *args)
    def ref_paramd(self, *args): return _primitive_types.TestDirector_ref_paramd(self, *args)
    def ref_paramc(self, *args): return _primitive_types.TestDirector_ref_paramc(self, *args)
    def ref_sizet(self, *args): return _primitive_types.TestDirector_ref_sizet(self, *args)
    def vval_bool(self, *args): return _primitive_types.TestDirector_vval_bool(self, *args)
    def vval_schar(self, *args): return _primitive_types.TestDirector_vval_schar(self, *args)
    def vval_uchar(self, *args): return _primitive_types.TestDirector_vval_uchar(self, *args)
    def vval_int(self, *args): return _primitive_types.TestDirector_vval_int(self, *args)
    def vval_uint(self, *args): return _primitive_types.TestDirector_vval_uint(self, *args)
    def vval_short(self, *args): return _primitive_types.TestDirector_vval_short(self, *args)
    def vval_ushort(self, *args): return _primitive_types.TestDirector_vval_ushort(self, *args)
    def vval_long(self, *args): return _primitive_types.TestDirector_vval_long(self, *args)
    def vval_ulong(self, *args): return _primitive_types.TestDirector_vval_ulong(self, *args)
    def vval_llong(self, *args): return _primitive_types.TestDirector_vval_llong(self, *args)
    def vval_ullong(self, *args): return _primitive_types.TestDirector_vval_ullong(self, *args)
    def vval_char(self, *args): return _primitive_types.TestDirector_vval_char(self, *args)
    def vval_pchar(self, *args): return _primitive_types.TestDirector_vval_pchar(self, *args)
    def vval_pcharc(self, *args): return _primitive_types.TestDirector_vval_pcharc(self, *args)
    def vval_pint(self, *args): return _primitive_types.TestDirector_vval_pint(self, *args)
    def vval_hello(self, *args): return _primitive_types.TestDirector_vval_hello(self, *args)
    def vval_myint(self, *args): return _primitive_types.TestDirector_vval_myint(self, *args)
    def vval_parami(self, *args): return _primitive_types.TestDirector_vval_parami(self, *args)
    def vval_paramd(self, *args): return _primitive_types.TestDirector_vval_paramd(self, *args)
    def vval_paramc(self, *args): return _primitive_types.TestDirector_vval_paramc(self, *args)
    def vval_sizet(self, *args): return _primitive_types.TestDirector_vval_sizet(self, *args)
    def vref_bool(self, *args): return _primitive_types.TestDirector_vref_bool(self, *args)
    def vref_schar(self, *args): return _primitive_types.TestDirector_vref_schar(self, *args)
    def vref_uchar(self, *args): return _primitive_types.TestDirector_vref_uchar(self, *args)
    def vref_int(self, *args): return _primitive_types.TestDirector_vref_int(self, *args)
    def vref_uint(self, *args): return _primitive_types.TestDirector_vref_uint(self, *args)
    def vref_short(self, *args): return _primitive_types.TestDirector_vref_short(self, *args)
    def vref_ushort(self, *args): return _primitive_types.TestDirector_vref_ushort(self, *args)
    def vref_long(self, *args): return _primitive_types.TestDirector_vref_long(self, *args)
    def vref_ulong(self, *args): return _primitive_types.TestDirector_vref_ulong(self, *args)
    def vref_llong(self, *args): return _primitive_types.TestDirector_vref_llong(self, *args)
    def vref_ullong(self, *args): return _primitive_types.TestDirector_vref_ullong(self, *args)
    def vref_char(self, *args): return _primitive_types.TestDirector_vref_char(self, *args)
    def vref_pchar(self, *args): return _primitive_types.TestDirector_vref_pchar(self, *args)
    def vref_pcharc(self, *args): return _primitive_types.TestDirector_vref_pcharc(self, *args)
    def vref_pint(self, *args): return _primitive_types.TestDirector_vref_pint(self, *args)
    def vref_hello(self, *args): return _primitive_types.TestDirector_vref_hello(self, *args)
    def vref_myint(self, *args): return _primitive_types.TestDirector_vref_myint(self, *args)
    def vref_parami(self, *args): return _primitive_types.TestDirector_vref_parami(self, *args)
    def vref_paramd(self, *args): return _primitive_types.TestDirector_vref_paramd(self, *args)
    def vref_paramc(self, *args): return _primitive_types.TestDirector_vref_paramc(self, *args)
    def vref_sizet(self, *args): return _primitive_types.TestDirector_vref_sizet(self, *args)
    def wrp_vref_bool(self, *args): return _primitive_types.TestDirector_wrp_vref_bool(self, *args)
    def wrp_vref_schar(self, *args): return _primitive_types.TestDirector_wrp_vref_schar(self, *args)
    def wrp_vref_uchar(self, *args): return _primitive_types.TestDirector_wrp_vref_uchar(self, *args)
    def wrp_vref_int(self, *args): return _primitive_types.TestDirector_wrp_vref_int(self, *args)
    def wrp_vref_uint(self, *args): return _primitive_types.TestDirector_wrp_vref_uint(self, *args)
    def wrp_vref_short(self, *args): return _primitive_types.TestDirector_wrp_vref_short(self, *args)
    def wrp_vref_ushort(self, *args): return _primitive_types.TestDirector_wrp_vref_ushort(self, *args)
    def wrp_vref_long(self, *args): return _primitive_types.TestDirector_wrp_vref_long(self, *args)
    def wrp_vref_ulong(self, *args): return _primitive_types.TestDirector_wrp_vref_ulong(self, *args)
    def wrp_vref_llong(self, *args): return _primitive_types.TestDirector_wrp_vref_llong(self, *args)
    def wrp_vref_ullong(self, *args): return _primitive_types.TestDirector_wrp_vref_ullong(self, *args)
    def wrp_vref_char(self, *args): return _primitive_types.TestDirector_wrp_vref_char(self, *args)
    def wrp_vref_pchar(self, *args): return _primitive_types.TestDirector_wrp_vref_pchar(self, *args)
    def wrp_vref_pcharc(self, *args): return _primitive_types.TestDirector_wrp_vref_pcharc(self, *args)
    def wrp_vref_pint(self, *args): return _primitive_types.TestDirector_wrp_vref_pint(self, *args)
    def wrp_vref_hello(self, *args): return _primitive_types.TestDirector_wrp_vref_hello(self, *args)
    def wrp_vref_myint(self, *args): return _primitive_types.TestDirector_wrp_vref_myint(self, *args)
    def wrp_vref_parami(self, *args): return _primitive_types.TestDirector_wrp_vref_parami(self, *args)
    def wrp_vref_paramd(self, *args): return _primitive_types.TestDirector_wrp_vref_paramd(self, *args)
    def wrp_vref_paramc(self, *args): return _primitive_types.TestDirector_wrp_vref_paramc(self, *args)
    def wrp_vref_sizet(self, *args): return _primitive_types.TestDirector_wrp_vref_sizet(self, *args)
    def wrp_vval_bool(self, *args): return _primitive_types.TestDirector_wrp_vval_bool(self, *args)
    def wrp_vval_schar(self, *args): return _primitive_types.TestDirector_wrp_vval_schar(self, *args)
    def wrp_vval_uchar(self, *args): return _primitive_types.TestDirector_wrp_vval_uchar(self, *args)
    def wrp_vval_int(self, *args): return _primitive_types.TestDirector_wrp_vval_int(self, *args)
    def wrp_vval_uint(self, *args): return _primitive_types.TestDirector_wrp_vval_uint(self, *args)
    def wrp_vval_short(self, *args): return _primitive_types.TestDirector_wrp_vval_short(self, *args)
    def wrp_vval_ushort(self, *args): return _primitive_types.TestDirector_wrp_vval_ushort(self, *args)
    def wrp_vval_long(self, *args): return _primitive_types.TestDirector_wrp_vval_long(self, *args)
    def wrp_vval_ulong(self, *args): return _primitive_types.TestDirector_wrp_vval_ulong(self, *args)
    def wrp_vval_llong(self, *args): return _primitive_types.TestDirector_wrp_vval_llong(self, *args)
    def wrp_vval_ullong(self, *args): return _primitive_types.TestDirector_wrp_vval_ullong(self, *args)
    def wrp_vval_char(self, *args): return _primitive_types.TestDirector_wrp_vval_char(self, *args)
    def wrp_vval_pchar(self, *args): return _primitive_types.TestDirector_wrp_vval_pchar(self, *args)
    def wrp_vval_pcharc(self, *args): return _primitive_types.TestDirector_wrp_vval_pcharc(self, *args)
    def wrp_vval_pint(self, *args): return _primitive_types.TestDirector_wrp_vval_pint(self, *args)
    def wrp_vval_hello(self, *args): return _primitive_types.TestDirector_wrp_vval_hello(self, *args)
    def wrp_vval_myint(self, *args): return _primitive_types.TestDirector_wrp_vval_myint(self, *args)
    def wrp_vval_parami(self, *args): return _primitive_types.TestDirector_wrp_vval_parami(self, *args)
    def wrp_vval_paramd(self, *args): return _primitive_types.TestDirector_wrp_vval_paramd(self, *args)
    def wrp_vval_paramc(self, *args): return _primitive_types.TestDirector_wrp_vval_paramc(self, *args)
    def wrp_vval_sizet(self, *args): return _primitive_types.TestDirector_wrp_vval_sizet(self, *args)
    def c_check(self): return _primitive_types.TestDirector_c_check(self)
    def v_check(self): return _primitive_types.TestDirector_v_check(self)
    def ovr_val(self, *args): return _primitive_types.TestDirector_ovr_val(self, *args)
    def ovr_ref(self, *args): return _primitive_types.TestDirector_ovr_ref(self, *args)
    def vtest(self, *args): return _primitive_types.TestDirector_vtest(self, *args)
    def __disown__(self):
        self.this.disown()
        _primitive_types.disown_TestDirector(self)
        return weakref_proxy(self)
TestDirector_swigregister = _primitive_types.TestDirector_swigregister
TestDirector_swigregister(TestDirector)


def v_check():
  return _primitive_types.v_check()
v_check = _primitive_types.v_check

def char_foo(*args):
  return _primitive_types.char_foo(*args)
char_foo = _primitive_types.char_foo

def SetPos(*args):
  return _primitive_types.SetPos(*args)
SetPos = _primitive_types.SetPos

def val_double_2(*args):
  return _primitive_types.val_double_2(*args)
val_double_2 = _primitive_types.val_double_2

def val_double(*args):
  return _primitive_types.val_double(*args)
val_double = _primitive_types.val_double

def val_float_2(*args):
  return _primitive_types.val_float_2(*args)
val_float_2 = _primitive_types.val_float_2

def regression_test_for_bug1699646(f=1e-02):
  return _primitive_types.regression_test_for_bug1699646(f)
regression_test_for_bug1699646 = _primitive_types.regression_test_for_bug1699646

def val_float(*args):
  return _primitive_types.val_float(*args)
val_float = _primitive_types.val_float

def new_pchar(*args):
  return _primitive_types.new_pchar(*args)
new_pchar = _primitive_types.new_pchar

def delete_pchar(*args):
  return _primitive_types.delete_pchar(*args)
delete_pchar = _primitive_types.delete_pchar

def pchar_getitem(*args):
  return _primitive_types.pchar_getitem(*args)
pchar_getitem = _primitive_types.pchar_getitem

def pchar_setitem(*args):
  return _primitive_types.pchar_setitem(*args)
pchar_setitem = _primitive_types.pchar_setitem
# This file is compatible with both classic and new-style classes.


