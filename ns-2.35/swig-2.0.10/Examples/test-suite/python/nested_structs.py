# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_nested_structs', [dirname(__file__)])
        except ImportError:
            import _nested_structs
            return _nested_structs
        if fp is not None:
            try:
                _mod = imp.load_module('_nested_structs', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _nested_structs = swig_import_helper()
    del swig_import_helper
else:
    import _nested_structs
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class Outer(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer, name)
    __repr__ = _swig_repr
    __swig_getmethods__["inner1"] = _nested_structs.Outer_inner1_get
    if _newclass:inner1 = _swig_property(_nested_structs.Outer_inner1_get)
    __swig_getmethods__["inner2"] = _nested_structs.Outer_inner2_get
    if _newclass:inner2 = _swig_property(_nested_structs.Outer_inner2_get)
    __swig_getmethods__["inner3"] = _nested_structs.Outer_inner3_get
    if _newclass:inner3 = _swig_property(_nested_structs.Outer_inner3_get)
    __swig_getmethods__["inner4"] = _nested_structs.Outer_inner4_get
    if _newclass:inner4 = _swig_property(_nested_structs.Outer_inner4_get)
    __swig_getmethods__["inside1"] = _nested_structs.Outer_inside1_get
    if _newclass:inside1 = _swig_property(_nested_structs.Outer_inside1_get)
    __swig_getmethods__["inside2"] = _nested_structs.Outer_inside2_get
    if _newclass:inside2 = _swig_property(_nested_structs.Outer_inside2_get)
    __swig_getmethods__["inside3"] = _nested_structs.Outer_inside3_get
    if _newclass:inside3 = _swig_property(_nested_structs.Outer_inside3_get)
    __swig_getmethods__["inside4"] = _nested_structs.Outer_inside4_get
    if _newclass:inside4 = _swig_property(_nested_structs.Outer_inside4_get)
    def __init__(self): 
        this = _nested_structs.new_Outer()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer
    __del__ = lambda self : None;
Outer_swigregister = _nested_structs.Outer_swigregister
Outer_swigregister(Outer)

class Outer_inside4(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inside4, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inside4, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inside4_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inside4_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inside4_val_get, _nested_structs.Outer_inside4_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inside4()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inside4
    __del__ = lambda self : None;
Outer_inside4_swigregister = _nested_structs.Outer_inside4_swigregister
Outer_inside4_swigregister(Outer_inside4)
cvar = _nested_structs.cvar

class Outer_inside3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inside3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inside3, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inside3_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inside3_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inside3_val_get, _nested_structs.Outer_inside3_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inside3()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inside3
    __del__ = lambda self : None;
Outer_inside3_swigregister = _nested_structs.Outer_inside3_swigregister
Outer_inside3_swigregister(Outer_inside3)

class Outer_inside2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inside2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inside2, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inside2_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inside2_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inside2_val_get, _nested_structs.Outer_inside2_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inside2()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inside2
    __del__ = lambda self : None;
Outer_inside2_swigregister = _nested_structs.Outer_inside2_swigregister
Outer_inside2_swigregister(Outer_inside2)

class Outer_inside1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inside1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inside1, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inside1_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inside1_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inside1_val_get, _nested_structs.Outer_inside1_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inside1()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inside1
    __del__ = lambda self : None;
Outer_inside1_swigregister = _nested_structs.Outer_inside1_swigregister
Outer_inside1_swigregister(Outer_inside1)

class Outer_inner4(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inner4, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inner4, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inner4_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inner4_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inner4_val_get, _nested_structs.Outer_inner4_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inner4()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inner4
    __del__ = lambda self : None;
Outer_inner4_swigregister = _nested_structs.Outer_inner4_swigregister
Outer_inner4_swigregister(Outer_inner4)

class Outer_inner3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inner3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inner3, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inner3_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inner3_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inner3_val_get, _nested_structs.Outer_inner3_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inner3()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inner3
    __del__ = lambda self : None;
Outer_inner3_swigregister = _nested_structs.Outer_inner3_swigregister
Outer_inner3_swigregister(Outer_inner3)

class Outer_inner2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inner2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inner2, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inner2_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inner2_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inner2_val_get, _nested_structs.Outer_inner2_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inner2()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inner2
    __del__ = lambda self : None;
Outer_inner2_swigregister = _nested_structs.Outer_inner2_swigregister
Outer_inner2_swigregister(Outer_inner2)

class Outer_inner1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Outer_inner1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Outer_inner1, name)
    __repr__ = _swig_repr
    __swig_setmethods__["val"] = _nested_structs.Outer_inner1_val_set
    __swig_getmethods__["val"] = _nested_structs.Outer_inner1_val_get
    if _newclass:val = _swig_property(_nested_structs.Outer_inner1_val_get, _nested_structs.Outer_inner1_val_set)
    def __init__(self): 
        this = _nested_structs.new_Outer_inner1()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _nested_structs.delete_Outer_inner1
    __del__ = lambda self : None;
Outer_inner1_swigregister = _nested_structs.Outer_inner1_swigregister
Outer_inner1_swigregister(Outer_inner1)


def setValues(*args):
  return _nested_structs.setValues(*args)
setValues = _nested_structs.setValues
# This file is compatible with both classic and new-style classes.


