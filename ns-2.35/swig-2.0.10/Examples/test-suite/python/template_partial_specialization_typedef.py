# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_template_partial_specialization_typedef', [dirname(__file__)])
        except ImportError:
            import _template_partial_specialization_typedef
            return _template_partial_specialization_typedef
        if fp is not None:
            try:
                _mod = imp.load_module('_template_partial_specialization_typedef', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _template_partial_specialization_typedef = swig_import_helper()
    del swig_import_helper
else:
    import _template_partial_specialization_typedef
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


class A(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A, name)
    __repr__ = _swig_repr
    def a(self): return _template_partial_specialization_typedef.A_a(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_A()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_A
    __del__ = lambda self : None;
A_swigregister = _template_partial_specialization_typedef.A_swigregister
A_swigregister(A)

class B(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B
    __del__ = lambda self : None;
B_swigregister = _template_partial_specialization_typedef.B_swigregister
B_swigregister(B)

class C(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, C, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, C, name)
    __repr__ = _swig_repr
    def c(self): return _template_partial_specialization_typedef.C_c(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_C()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_C
    __del__ = lambda self : None;
C_swigregister = _template_partial_specialization_typedef.C_swigregister
C_swigregister(C)

class D(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, D, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, D, name)
    __repr__ = _swig_repr
    def d(self): return _template_partial_specialization_typedef.D_d(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_D()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_D
    __del__ = lambda self : None;
D_swigregister = _template_partial_specialization_typedef.D_swigregister
D_swigregister(D)

class E(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, E, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, E, name)
    __repr__ = _swig_repr
    def e(self): return _template_partial_specialization_typedef.E_e(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_E()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_E
    __del__ = lambda self : None;
E_swigregister = _template_partial_specialization_typedef.E_swigregister
E_swigregister(E)

class F(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, F, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, F, name)
    __repr__ = _swig_repr
    def f(self): return _template_partial_specialization_typedef.F_f(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_F()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_F
    __del__ = lambda self : None;
F_swigregister = _template_partial_specialization_typedef.F_swigregister
F_swigregister(F)

class G(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, G, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, G, name)
    __repr__ = _swig_repr
    def g(self): return _template_partial_specialization_typedef.G_g(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_G()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_G
    __del__ = lambda self : None;
G_swigregister = _template_partial_specialization_typedef.G_swigregister
G_swigregister(G)

class H(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, H, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, H, name)
    __repr__ = _swig_repr
    def h(self): return _template_partial_specialization_typedef.H_h(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_H()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_H
    __del__ = lambda self : None;
H_swigregister = _template_partial_specialization_typedef.H_swigregister
H_swigregister(H)

class I(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, I, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, I, name)
    __repr__ = _swig_repr
    def i(self): return _template_partial_specialization_typedef.I_i(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_I()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_I
    __del__ = lambda self : None;
I_swigregister = _template_partial_specialization_typedef.I_swigregister
I_swigregister(I)

class J(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, J, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, J, name)
    __repr__ = _swig_repr
    def j(self): return _template_partial_specialization_typedef.J_j(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_J()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_J
    __del__ = lambda self : None;
J_swigregister = _template_partial_specialization_typedef.J_swigregister
J_swigregister(J)

class K(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, K, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, K, name)
    __repr__ = _swig_repr
    def k(self): return _template_partial_specialization_typedef.K_k(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_K()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_K
    __del__ = lambda self : None;
K_swigregister = _template_partial_specialization_typedef.K_swigregister
K_swigregister(K)

class L(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, L, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, L, name)
    __repr__ = _swig_repr
    def l(self): return _template_partial_specialization_typedef.L_l(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_L()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_L
    __del__ = lambda self : None;
L_swigregister = _template_partial_specialization_typedef.L_swigregister
L_swigregister(L)

class BB(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BB, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BB, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.BB_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_BB()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_BB
    __del__ = lambda self : None;
BB_swigregister = _template_partial_specialization_typedef.BB_swigregister
BB_swigregister(BB)

class BBB(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BBB, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BBB, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.BBB_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_BBB()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_BBB
    __del__ = lambda self : None;
BBB_swigregister = _template_partial_specialization_typedef.BBB_swigregister
BBB_swigregister(BBB)

class BBBB(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BBBB, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BBBB, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.BBBB_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_BBBB()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_BBBB
    __del__ = lambda self : None;
BBBB_swigregister = _template_partial_specialization_typedef.BBBB_swigregister
BBBB_swigregister(BBBB)

class BBBBB(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BBBBB, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BBBBB, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.BBBBB_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_BBBBB()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_BBBBB
    __del__ = lambda self : None;
BBBBB_swigregister = _template_partial_specialization_typedef.BBBBB_swigregister
BBBBB_swigregister(BBBBB)

class B1(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B1, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B1, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B1_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B1()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B1
    __del__ = lambda self : None;
B1_swigregister = _template_partial_specialization_typedef.B1_swigregister
B1_swigregister(B1)

class B2(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B2, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B2, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B2_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B2()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B2
    __del__ = lambda self : None;
B2_swigregister = _template_partial_specialization_typedef.B2_swigregister
B2_swigregister(B2)

class B3(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B3, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B3, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B3_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B3()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B3
    __del__ = lambda self : None;
B3_swigregister = _template_partial_specialization_typedef.B3_swigregister
B3_swigregister(B3)

class B4(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B4, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B4, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B4_b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B4()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B4
    __del__ = lambda self : None;
B4_swigregister = _template_partial_specialization_typedef.B4_swigregister
B4_swigregister(B4)

class Concrete(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Concrete, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Concrete, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_Concrete()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_Concrete
    __del__ = lambda self : None;
Concrete_swigregister = _template_partial_specialization_typedef.Concrete_swigregister
Concrete_swigregister(Concrete)

class A_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, A_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, A_, name)
    __repr__ = _swig_repr
    def a(self): return _template_partial_specialization_typedef.A__a(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_A_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_A_
    __del__ = lambda self : None;
A__swigregister = _template_partial_specialization_typedef.A__swigregister
A__swigregister(A_)

class B_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B_, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B__b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B_
    __del__ = lambda self : None;
B__swigregister = _template_partial_specialization_typedef.B__swigregister
B__swigregister(B_)

class C_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, C_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, C_, name)
    __repr__ = _swig_repr
    def c(self): return _template_partial_specialization_typedef.C__c(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_C_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_C_
    __del__ = lambda self : None;
C__swigregister = _template_partial_specialization_typedef.C__swigregister
C__swigregister(C_)

class D_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, D_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, D_, name)
    __repr__ = _swig_repr
    def d(self): return _template_partial_specialization_typedef.D__d(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_D_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_D_
    __del__ = lambda self : None;
D__swigregister = _template_partial_specialization_typedef.D__swigregister
D__swigregister(D_)

class E_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, E_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, E_, name)
    __repr__ = _swig_repr
    def e(self): return _template_partial_specialization_typedef.E__e(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_E_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_E_
    __del__ = lambda self : None;
E__swigregister = _template_partial_specialization_typedef.E__swigregister
E__swigregister(E_)

class F_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, F_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, F_, name)
    __repr__ = _swig_repr
    def f(self): return _template_partial_specialization_typedef.F__f(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_F_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_F_
    __del__ = lambda self : None;
F__swigregister = _template_partial_specialization_typedef.F__swigregister
F__swigregister(F_)

class G_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, G_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, G_, name)
    __repr__ = _swig_repr
    def g(self): return _template_partial_specialization_typedef.G__g(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_G_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_G_
    __del__ = lambda self : None;
G__swigregister = _template_partial_specialization_typedef.G__swigregister
G__swigregister(G_)

class C1_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, C1_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, C1_, name)
    __repr__ = _swig_repr
    def c(self): return _template_partial_specialization_typedef.C1__c(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_C1_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_C1_
    __del__ = lambda self : None;
C1__swigregister = _template_partial_specialization_typedef.C1__swigregister
C1__swigregister(C1_)

class C2_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, C2_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, C2_, name)
    __repr__ = _swig_repr
    def c(self): return _template_partial_specialization_typedef.C2__c(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_C2_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_C2_
    __del__ = lambda self : None;
C2__swigregister = _template_partial_specialization_typedef.C2__swigregister
C2__swigregister(C2_)

class C3_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, C3_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, C3_, name)
    __repr__ = _swig_repr
    def c(self): return _template_partial_specialization_typedef.C3__c(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_C3_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_C3_
    __del__ = lambda self : None;
C3__swigregister = _template_partial_specialization_typedef.C3__swigregister
C3__swigregister(C3_)

class C4_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, C4_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, C4_, name)
    __repr__ = _swig_repr
    def c(self): return _template_partial_specialization_typedef.C4__c(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_C4_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_C4_
    __del__ = lambda self : None;
C4__swigregister = _template_partial_specialization_typedef.C4__swigregister
C4__swigregister(C4_)

class B1_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, B1_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, B1_, name)
    __repr__ = _swig_repr
    def b(self): return _template_partial_specialization_typedef.B1__b(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_B1_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_B1_
    __del__ = lambda self : None;
B1__swigregister = _template_partial_specialization_typedef.B1__swigregister
B1__swigregister(B1_)

class E1_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, E1_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, E1_, name)
    __repr__ = _swig_repr
    def e(self): return _template_partial_specialization_typedef.E1__e(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_E1_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_E1_
    __del__ = lambda self : None;
E1__swigregister = _template_partial_specialization_typedef.E1__swigregister
E1__swigregister(E1_)

class E2_(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, E2_, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, E2_, name)
    __repr__ = _swig_repr
    def e(self): return _template_partial_specialization_typedef.E2__e(self)
    def __init__(self): 
        this = _template_partial_specialization_typedef.new_E2_()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _template_partial_specialization_typedef.delete_E2_
    __del__ = lambda self : None;
E2__swigregister = _template_partial_specialization_typedef.E2__swigregister
E2__swigregister(E2_)

# This file is compatible with both classic and new-style classes.


