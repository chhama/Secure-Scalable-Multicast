# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_preproc_constants', [dirname(__file__)])
        except ImportError:
            import _preproc_constants
            return _preproc_constants
        if fp is not None:
            try:
                _mod = imp.load_module('_preproc_constants', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _preproc_constants = swig_import_helper()
    del swig_import_helper
else:
    import _preproc_constants
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


CONST_INT1 = _preproc_constants.CONST_INT1
CONST_INT2 = _preproc_constants.CONST_INT2
CONST_UINT1 = _preproc_constants.CONST_UINT1
CONST_UINT2 = _preproc_constants.CONST_UINT2
CONST_UINT3 = _preproc_constants.CONST_UINT3
CONST_UINT4 = _preproc_constants.CONST_UINT4
CONST_LONG1 = _preproc_constants.CONST_LONG1
CONST_LONG2 = _preproc_constants.CONST_LONG2
CONST_LONG3 = _preproc_constants.CONST_LONG3
CONST_LONG4 = _preproc_constants.CONST_LONG4
CONST_LLONG1 = _preproc_constants.CONST_LLONG1
CONST_LLONG2 = _preproc_constants.CONST_LLONG2
CONST_LLONG3 = _preproc_constants.CONST_LLONG3
CONST_LLONG4 = _preproc_constants.CONST_LLONG4
CONST_ULLONG1 = _preproc_constants.CONST_ULLONG1
CONST_ULLONG2 = _preproc_constants.CONST_ULLONG2
CONST_ULLONG3 = _preproc_constants.CONST_ULLONG3
CONST_ULLONG4 = _preproc_constants.CONST_ULLONG4
CONST_DOUBLE1 = _preproc_constants.CONST_DOUBLE1
CONST_DOUBLE2 = _preproc_constants.CONST_DOUBLE2
CONST_DOUBLE3 = _preproc_constants.CONST_DOUBLE3
CONST_DOUBLE4 = _preproc_constants.CONST_DOUBLE4
CONST_DOUBLE5 = _preproc_constants.CONST_DOUBLE5
CONST_DOUBLE6 = _preproc_constants.CONST_DOUBLE6
CONST_BOOL1 = _preproc_constants.CONST_BOOL1
CONST_BOOL2 = _preproc_constants.CONST_BOOL2
CONST_CHAR = _preproc_constants.CONST_CHAR
CONST_STRING1 = _preproc_constants.CONST_STRING1
CONST_STRING2 = _preproc_constants.CONST_STRING2
CONST_STRING3 = _preproc_constants.CONST_STRING3
INT_AND_BOOL = _preproc_constants.INT_AND_BOOL
INT_AND_INT = _preproc_constants.INT_AND_INT
INT_AND_UINT = _preproc_constants.INT_AND_UINT
INT_AND_LONG = _preproc_constants.INT_AND_LONG
INT_AND_ULONG = _preproc_constants.INT_AND_ULONG
INT_AND_LLONG = _preproc_constants.INT_AND_LLONG
INT_AND_ULLONG = _preproc_constants.INT_AND_ULLONG
BOOL_AND_BOOL = _preproc_constants.BOOL_AND_BOOL
EXPR_MULTIPLY = _preproc_constants.EXPR_MULTIPLY
EXPR_DIVIDE = _preproc_constants.EXPR_DIVIDE
EXPR_PLUS = _preproc_constants.EXPR_PLUS
EXPR_MINUS = _preproc_constants.EXPR_MINUS
EXPR_LSHIFT = _preproc_constants.EXPR_LSHIFT
EXPR_RSHIFT = _preproc_constants.EXPR_RSHIFT
EXPR_LTE = _preproc_constants.EXPR_LTE
EXPR_GTE = _preproc_constants.EXPR_GTE
EXPR_INEQUALITY = _preproc_constants.EXPR_INEQUALITY
EXPR_EQUALITY = _preproc_constants.EXPR_EQUALITY
EXPR_AND = _preproc_constants.EXPR_AND
EXPR_XOR = _preproc_constants.EXPR_XOR
EXPR_OR = _preproc_constants.EXPR_OR
EXPR_LAND = _preproc_constants.EXPR_LAND
EXPR_LOR = _preproc_constants.EXPR_LOR
EXPR_CONDITIONAL = _preproc_constants.EXPR_CONDITIONAL
kValue = _preproc_constants.kValue
# This file is compatible with both classic and new-style classes.


