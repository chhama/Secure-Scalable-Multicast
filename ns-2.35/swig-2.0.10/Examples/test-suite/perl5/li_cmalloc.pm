# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package li_cmalloc;
use base qw(Exporter);
use base qw(DynaLoader);
package li_cmallocc;
bootstrap li_cmalloc;
package li_cmalloc;
@EXPORT = qw();

# ---------- BASE METHODS -------------

package li_cmalloc;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package li_cmalloc;

*malloc_int = *li_cmallocc::malloc_int;
*calloc_int = *li_cmallocc::calloc_int;
*realloc_int = *li_cmallocc::realloc_int;
*free_int = *li_cmallocc::free_int;
*malloc_double = *li_cmallocc::malloc_double;
*calloc_double = *li_cmallocc::calloc_double;
*realloc_double = *li_cmallocc::realloc_double;
*free_double = *li_cmallocc::free_double;
*malloc_void = *li_cmallocc::malloc_void;
*calloc_void = *li_cmallocc::calloc_void;
*realloc_void = *li_cmallocc::realloc_void;
*free_void = *li_cmallocc::free_void;
*malloc_intp = *li_cmallocc::malloc_intp;
*calloc_intp = *li_cmallocc::calloc_intp;
*realloc_intp = *li_cmallocc::realloc_intp;
*free_intp = *li_cmallocc::free_intp;

# ------- VARIABLE STUBS --------

package li_cmalloc;

*sizeof_int = *li_cmallocc::sizeof_int;
*sizeof_double = *li_cmallocc::sizeof_double;
*sizeof_intp = *li_cmallocc::sizeof_intp;
1;
