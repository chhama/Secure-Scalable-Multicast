# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package array_typedef_memberin;
use base qw(Exporter);
use base qw(DynaLoader);
package array_typedef_memberinc;
bootstrap array_typedef_memberin;
package array_typedef_memberin;
@EXPORT = qw();

# ---------- BASE METHODS -------------

package array_typedef_memberin;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package array_typedef_memberin;

*test_1 = *array_typedef_memberinc::test_1;
*test_2 = *array_typedef_memberinc::test_2;
*test_3 = *array_typedef_memberinc::test_3;
*test_4 = *array_typedef_memberinc::test_4;
*test_5 = *array_typedef_memberinc::test_5;
*test_3r = *array_typedef_memberinc::test_3r;
*test_4r = *array_typedef_memberinc::test_4r;

############# Class : array_typedef_memberin::ExampleDetail ##############

package array_typedef_memberin::ExampleDetail;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( array_typedef_memberin );
%OWNER = ();
%ITERATORS = ();
*swig_node_list_get = *array_typedef_memberinc::ExampleDetail_node_list_get;
*swig_node_list_set = *array_typedef_memberinc::ExampleDetail_node_list_set;
*swig_node_list2_get = *array_typedef_memberinc::ExampleDetail_node_list2_get;
*swig_node_list2_set = *array_typedef_memberinc::ExampleDetail_node_list2_set;
*swig_node_list3_get = *array_typedef_memberinc::ExampleDetail_node_list3_get;
*swig_node_list3_set = *array_typedef_memberinc::ExampleDetail_node_list3_set;
*fn1 = *array_typedef_memberinc::ExampleDetail_fn1;
*fn2 = *array_typedef_memberinc::ExampleDetail_fn2;
*fn3 = *array_typedef_memberinc::ExampleDetail_fn3;
*fn4 = *array_typedef_memberinc::ExampleDetail_fn4;
*fn5 = *array_typedef_memberinc::ExampleDetail_fn5;
*fn6 = *array_typedef_memberinc::ExampleDetail_fn6;
*fn7 = *array_typedef_memberinc::ExampleDetail_fn7;
*fn8 = *array_typedef_memberinc::ExampleDetail_fn8;
*fn9 = *array_typedef_memberinc::ExampleDetail_fn9;
sub new {
    my $pkg = shift;
    my $self = array_typedef_memberinc::new_ExampleDetail(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        array_typedef_memberinc::delete_ExampleDetail($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


# ------- VARIABLE STUBS --------

package array_typedef_memberin;

1;
