# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package packageoption_a;
use base qw(DynaLoader);
package CommonPackagec;
bootstrap packageoption_a;
package packageoption_a;

# ------- FUNCTION WRAPPERS --------

package CommonPackage;


############# Class : CommonPackage::A ##############

package CommonPackage::A;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( CommonPackage );
%OWNER = ();
%ITERATORS = ();
*testInt = *CommonPackagec::A_testInt;
sub new {
    my $pkg = shift;
    my $self = CommonPackagec::new_A(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        CommonPackagec::delete_A($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


############# Class : CommonPackage::Base ##############

package CommonPackage::Base;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( CommonPackage );
%OWNER = ();
%ITERATORS = ();
*vmethod = *CommonPackagec::Base_vmethod;
*basemethod = *CommonPackagec::Base_basemethod;
sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        CommonPackagec::delete_Base($self);
        delete $OWNER{$self};
    }
}

sub new {
    my $pkg = shift;
    my $self = CommonPackagec::new_Base(@_);
    bless $self, $pkg if defined($self);
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


# ------- VARIABLE STUBS --------

package CommonPackage;

1;
