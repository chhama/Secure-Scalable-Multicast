# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

package arrays_dimensionless;
use base qw(Exporter);
use base qw(DynaLoader);
package arrays_dimensionlessc;
bootstrap arrays_dimensionless;
package arrays_dimensionless;
@EXPORT = qw();

# ---------- BASE METHODS -------------

package arrays_dimensionless;

sub TIEHASH {
    my ($classname,$obj) = @_;
    return bless $obj, $classname;
}

sub CLEAR { }

sub FIRSTKEY { }

sub NEXTKEY { }

sub FETCH {
    my ($self,$field) = @_;
    my $member_func = "swig_${field}_get";
    $self->$member_func();
}

sub STORE {
    my ($self,$field,$newval) = @_;
    my $member_func = "swig_${field}_set";
    $self->$member_func($newval);
}

sub this {
    my $ptr = shift;
    return tied(%$ptr);
}


# ------- FUNCTION WRAPPERS --------

package arrays_dimensionless;

*arr_bool = *arrays_dimensionlessc::arr_bool;
*arr_char = *arrays_dimensionlessc::arr_char;
*arr_schar = *arrays_dimensionlessc::arr_schar;
*arr_uchar = *arrays_dimensionlessc::arr_uchar;
*arr_short = *arrays_dimensionlessc::arr_short;
*arr_ushort = *arrays_dimensionlessc::arr_ushort;
*arr_int = *arrays_dimensionlessc::arr_int;
*arr_uint = *arrays_dimensionlessc::arr_uint;
*arr_long = *arrays_dimensionlessc::arr_long;
*arr_ulong = *arrays_dimensionlessc::arr_ulong;
*arr_ll = *arrays_dimensionlessc::arr_ll;
*arr_ull = *arrays_dimensionlessc::arr_ull;
*arr_float = *arrays_dimensionlessc::arr_float;
*arr_double = *arrays_dimensionlessc::arr_double;
*ptr_bool = *arrays_dimensionlessc::ptr_bool;
*ptr_char = *arrays_dimensionlessc::ptr_char;
*ptr_schar = *arrays_dimensionlessc::ptr_schar;
*ptr_uchar = *arrays_dimensionlessc::ptr_uchar;
*ptr_short = *arrays_dimensionlessc::ptr_short;
*ptr_ushort = *arrays_dimensionlessc::ptr_ushort;
*ptr_int = *arrays_dimensionlessc::ptr_int;
*ptr_uint = *arrays_dimensionlessc::ptr_uint;
*ptr_long = *arrays_dimensionlessc::ptr_long;
*ptr_ulong = *arrays_dimensionlessc::ptr_ulong;
*ptr_ll = *arrays_dimensionlessc::ptr_ll;
*ptr_ull = *arrays_dimensionlessc::ptr_ull;
*ptr_float = *arrays_dimensionlessc::ptr_float;
*ptr_double = *arrays_dimensionlessc::ptr_double;

############# Class : arrays_dimensionless::Bar ##############

package arrays_dimensionless::Bar;
use vars qw(@ISA %OWNER %ITERATORS %BLESSEDMEMBERS);
@ISA = qw( arrays_dimensionless );
%OWNER = ();
%ITERATORS = ();
*ints = *arrays_dimensionlessc::Bar_ints;
sub new {
    my $pkg = shift;
    my $self = arrays_dimensionlessc::new_Bar(@_);
    bless $self, $pkg if defined($self);
}

sub DESTROY {
    return unless $_[0]->isa('HASH');
    my $self = tied(%{$_[0]});
    return unless defined $self;
    delete $ITERATORS{$self};
    if (exists $OWNER{$self}) {
        arrays_dimensionlessc::delete_Bar($self);
        delete $OWNER{$self};
    }
}

sub DISOWN {
    my $self = shift;
    my $ptr = tied(%$self);
    delete $OWNER{$ptr};
}

sub ACQUIRE {
    my $self = shift;
    my $ptr = tied(%$self);
    $OWNER{$ptr} = 1;
}


# ------- VARIABLE STUBS --------

package arrays_dimensionless;

*globalints = *arrays_dimensionlessc::globalints;
*constglobalints = *arrays_dimensionlessc::constglobalints;
*Bar_ints = *arrays_dimensionlessc::Bar_ints;
1;
